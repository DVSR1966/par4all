//  {}
int main()
{
//  points to = {}
   my_list l1, l2, l3, l4;
//  {(l1[next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l2[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l3[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l4[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   my_list *l;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l2[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l3[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l4[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}

   l1.n = 1;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l2[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l3[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l4[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   l2.n = 2;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l2[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l3[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l4[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   l3.n = 3;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l2[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l3[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l4[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   l4.n = 4;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l2[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l3[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l4[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   l1.next = &l2;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],l2,
//   -Exact-);(l2[next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l3[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l4[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   l2.next = (my_list) NULL;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],l2,
//   -Exact-);(l2[next],*NULL_POINTER*,-Exact-);(l3[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l4[next],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   l3.next = (my_list) NULL;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],l2,
//   -Exact-);(l2[next],*NULL_POINTER*,-Exact-);(l3[next],
//   *NULL_POINTER*,-Exact-);(l4[next],*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-)}
   l4.next = (my_list) NULL;
//  {(l[0][next],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(l1[next],l2,
//   -Exact-);(l2[next],*NULL_POINTER*,-Exact-);(l3[next],
//   *NULL_POINTER*,-Exact-);(l4[next],*NULL_POINTER*,-Exact-)}

   l = &l1;
//  {(l,l1,-Exact-);(l1[next],l2,-Exact-);(l2[next],*NULL_POINTER*,
//   -Exact-);(l3[next],*NULL_POINTER*,-Exact-);(l4[next],
//   *NULL_POINTER*,-Exact-)}
   l = l->next;
//  {(l,l2,-Exact-);(l1[next],l2,-Exact-);(l2[next],*NULL_POINTER*,
//   -Exact-);(l3[next],*NULL_POINTER*,-Exact-);(l4[next],
//   *NULL_POINTER*,-Exact-)}
   *l = l3;
//  {(l,l2,-Exact-);(l1[next],l2,-Exact-);(l2[next],*NULL_POINTER*,
//   -Exact-);(l3[next],*NULL_POINTER*,-Exact-);(l4[next],
//   *NULL_POINTER*,-Exact-)}
   l = &l4;
//  {(l,l4,-Exact-);(l1[next],l2,-Exact-);(l2[next],*NULL_POINTER*,
//   -Exact-);(l3[next],*NULL_POINTER*,-Exact-);(l4[next],
//   *NULL_POINTER*,-Exact-)}
   l3.next = (my_list) NULL;
//  {(l,l4,-Exact-);(l1[next],l2,-Exact-);(l2[next],*NULL_POINTER*,
//   -Exact-);(l3[next],*NULL_POINTER*,-Exact-);(l4[next],
//   *NULL_POINTER*,-Exact-)}
   return 0;
}
