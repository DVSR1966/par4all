
POINTS-TO


// Points To IN:
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_2__1[0][0] , MAY
// _p_1_2__1[0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1[0][0].n -> _p_1_2__1_2__1[0][0][0] , MAY
// _p_1_2__1_2__1[0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1[0][0][0].n -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> _p_1_2__1_2__1_2__1_2__1[0][0]
//    [0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> *NULL_POINTER*
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].n
//     -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].n
//     -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][
//    0][0][0][0] , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY


// Points To OUT:
// *HEAP*_l_30.n -> *HEAP*_l_30 , MAY
// *HEAP*_l_30.n -> *NULL_POINTER* , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// reverse_copy -> *HEAP*_l_30 , MAY
// reverse_copy -> *NULL_POINTER* , MAY

rec reverse_copy(rec p)
{

// Points To: none

   rec r = (void *) 0;

// Points To:
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// r -> *NULL_POINTER* , EXACT

   rec q = p;

// Points To:
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// q -> *NULL_POINTER* , MAY
// q -> _p_1[0] , MAY
// r -> *NULL_POINTER* , EXACT

   while (q!=(void *) 0) {

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// *HEAP*_l_30.n -> *HEAP*_l_30 , MAY
// *HEAP*_l_30.n -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_2__1[0][0] , MAY
// _p_1_2__1[0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1[0][0].n -> _p_1_2__1_2__1[0][0][0] , MAY
// _p_1_2__1_2__1[0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1[0][0][0].n -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> _p_1_2__1_2__1_2__1_2__1[0][0]
//    [0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> *NULL_POINTER*
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// q -> _p_1[0] , MAY
// q -> _p_1_2__1[0][0] , MAY
// q -> _p_1_2__1_2__1[0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0
//    ] , MAY
// r -> *HEAP*_l_30 , MAY
// r -> *NULL_POINTER* , MAY

      rec t = (rec) malloc(sizeof(struct rec_st ));

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// *HEAP*_l_30.n -> *HEAP*_l_30 , MAY
// *HEAP*_l_30.n -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_2__1[0][0] , MAY
// _p_1_2__1[0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1[0][0].n -> _p_1_2__1_2__1[0][0][0] , MAY
// _p_1_2__1_2__1[0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1[0][0][0].n -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> _p_1_2__1_2__1_2__1_2__1[0][0]
//    [0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> *NULL_POINTER*
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// q -> _p_1[0] , MAY
// q -> _p_1_2__1[0][0] , MAY
// q -> _p_1_2__1_2__1[0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0
//    ] , MAY
// r -> *HEAP*_l_30 , MAY
// r -> *NULL_POINTER* , MAY
// t -> *HEAP*_l_30 , MAY

      t->i = q->i;

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// *HEAP*_l_30.n -> *HEAP*_l_30 , MAY
// *HEAP*_l_30.n -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_2__1[0][0] , MAY
// _p_1_2__1[0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1[0][0].n -> _p_1_2__1_2__1[0][0][0] , MAY
// _p_1_2__1_2__1[0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1[0][0][0].n -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> _p_1_2__1_2__1_2__1_2__1[0][0]
//    [0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> *NULL_POINTER*
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// q -> _p_1[0] , MAY
// q -> _p_1_2__1[0][0] , MAY
// q -> _p_1_2__1_2__1[0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0
//    ] , MAY
// r -> *HEAP*_l_30 , MAY
// r -> *NULL_POINTER* , MAY
// t -> *HEAP*_l_30 , MAY

      t->n = r;

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// *HEAP*_l_30.n -> *HEAP*_l_30 , MAY
// *HEAP*_l_30.n -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_2__1[0][0] , MAY
// _p_1_2__1[0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1[0][0].n -> _p_1_2__1_2__1[0][0][0] , MAY
// _p_1_2__1_2__1[0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1[0][0][0].n -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> _p_1_2__1_2__1_2__1_2__1[0][0]
//    [0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> *NULL_POINTER*
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].n
//     -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].n
//     -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][
//    0][0][0][0] , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// q -> _p_1[0] , MAY
// q -> _p_1_2__1[0][0] , MAY
// q -> _p_1_2__1_2__1[0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0
//    ] , MAY
// r -> *HEAP*_l_30 , MAY
// r -> *NULL_POINTER* , MAY
// t -> *HEAP*_l_30 , MAY

      q = q->n;

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// *HEAP*_l_30.n -> *HEAP*_l_30 , MAY
// *HEAP*_l_30.n -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_2__1[0][0] , MAY
// _p_1_2__1[0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1[0][0].n -> _p_1_2__1_2__1[0][0][0] , MAY
// _p_1_2__1_2__1[0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1[0][0][0].n -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1[0][0][0][0].n -> _p_1_2__1_2__1_2__1_2__1[0][0]
//    [0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> *NULL_POINTER*
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0].n -> 
//    _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0]
//     , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].n
//     -> *NULL_POINTER* , MAY
// _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0].n
//     -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][
//    0][0][0][0] , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// q -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// q -> *NULL_POINTER* , MAY
// q -> _p_1_2__1[0][0] , MAY
// q -> _p_1_2__1_2__1[0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1[0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1[0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0][0][0
//    ] , MAY
// q -> _p_1_2__1_2__1_2__1_2__1_2__1_2__1_2__1_2__1[0][0][0][0][0][0]
//    [0][0][0] , MAY
// r -> *HEAP*_l_30 , MAY
// r -> *NULL_POINTER* , MAY
// t -> *HEAP*_l_30 , MAY

      r = t;
   }

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b1 -> *ANY_MODULE*:*ANYWHERE*_b2 , MAY
// *HEAP*_l_30.n -> *HEAP*_l_30 , MAY
// *HEAP*_l_30.n -> *NULL_POINTER* , MAY
// p -> *ANY_MODULE*:*ANYWHERE*_b0 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY
// q -> *NULL_POINTER* , EXACT
// r -> *HEAP*_l_30 , MAY
// r -> *NULL_POINTER* , MAY

   return r;
}
