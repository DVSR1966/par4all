
Symbol table for "null01"

main

Declarations for module "main" with type "() -> int"

Variable list:

	Declared entity "TOP-LEVEL:*STATIC*" with type "area" with size 0
	Declared entity "main:*DYNAMIC*" with type "area" with size 18
	Declared entity "main:*HEAP*" with type "area" with size 0
	Declared entity "main:*STACK*" with type "area" with size 0
	Declared entity "main:*STATIC*" with type "area" with size 0
	Declared entity "main:0`__FUNCTION__" with type "variable" "char *"
	Declared entity "main:0`__func__" with type "variable" "char *"
	Declared entity "main:0`p" with type "variable" "int *"
	Declared entity "main:main" with type "variable" "int"
	Declared entity "null01!:*STATIC*" with type "area" with size 0

* empty extern declaration list *


Layout for return variable:

	Variable "main:main"	size = 4

Layouts for memory areas:

Layout for memory area "TOP-LEVEL:*STATIC*" of size 0:
	External Variable "TOP-LEVEL:_IO_2_1_stdin_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:_IO_2_1_stdout_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:_IO_2_1_stderr_"	offset = UNKNOWN,	size = unknown
	External Variable "TOP-LEVEL:stdin"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:stdout"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:stderr"	offset = UNKNOWN,	size = 8
	External Variable "TOP-LEVEL:sys_nerr"	offset = UNKNOWN,	size = 4
	External Variable "TOP-LEVEL:sys_errlist"	offset = UNKNOWN,	size = 8


Layout for memory area "main:*DYNAMIC*" of size 18:
	Variable "main:0`p"	offset = 10	size = 8
	Variable "main:0`__func__"	offset = 0	size = 5
	Variable "main:0`__FUNCTION__"	offset = 5	size = 5


Layout for memory area "main:*HEAP*" of size 0:
	* empty area *


Layout for memory area "main:*STACK*" of size 0:
	* empty area *


Layout for memory area "main:*STATIC*" of size 0:
	* empty area *


Layout for memory area "null01!:*STATIC*" of size 0:
	* empty area *

End of declarations for module main


Proper effetcs for "null01"

int main()
{
   int *p;
//             <    is written>: p
   p = (void *) 0;

   return 0;
}

Proper Pointer effetcs for "null01"

int main()
{
   int *p;
//             <    is written>: p
   p = (void *) 0;

   return 0;
}

POINTS TO

//  {}
int main()
{
//  {(p,*ANY_MODULE*:*NOWHERE*,-Exact-)}
   int *p;
//  {(p,*ANY_MODULE*:*NOWHERE*,-Exact-)}
   p = (void *) 0;
//  {(p,*NULL_POINTER*,-Exact-)}

   return 0;
}
