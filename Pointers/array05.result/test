
PROPER  EFFECTS

int main()
{
   int t[100][10][3];

   int (*p)[3];
   int *pu;

   int (*q)[10][3];
   int (*qu)[3];

   int (*r)[100][10][3];
   int (*ru)[10][3];
//             <    is written>: p
   
   
   p = &t[1][2];
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p
   (*p)[1] = 0;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p
   p[1][1] = 0;
//             <    is written>: pu

   pu = &t[1][2][0];
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: pu
   *pu = 0;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: pu
   pu[2] = 0;
//             <    is written>: q

   q = &t[1];
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: q
   ((*q)[2])[3] = 0;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: q
   q[1][2][3] = 0;
//             <    is written>: qu

   qu = &t[1][0];
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: qu
   (*qu)[1] = 0;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: qu
   qu[1][1] = 0;
//             <    is written>: r

   r = &t;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: r
   (((*r)[0])[0])[0] = 0;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: r
   (((*r)[1])[2])[3] = 0;
//             <    is written>: ru

   ru = &t[0];
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: ru
   ((*ru)[0])[0] = 0;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: ru
   ru[0][0][0] = 0;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: ru
   ru[1][2][1] = 0;

   return 0;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int t[100][10][3];


// Points To: none

   int (*p)[3];

// Points To:
// p -> undefined , EXACT

   int *pu;


// Points To:
// p -> undefined , EXACT
// pu -> undefined , EXACT

   int (*q)[10][3];

// Points To:
// p -> undefined , EXACT
// pu -> undefined , EXACT
// q -> undefined , EXACT

   int (*qu)[3];


// Points To:
// p -> undefined , EXACT
// pu -> undefined , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT

   int (*r)[100][10][3];

// Points To:
// p -> undefined , EXACT
// pu -> undefined , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT

   int (*ru)[10][3];

// Points To:
// p -> undefined , EXACT
// pu -> undefined , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   
   
   p = &t[1][2];

// Points To:
// p -> t[1][2] , EXACT
// pu -> undefined , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   (*p)[1] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> undefined , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   p[1][1] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> undefined , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT


   pu = &t[1][2][0];

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   *pu = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   pu[2] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> undefined , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT


   q = &t[1];

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   ((*q)[2])[3] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   q[1][2][3] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> undefined , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT


   qu = &t[1][0];

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   (*qu)[1] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT

   qu[1][1] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> undefined , EXACT
// ru -> undefined , EXACT


   r = &t;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> t , EXACT
// ru -> undefined , EXACT

   (((*r)[0])[0])[0] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> t , EXACT
// ru -> undefined , EXACT

   (((*r)[1])[2])[3] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> t , EXACT
// ru -> undefined , EXACT


   ru = &t[0];

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> t , EXACT
// ru -> t[0] , EXACT

   ((*ru)[0])[0] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> t , EXACT
// ru -> t[0] , EXACT

   ru[0][0][0] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> t , EXACT
// ru -> t[0] , EXACT

   ru[1][2][1] = 0;

// Points To:
// p -> t[1][2] , EXACT
// pu -> t[1][2][0] , EXACT
// q -> t[1] , EXACT
// qu -> t[1][0] , EXACT
// r -> t , EXACT
// ru -> t[0] , EXACT


   return 0;
}
