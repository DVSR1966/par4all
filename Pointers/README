Information about the points-to validation suite:
------------------------------------------------

conditional_01 : To treat assignement like x = cond? &i : y.

formal_parameter00 : To illustrate the treatement of formal parameter. 

if00, for00, while00, do_while : To illustrate points-to relations in control statements.

inter04, 05, 06  and 07:

intra01

lhs06: va_arg

list06:

Lv:

nowhere01:

null_pointer01, 02:

malloc01, malloc_anywhere, malloc_context_sensitive, malloc_flow_sensitive, malloc_insensitive : To illustrate the use of HEAP_LOCATION  property.

pointer14: arrays of pointers toward arrays of pointers

pointer_free

pointer_modif01: scalar pointers updated, intraprocedural; effects required to observe real impact; C code is wrong and the bug is detected by gcc

pointer_modif02: scalar pointers updated, interprocedural; effects required to observe real impact; C code is wrong and the bug is detected by gcc

pointer_reference04: uses a pointer reference, such as p[3]

statement01->statement07 : Basic cases of points-to, computing points-to relations for assignements of type <x = &i>, <x = y>, <x = &a[]> where x is of type pointer or double pointer.

static01: implicit initialization of static scalar pointer to NULL (C Standard)

struct00->struct04 : To illustrate fields of C stryct type which are pointers.

struct19: initialization of a struct containing pointers

For compatibility with Effects validation:
------------------------------------------

call04

For reengineering of the points-to analysis
-------------------------------------------

assignment01, 02, 03, 04: check handling of basic scalar pointer assignment (FI)

test01, 02, 03, 04: check handling of test statements (FI)

decl06: check generation of nowhere in a pointer declaration

pointerxy: copied from Rice

-------------new validation for points-to analysis------------- 

every test case added is either a bug to fixe either an enhancement of
the points-to analysis, please add a comment about the bug when you
add a test case.

bc_inter01: est-ce que ca marche en intraprocedural?
bc_inter02: idem
bc_inter03: idem
bc_inter04: ou est l'interprocedural

beatrice01: problemes? objectifs?
