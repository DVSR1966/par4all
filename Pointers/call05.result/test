
PROPER POINTER EFFECTS

int main()
{
//             <    is written>: d1
   int d1 = 4;
//             <    is written>: d2
   int d2 = 4;
   int y[d1][d2];
   int i, j;
//             <    is read   >: d1
//             <    is written>: i

   for(i = 0; i <= d1-1; i += 1)
//             <may be written>: y[i][*]
//             <    is read   >: d1 d2 i
      call05(i, d2, y[i]);
//             <    is read   >: d1
//             <    is written>: i

   for(i = 0; i <= d1-1; i += 1) {
//             <    is read   >: d1 d2
//             <    is written>: j
      for(j = 0; j <= d2-1; j += 1)
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: d1 d2 i j stdout y[i][j] 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
         printf("y[%d][%d] = %d\t", i, j, y[i][j]);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: d1 stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
      printf("\n");
   }
}

POINTS-TO

//  {}
int main()
{
//  points to = {}
   int d1 = 4;
//  points to = {}
   int d2 = 4;
//  points to = {}
   int y[d1][d2];
//  points to = {}
   int i, j;
//  points to = {}

   for(i = 0; i <= d1-1; i += 1)
//  points to = {}
      call05(i, d2, y[i]);
//  points to = {}

   for(i = 0; i <= d1-1; i += 1) {
//  points to = {}
      for(j = 0; j <= d2-1; j += 1)
//  points to = {}
         printf("y[%d][%d] = %d\t", i, j, y[i][j]);
//  points to = {}
      printf("\n");
   }
}
