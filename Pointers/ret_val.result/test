long long get_result(int argc, char **argv)
{
//               <must be written>: result
   long long result = 0;
//               <must be read   >: argv argv[1]
//               <must be written>: result
   result = atoll(argv[1]);
//               <must be read   >: __IO_EFFECTS:LUNS[1] result
//               <must be written>: __IO_EFFECTS:LUNS[1]
   printf("return value will be %lld\n", result);
//               <must be read   >: result
   return result;
}
int main(int argc, char **argv)
{
//               <may be read    >: *ANY_MODULE*:*ANYWHERE*
//               <must be read   >: __IO_EFFECTS:LUNS[1] argc argv
//               <must be written>: __IO_EFFECTS:LUNS[1] size
   long long size = get_result(argc, argv);
//               <must be read   >: size
   return size;
}
long long get_result(int argc, char **argv)
{
//               <must be written>: result
   long long result = 0;
//               <must be read   >: argv argv[1]
//               <must be written>: result
   result = atoll(argv[1]);
//               <must be read   >: __IO_EFFECTS:LUNS[1] result
//               <must be written>: __IO_EFFECTS:LUNS[1]
   printf("return value will be %lld\n", result);
//               <must be read   >: result
   return result;
}

POINTS TO

//  {(_argv_1,__argv_1_2,-Exact-);(argv,_argv_1,-Exact-)}
long long get_result(int argc, char **argv)
{
//  {(argv,_argv_1,-Exact-);(_argv_1,__argv_1_2,-Exact-)}
   long long result = 0;
   result = atoll(argv[1]);
   printf("return value will be %lld\n", result);
   return result;
}

POINTS TO

//  {(_argv_3,__argv_3_4,-Exact-);(argv,_argv_3,-Exact-)}
int main(int argc, char **argv)
{
//  {(argv,_argv_3,-Exact-);(_argv_3,__argv_3_4,-Exact-)}
   long long size = get_result(argc, argv);
   return size;
}
