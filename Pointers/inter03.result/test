
PROPER  EFFECTS

int main(int argc, char **argv)
{
   int tab[10];
   int *tab2[10];
   int tab3[10][10];
   int **tab4;
   int tab5[15];
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   
   
   foo(tab);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%s\n", "tab");
//             <may be read   >: stdout[0] *ANY_MODULE*:*ANYWHERE*
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   myprint(tab);
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: tab2[4]
   
   
   foo(tab2[4]);
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   foo(tab3[5]);
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   foo(tab4[6]);
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   foo(&tab[0]);
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   foo(&tab5[3]);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

   printf("%s:\n", "tab2[4]");
//             <may be read   >: stdout[0] *ANY_MODULE*:*ANYWHERE*
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   myprint(tab2[4]);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%s\n", "tab3[5]");
//             <may be read   >: stdout[0] *ANY_MODULE*:*ANYWHERE*
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   myprint(tab3[5]);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%s\n", "tab4[6]");
//             <may be read   >: stdout[0] *ANY_MODULE*:*ANYWHERE*
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   myprint(tab4[6]);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%s\n", "tab");
//             <may be read   >: stdout[0] *ANY_MODULE*:*ANYWHERE*
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   myprint(&tab[0]);
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%s\n", "tab5");
//             <may be read   >: stdout[0] *ANY_MODULE*:*ANYWHERE*
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   myprint(&tab5[3]);
   return 1;
}

POINTS-TO


// Points To IN:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY


// Points To OUT: none

int main(int argc, char **argv)
{

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY

   int tab[10];

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY

   int *tab2[10];

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   int tab3[10][10];

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   int **tab4;

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// tab4 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   int tab5[15];

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// tab4 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   
   
   foo(tab);

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// tab4 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   printf("%s\n", "tab");

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// tab4 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   myprint(tab);

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// tab4 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   
   
   foo(tab2[4]);

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// tab4 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   foo(tab3[5]);

// Points To:
// argv -> *NULL_POINTER* , MAY
// argv -> _argv_2[0] , MAY
// tab2[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// tab4 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   foo(tab4[6]);

// Points To: none

   foo(&tab[0]);

// Points To: none

   foo(&tab5[3]);

// Points To: none


   printf("%s:\n", "tab2[4]");

// Points To: none

   myprint(tab2[4]);

// Points To: none

   printf("%s\n", "tab3[5]");

// Points To: none

   myprint(tab3[5]);

// Points To: none

   printf("%s\n", "tab4[6]");

// Points To: none

   myprint(tab4[6]);

// Points To: none

   printf("%s\n", "tab");

// Points To: none

   myprint(&tab[0]);

// Points To: none

   printf("%s\n", "tab5");

// Points To: none

   myprint(&tab5[3]);

// Points To: none

   return 1;
}
