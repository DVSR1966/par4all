End of property settings

POINTS TO

C  {}
void flgr1d_arith_add_fgINT32(FLGR_Data1D *datdest, FLGR_Data1D *data1, FLGR_Data1D *data2)
{
   int j;                                                               /*0060*/
   fgINT32 *psrc1 = (fgINT32 *) data1->array;                           /*0061*/
   fgINT32 *psrc2 = (fgINT32 *) data2->array;                           /*0062*/
   fgINT32 *pdest = (fgINT32 *) datdest->array;                         /*0063*/
   fgINT32 v1;                                                          /*0064*/
   fgINT32 v2;                                                          /*0065*/
   fgINT32 result;                                                      /*0066*/
   int spp = datdest->spp;                                              /*0067*/
   int length = datdest->length*spp;                                    /*0068*/
   for(j = 0; j <= length-1; j += 1) {
      v1 = flgr1d_get_data_array_fgINT32(psrc1, j);                     /*0070*/
      v2 = flgr1d_get_data_array_fgINT32(psrc2, j);                     /*0071*/
      result = flgr_defop_add_fgINT32(v1, v2);                          /*0072*/
      flgr1d_set_data_array_fgINT32(pdest, j, result);                  /*0073*/
   }
   return;                                                              /*0075*/
}
//  {}
FLGR_Ret flgr2d_arith_add(FLGR_Data2D *datdest, FLGR_Data2D *data1, FLGR_Data2D *data2)
{
   FLGR_Ret ret;                                                        /*0094*/
   if (datdest==(void *) 0||data1==(void *) 0||data2==(void *) 0) {     /*0095*/
      fprintf(stderr, "ERROR: File %s, Line %d, Function : ""Null objects!\n", "fulguro-2-1-1.src/arith/flgrArith.c", 5102);        /*0096*/
      return FLGR_RET_NULL_OBJECT;                                      /*0097*/
   }
   if ((ret = flgr2d_is_data_same_attributes(datdest, data1))!=FLGR_RET_OK)            /*0099*/
      return ret;                                                       /*0100*/
   if ((ret = flgr2d_is_data_same_attributes(data2, data1))!=FLGR_RET_OK)              /*0101*/
      return ret;                                                       /*0102*/

   if (datdest->type==FLGR_BIT) {                                       /*0104*/
      flgr2d_arith_add_fgBIT(datdest, data1, data2);                    /*0105*/
      return FLGR_RET_OK;                                               /*0106*/
   }
   if (datdest->type==FLGR_UINT8) {                                     /*0108*/
      flgr2d_arith_add_fgUINT8(datdest, data1, data2);                  /*0109*/
      return FLGR_RET_OK;                                               /*0110*/
   }
   if (datdest->type==FLGR_UINT16) {                                    /*0112*/
      flgr2d_arith_add_fgUINT16(datdest, data1, data2);                 /*0113*/
      return FLGR_RET_OK;                                               /*0114*/
   }
   if (datdest->type==FLGR_UINT32) {                                    /*0116*/
      flgr2d_arith_add_fgUINT32(datdest, data1, data2);                 /*0117*/
      return FLGR_RET_OK;                                               /*0118*/
   }
   if (datdest->type==FLGR_INT8) {                                      /*0120*/
      flgr2d_arith_add_fgINT8(datdest, data1, data2);                   /*0121*/
      return FLGR_RET_OK;                                               /*0122*/
   }
   if (datdest->type==FLGR_INT16) {                                     /*0124*/
      flgr2d_arith_add_fgINT16(datdest, data1, data2);                  /*0125*/
      return FLGR_RET_OK;                                               /*0126*/
   }
   if (datdest->type==FLGR_INT32) {                                     /*0128*/
      flgr2d_arith_add_fgINT32(datdest, data1, data2);                  /*0129*/
      return FLGR_RET_OK;                                               /*0130*/
   }
   if (datdest->type==FLGR_FLOAT32) {                                   /*0132*/
      flgr2d_arith_add_fgFLOAT32(datdest, data1, data2);                /*0133*/
      return FLGR_RET_OK;                                               /*0134*/
   }
   if (datdest->type==FLGR_FLOAT64) {                                   /*0136*/
      flgr2d_arith_add_fgFLOAT64(datdest, data1, data2);                /*0137*/
      return FLGR_RET_OK;                                               /*0138*/
   }
   fprintf(stderr, "ERROR: File %s, Line %d, Function : ""type <%s> unknown!\n", "fulguro-2-1-1.src/arith/flgrArith.c", 5109, flgr_get_type_string(datdest->type));              /*0140*/
   return FLGR_RET_TYPE_UNKNOWN;                                        /*0141*/
}
//  {}
void flgr2d_arith_add_fgINT32(FLGR_Data2D *datdest, FLGR_Data2D *data1, FLGR_Data2D *data2)
{
   FLGR_Data1D **pdest = datdest->row;                                  /*0080*/
   FLGR_Data1D **p1 = data1->row;                                       /*0081*/
   FLGR_Data1D **p2 = data2->row;                                       /*0082*/
   int i;                                                               /*0083*/
   i = 0;                                                               /*0084*/
   while (i<data1->size_y) {                                            /*0085*/
      flgr1d_arith_add_fgINT32(*pdest, *p1, *p2);                       /*0086*/
      i++, pdest++, p1++, p2++;                                         /*0087*/
   }
   return;                                                              /*0089*/
}
//  {(array,_array_1,-Exact-)}
static fgINT32 flgr1d_get_data_array_fgINT32(fgINT32 *array, int pos)
{
//  {(array,_array_1,-Exact-)}
   return flgr_get_array_fgINT32(array, pos);                           /*0048*/
}
//  {(array,_array_2,-Exact-)}
static void flgr1d_set_data_array_fgINT32(fgINT32 *array, int pos, fgINT32 value)
{
//  {(array,_array_2,-Exact-)}
   flgr_set_array_fgINT32(array, pos, value);                           /*0039*/
}
//  {}
static fgINT32 flgr_defop_add_fgINT32(fgINT32 a, fgINT32 b)
{
   return a+b;                                                          /*0029*/
}
//  {(array,_array_3,-Exact-)}
static fgINT32 flgr_get_array_fgINT32(fgINT32 *array, int pos)
{
//  {(array,_array_3,-Exact-)}
   return array[pos];                                                   /*0044*/
}
//  {(array,_array_4,-Exact-)}
static void flgr_set_array_fgINT32(fgINT32 *array, int pos, fgINT32 value)
{
//  {(array,_array_4,-Exact-)}
   array[pos] = value;                                                  /*0034*/
}
//  {}
int main()
{
   FLGR_Data2D d2d;                                                     /*0146*/
   FLGR_Data2D d1;                                                      /*0147*/
   FLGR_Data2D d2;                                                      /*0148*/
   flgr2d_arith_add_fgINT32(&d2d, &d1, &d2);                            /*0149*/
   printf("%d%d\n", d2d.size, ((d2d.row)[0]->array)[0]);                /*0150*/
}
