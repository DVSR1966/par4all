
POINTS-TO


// Points To IN:
// _l_1[0].next -> *NULL_POINTER* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// nil -> *NULL_POINTER* , EXACT


// Points To OUT: none

int list_len(list l)
{

// Points To: none

   int n = 0;

// Points To:
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY

   list c = l;

// Points To:
// _l_1[0].next -> *NULL_POINTER* , MAY
// _l_1[0].next -> _l_1_2__1[0][0] , MAY
// c -> *NULL_POINTER* , MAY
// c -> _l_1[0] , MAY
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY
// nil -> *NULL_POINTER* , EXACT

   //while (c!=nil)
   //{
   // we know that c!=nil...
   c = c==nil?nil:c->next;

// Points To:
// c -> *NULL_POINTER* , MAY
// c -> _l_1_2__1[0][0] , MAY
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY

   n++;

// Points To:
// c -> *NULL_POINTER* , MAY
// c -> _l_1_2__1[0][0] , MAY
// l -> *NULL_POINTER* , MAY
// l -> _l_1[0] , MAY

   //}
   return n;
}
