
PROPER  EFFECTS

pointer alloc_pointer(int v)
{
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: p _MALLOC_EFFECTS:_MALLOC_
   pointer p = malloc(sizeof(int));
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p v
   *p = v;
//             <    is read   >: p
   return p;
}
int main(void)
{
   pointer p1, p2;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   
   // could differentiate allocs based on call path?
   p1 = alloc_pointer(13);
//             <    is read   >: p1
//             <    is written>: p2
   p2 = p1;
//             <    is read   >: p1 _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   pointer_free(p1);

   return;
}
void pointer_free(pointer p)
{
//             <    is read   >: p _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   free(p);
   return;
}

POINTS-TO


// Points To IN: none


// Points To OUT:
// alloc_pointer -> *HEAP*_l_7 , EXACT

pointer alloc_pointer(int v)
{

// Points To: none

   pointer p = malloc(sizeof(int));

// Points To:
// p -> *HEAP*_l_7 , EXACT

   *p = v;

// Points To:
// p -> *HEAP*_l_7 , EXACT

   return p;
}

// Points To IN: none


// Points To OUT: none

int main(void)
{

// Points To: none

   pointer p1, p2;

// Points To:
// p1 -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// p2 -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   
   // could differentiate allocs based on call path?
   p1 = alloc_pointer(13);

// Points To:
// p1 -> *ANY_MODULE*:*ANYWHERE*_b0 , EXACT
// p2 -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   p2 = p1;

// Points To:
// p1 -> *ANY_MODULE*:*ANYWHERE*_b0 , EXACT
// p2 -> *ANY_MODULE*:*ANYWHERE*_b0 , EXACT

   pointer_free(p1);

// Points To:
// p1 -> *ANY_MODULE*:*ANYWHERE*_b0 , EXACT
// p2 -> *ANY_MODULE*:*ANYWHERE*_b0 , EXACT


   return;
}

// Points To IN:
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY


// Points To OUT: none

void pointer_free(pointer p)
{

// Points To:
// p -> *NULL_POINTER* , MAY
// p -> _p_1[0] , MAY

   free(p);

// Points To:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   return;
}
