
POINTS-TO


// Points To IN:
// _p_1.n -> *NULL_POINTER* , MAY
// _p_1.n -> _p_1_2__1 , MAY
// _p_1_2__1.n -> *NULL_POINTER* , MAY
// _p_1_2__1.n -> _p_1_2__1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY


// Points To OUT:
// _p_1.n -> *NULL_POINTER* , MAY
// _p_1.n -> _p_1_2__1 , MAY
// _p_1_2__1.n -> *NULL_POINTER* , MAY
// _p_1_2__1.n -> _p_1_2__1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// reverse_copy -> *NULL_POINTER* , EXACT

rec reverse_copy(rec p)
{

// Points To: none

   rec r = (void *) 0;

// Points To:
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// r -> *NULL_POINTER* , EXACT

   rec q = p;

// Points To:
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> *NULL_POINTER* , MAY
// q -> _p_1 , MAY
// r -> *NULL_POINTER* , EXACT

   while (q!=(void *) 0) {

// Points To:
// _p_1.n -> *NULL_POINTER* , MAY
// _p_1.n -> _p_1_2__1 , MAY
// _p_1_2__1.n -> *NULL_POINTER* , MAY
// _p_1_2__1.n -> _p_1_2__1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> _p_1 , MAY
// q -> _p_1_2__1 , MAY
// r -> *NULL_POINTER* , EXACT

      rec t = (rec) malloc(sizeof(struct rec_st ));

// Points To:
// *HEAP*_l_30.n -> undefined , EXACT
// _p_1.n -> *NULL_POINTER* , MAY
// _p_1.n -> _p_1_2__1 , MAY
// _p_1_2__1.n -> *NULL_POINTER* , MAY
// _p_1_2__1.n -> _p_1_2__1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> _p_1 , MAY
// q -> _p_1_2__1 , MAY
// r -> *NULL_POINTER* , EXACT
// t -> *HEAP*_l_30 , MAY

      t->i = q->i;

// Points To:
// *HEAP*_l_30.n -> undefined , EXACT
// _p_1.n -> *NULL_POINTER* , MAY
// _p_1.n -> _p_1_2__1 , MAY
// _p_1_2__1.n -> *NULL_POINTER* , MAY
// _p_1_2__1.n -> _p_1_2__1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> _p_1 , MAY
// q -> _p_1_2__1 , MAY
// r -> *NULL_POINTER* , EXACT
// t -> *HEAP*_l_30 , MAY

      t->n = r;

// Points To:
// *HEAP*_l_30.n -> *NULL_POINTER* , MAY
// _p_1.n -> *NULL_POINTER* , MAY
// _p_1.n -> _p_1_2__1 , MAY
// _p_1_2__1.n -> *NULL_POINTER* , MAY
// _p_1_2__1.n -> _p_1_2__1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> _p_1 , MAY
// q -> _p_1_2__1 , MAY
// r -> *NULL_POINTER* , EXACT
// t -> *HEAP*_l_30 , MAY

      q = q->n;
   }

// Points To:
// _p_1.n -> *NULL_POINTER* , MAY
// _p_1.n -> _p_1_2__1 , MAY
// _p_1_2__1.n -> *NULL_POINTER* , MAY
// _p_1_2__1.n -> _p_1_2__1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> *NULL_POINTER* , EXACT
// r -> *NULL_POINTER* , EXACT

   return r;
}
INTERPROCEDURAL_POINTS_TO_ANALYSIS[reverse_copy] (points_to_set_block_projection) Memory leak for bucket "reverse_copy:*HEAP*_l_30".
INTERPROCEDURAL_POINTS_TO_ANALYSIS[reverse_copy] (points_to_set_block_projection) Memory leak for bucket "reverse_copy:*HEAP*_l_30".
INTERPROCEDURAL_POINTS_TO_ANALYSIS[reverse_copy] (points_to_set_block_projection) Memory leak for bucket "reverse_copy:*HEAP*_l_30".
INTERPROCEDURAL_POINTS_TO_ANALYSIS[reverse_copy] (points_to_set_block_projection) Memory leak for bucket "reverse_copy:*HEAP*_l_30".
