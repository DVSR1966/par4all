
! initial function

freia_status freia_scalar_04(freia_data2d *o, freia_data2d *i0, freia_data2d *i1, int32_t *k)
{
   
   
   freia_data2d *t1 = freia_common_create_data(16, 128, 128), *t2 = freia_common_create_data(16, 128, 128);          /*0010*/
   int max, min = 10;                                                   /*0011*/
   bool bin = false;                                                    /*0012*/
   // break pipeline on scalar dependency
   freia_aipo_add(t1, i0, i1);                                          /*0014*/
   freia_aipo_global_max(t1, &max);                                     /*0015*/
   freia_aipo_erode_8c(t2, t1, k);                                      /*0016*/
   freia_aipo_threshold(o, t2, min, max, bin);                          /*0017*/
   freia_common_destruct_data(t1);                                      /*0018*/
   freia_common_destruct_data(t2);                                      /*0019*/
   return FREIA_OK;                                                     /*0020*/
}

! graphs

// graph for dag "dag_0" of module "freia_scalar_04" in dot format
digraph "dag_0" {
  // inputs
  "i0" [shape=circle];
  "i1" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "17 thr" [shape=parallelogram];
  "17 thr" -> "o";
  "16 E8" [shape=box];
  "16 E8" -> "17 thr" [label="t2"];
  "15 max" [shape=diamond];
  "15 max" -> "17 thr" [arrowhead=empty,label="max"];
  "14 +" [shape=trapezium,orientation=270];
  "14 +" -> "16 E8" [label="t1"];
  "14 +" -> "15 max" [label="t1"];
  "i1" -> "14 +";
  "i0" -> "14 +";
}
// graph for dag "dag_cleaned_0" of module "freia_scalar_04" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "i0" [shape=circle];
  "i1" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "17 thr" [shape=parallelogram];
  "17 thr" -> "o";
  "16 E8" [shape=box];
  "16 E8" -> "17 thr" [label="t2"];
  "15 max" [shape=diamond];
  "15 max" -> "17 thr" [arrowhead=empty,label="max"];
  "14 +" [shape=trapezium,orientation=270];
  "14 +" -> "16 E8" [label="t1"];
  "14 +" -> "15 max" [label="t1"];
  "i1" -> "14 +";
  "i0" -> "14 +";
}
// graph for dag "freia_scalar_04_helper_0_0" of module "freia_scalar_04" in dot format
digraph "freia_scalar_04_helper_0_0" {
  // inputs
  "i0" [shape=circle];
  "i1" [shape=circle];

  // outputs
  "t2" [shape=circle];

  // computation vertices
  "16 E8" [shape=box];
  "16 E8" -> "t2";
  "15 max" [shape=diamond];
  "14 +" [shape=trapezium,orientation=270];
  "14 +" -> "16 E8" [label="t1"];
  "14 +" -> "15 max" [label="t1"];
  "i1" -> "14 +";
  "i0" -> "14 +";
}
// graph for dag "freia_scalar_04_helper_0_1" of module "freia_scalar_04" in dot format
digraph "freia_scalar_04_helper_0_1" {
  // inputs
  "t2" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "17 thr" [shape=parallelogram];
  "17 thr" -> "o";
  "t2" -> "17 thr";
}

! acceleration function

#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <spoc.h>

// FREIA-SPoC helper function for module freia_scalar_04
freia_status freia_scalar_04_helper_0_0_0(freia_data2d * o0, freia_data2d * i0, freia_data2d * i1, int32_t * red0, int32_t *kern1)
{
  spoc_instr si;
  spoc_param sp;
  spoc_reduction reduc;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_reduction_results redres;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // i0 [0 input 0] -> [0 alu] 14 add
  // nope
  // i1 [0 input 1] -> [0 alu] 14 add
  // nope
  // alu 14 add stage 0
  si.alu[0][0].op = SPOC_ALU_ADD_IN0_IN1;

  // 0`t1 [0 alu] -> [0 measure 0] 14 add
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;


  // STAGE 1
  // 0`t1 [0 measure 0] -> [1 poc 0] 16 erode_8c
  // 0`t1 [1 input 0] -> [1 poc 0] 16 erode_8c
  // nope
  // poc 16 erode_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_ERODE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = kern1[i];


  // output image 0`t2 on 0
  // 0`t2 [1 poc 0] -> [1 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`t2 [1 output 0] -> [7 output 0] 0 null
  // 0`t2 [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`t2 [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`t2 [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`t2 [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`t2 [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`t2 [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  // get reductions
  freia_cg_read_reduction_results(&redres);

  // measure 15 global_max stage 0 side 0
  *red0 = (int32_t) reduc.measure[0][0].maximum;

  return ret;
}

// FREIA-SPoC helper function for module freia_scalar_04
freia_status freia_scalar_04_helper_0_1_0(freia_data2d * o0, freia_data2d * i0, int32_t inf0, int32_t sup1, bool bin2)
{
  spoc_instr si;
  spoc_param sp;
  spoc_reduction reduc;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_reduction_results redres;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`t2 [0 input 0] -> [0 threshold 0] 17 threshold
  si.mux[0][0].op = SPOC_MUX_IN0;
  // threshold 17 threshold stage 0 side 0
  si.th[0][0].op = bin2? SPOC_TH_BINARIZE : SPOC_TH_NO_BINARIZE;
  sp.th[0][0].boundmin = inf0;
  sp.th[0][0].boundmax = sup1;


  // output image o on 0
  // o [0 threshold 0] -> [0 output 0] 0 null
  // nope

  // fill in to the end...
  // o [0 output 0] -> [7 output 0] 0 null
  // o [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // o [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // o [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // o [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // o [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // o [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // o [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, NULL);

  return ret;
}

! updated function

freia_status freia_scalar_04(freia_data2d *o, freia_data2d *i0, freia_data2d *i1, int32_t *k)
{
   
   
   freia_data2d *t2 = freia_common_create_data(16, 128, 128);           /*0010*/
   int max, min = 10;                                                   /*0011*/
   bool bin = false;                                                    /*0012*/
   // break pipeline on scalar dependency
   freia_scalar_04_helper_0_0_0(t2, i0, i1, &max, k);                   /*0014*/
   freia_scalar_04_helper_0_1_0(o, t2, min, max, bin);                  /*0017*/
   freia_common_destruct_data(t2);                                      /*0019*/
   return FREIA_OK;                                                     /*0020*/
}

