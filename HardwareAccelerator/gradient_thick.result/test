
! initial function

freia_status gradient_thick(freia_data2d *out, freia_data2d *in)
{
   
   
   freia_data2d *erode = freia_common_create_data(in->bpp, in->widthWa, in->heightWa), *dilate = freia_common_create_data(in->bpp, in->widthWa, in->heightWa);    /*0007*/
   int32_t kernel[9] = {1, 1, 1, 1, 1, 1, 1, 1, 1};                     /*0008*/
   
   /* gradient thick using aipo calls*/
   freia_aipo_erode_8c(erode, in, kernel);                              /*0011*/
   freia_aipo_dilate_8c(dilate, in, kernel);                            /*0012*/
   freia_aipo_sub(out, dilate, erode);                                  /*0013*/
   // freia_aipo_not(imout, imin);
   
   /* images destruction */
   freia_common_destruct_data(erode);                                   /*0017*/
   freia_common_destruct_data(dilate);                                  /*0018*/

   return FREIA_OK;                                                     /*0020*/
}

! graphs

// graph for dag "dag_0" of module "gradient_thick" in dot format
digraph "dag_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "13 -" [shape=trapezium,orientation=270];
  "13 -" -> "out";
  "12 D8" [shape=box];
  "12 D8" -> "13 -" [label="dilate"];
  "11 E8" [shape=box];
  "11 E8" -> "13 -" [label="erode"];
  "in" -> "12 D8";
  "in" -> "11 E8";
}
// graph for dag "dag_cleaned_0" of module "gradient_thick" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "13 -" [shape=trapezium,orientation=270];
  "13 -" -> "out";
  "12 D8" [shape=box];
  "12 D8" -> "13 -" [label="dilate"];
  "11 E8" [shape=box];
  "11 E8" -> "13 -" [label="erode"];
  "in" -> "12 D8";
  "in" -> "11 E8";
}
// graph for dag "gradient_thick_helper_0_0" of module "gradient_thick" in dot format
digraph "gradient_thick_helper_0_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "13 -" [shape=trapezium,orientation=270];
  "13 -" -> "out";
  "12 D8" [shape=box];
  "12 D8" -> "13 -" [label="dilate"];
  "11 E8" [shape=box];
  "11 E8" -> "13 -" [label="erode"];
  "in" -> "12 D8";
  "in" -> "11 E8";
}

! acceleration function

#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <spoc.h>

// FREIA-SPoC helper function for module gradient_thick
freia_status gradient_thick_helper_0_0_0(freia_data2d * o0, freia_data2d * i0,
  const int32_t * pi0)
{
  spoc_instr si;
  spoc_param sp;
  spoc_reduction reduc;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_reduction_results redres;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // in [0 input 0] -> [0 poc 0] 11 erode_8c
  // nope
  // poc 11 erode_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_ERODE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];

  // in [0 input 1] -> [0 poc 1] 12 dilate_8c
  // nope
  // poc 12 dilate_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_DILATE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi0[i];

  // 0`erode [0 poc 0] -> [0 alu] 13 sub
  // nope
  // 0`dilate [0 poc 1] -> [0 alu] 13 sub
  // nope
  // alu 13 sub stage 0 flipped
  si.alu[0][0].op = SPOC_ALU_SUB_IN1_IN0;


  // output image out on 0
  // out [0 alu] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // out [0 output 0] -> [7 output 0] 0 null
  // out [1 input 0] -> [7 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // out [2 input 0] -> [7 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // out [3 input 0] -> [7 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // out [4 input 0] -> [7 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // out [5 input 0] -> [7 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // out [6 input 0] -> [7 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // out [7 input 0] -> [7 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i0);

  return ret;
}

! updated function

freia_status gradient_thick(freia_data2d *out, freia_data2d *in)
{
   
   
   int32_t kernel[9] = {1, 1, 1, 1, 1, 1, 1, 1, 1};                     /*0008*/
   
   /* gradient thick using aipo calls*/
   gradient_thick_helper_0_0_0(out, in, kernel);                        /*0011*/
   // freia_aipo_not(imout, imin);
   
   /* images destruction */
   
   return FREIA_OK;                                                     /*0020*/
}

