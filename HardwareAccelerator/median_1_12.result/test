#
# AIPO
#

! initial function

freia_status median_1(freia_data2d *o, freia_data2d *i)
{
   freia_status ret;                                                    /*0005*/
   freia_data2d *t = freia_common_create_data(i->bpp, i->widthWa, i->heightWa);        /*0006*/
   
   // int32_t c = 8;
   // ret =  freia_cipo_close(t, i, c, 1);
   ret = freia_aipo_dilate_8c(t, i, freia_morpho_kernel_8c);            /*0010*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0011*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0014*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0015*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0018*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0019*/

   ret |= freia_aipo_inf(o, t, i);                                      /*0021*/
   
   // ret |= freia_cipo_open(t, i, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0024*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0025*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0028*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0029*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0032*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0033*/

   ret |= freia_aipo_sup(o, o, t);                                      /*0035*/
   
   // cleanup
   ret |= freia_common_destruct_data(t);                                /*0038*/
   return ret;                                                          /*0039*/
}

! graphs

// graph for dag "dag_0" of module "median_1" in dot format
digraph "dag_0" {
  // inputs
  "i" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "35 >" [shape=trapezium,orientation=270];
  "35 >" -> "o";
  "33 D8" [shape=box];
  "33 D8" -> "35 >" [label="t"];
  "32 E8" [shape=box];
  "32 E8" -> "33 D8" [label="t"];
  "29 E8" [shape=box];
  "29 E8" -> "32 E8" [label="t"];
  "28 D8" [shape=box];
  "28 D8" -> "29 E8" [label="t"];
  "25 D8" [shape=box];
  "25 D8" -> "28 D8" [label="t"];
  "24 E8" [shape=box];
  "24 E8" -> "25 D8" [label="t"];
  "21 <" [shape=trapezium,orientation=270];
  "21 <" -> "35 >" [label="o"];
  "19 E8" [shape=box];
  "19 E8" -> "24 E8" [label="t"];
  "19 E8" -> "21 <" [label="t"];
  "18 D8" [shape=box];
  "18 D8" -> "19 E8" [label="t"];
  "15 D8" [shape=box];
  "15 D8" -> "18 D8" [label="t"];
  "14 E8" [shape=box];
  "14 E8" -> "15 D8" [label="t"];
  "11 E8" [shape=box];
  "11 E8" -> "14 E8" [label="t"];
  "10 D8" [shape=box];
  "10 D8" -> "11 E8" [label="t"];
  "i" -> "21 <";
  "i" -> "10 D8";
}
// graph for dag "dag_cleaned_0" of module "median_1" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "i" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "35 >" [shape=trapezium,orientation=270];
  "35 >" -> "o";
  "33 D8" [shape=box];
  "33 D8" -> "35 >" [label="t"];
  "32 E8" [shape=box];
  "32 E8" -> "33 D8" [label="t"];
  "29 E8" [shape=box];
  "29 E8" -> "32 E8" [label="t"];
  "28 D8" [shape=box];
  "28 D8" -> "29 E8" [label="t"];
  "25 D8" [shape=box];
  "25 D8" -> "28 D8" [label="t"];
  "24 E8" [shape=box];
  "24 E8" -> "25 D8" [label="t"];
  "21 <" [shape=trapezium,orientation=270];
  "21 <" -> "35 >" [label="o"];
  "19 E8" [shape=box];
  "19 E8" -> "24 E8" [label="t"];
  "19 E8" -> "21 <" [label="t"];
  "18 D8" [shape=box];
  "18 D8" -> "19 E8" [label="t"];
  "15 D8" [shape=box];
  "15 D8" -> "18 D8" [label="t"];
  "14 E8" [shape=box];
  "14 E8" -> "15 D8" [label="t"];
  "11 E8" [shape=box];
  "11 E8" -> "14 E8" [label="t"];
  "10 D8" [shape=box];
  "10 D8" -> "11 E8" [label="t"];
  "i" -> "21 <";
  "i" -> "10 D8";
}

! updated function for

freia_status median_1(freia_data2d *o, freia_data2d *i)
{
   freia_status ret;                                                    /*0005*/
   freia_data2d *t = freia_common_create_data(i->bpp, i->widthWa, i->heightWa);        /*0006*/
   
   // int32_t c = 8;
   // ret =  freia_cipo_close(t, i, c, 1);
   ret = freia_aipo_dilate_8c(t, i, freia_morpho_kernel_8c);            /*0010*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0011*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0014*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0015*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0018*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0019*/

   ret |= freia_aipo_inf(o, t, i);                                      /*0021*/
   
   // ret |= freia_cipo_open(t, i, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0024*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0025*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0028*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0029*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0032*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0033*/

   ret |= freia_aipo_sup(o, o, t);                                      /*0035*/
   
   // cleanup
   ret |= freia_common_destruct_data(t);                                /*0038*/
   return ret;                                                          /*0039*/
}
#
# SPOC
#

! initial function

freia_status median_1(freia_data2d *o, freia_data2d *i)
{
   freia_status ret;                                                    /*0005*/
   freia_data2d *t = freia_common_create_data(i->bpp, i->widthWa, i->heightWa);        /*0006*/
   
   // int32_t c = 8;
   // ret =  freia_cipo_close(t, i, c, 1);
   ret = freia_aipo_dilate_8c(t, i, freia_morpho_kernel_8c);            /*0010*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0011*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0014*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0015*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0018*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0019*/

   ret |= freia_aipo_inf(o, t, i);                                      /*0021*/
   
   // ret |= freia_cipo_open(t, i, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0024*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0025*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0028*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0029*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0032*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0033*/

   ret |= freia_aipo_sup(o, o, t);                                      /*0035*/
   
   // cleanup
   ret |= freia_common_destruct_data(t);                                /*0038*/
   return ret;                                                          /*0039*/
}

! graphs

// graph for dag "dag_0" of module "median_1" in dot format
digraph "dag_0" {
  // inputs
  "i" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "35 >" [shape=trapezium,orientation=270];
  "35 >" -> "o";
  "33 D8" [shape=box];
  "33 D8" -> "35 >" [label="t"];
  "32 E8" [shape=box];
  "32 E8" -> "33 D8" [label="t"];
  "29 E8" [shape=box];
  "29 E8" -> "32 E8" [label="t"];
  "28 D8" [shape=box];
  "28 D8" -> "29 E8" [label="t"];
  "25 D8" [shape=box];
  "25 D8" -> "28 D8" [label="t"];
  "24 E8" [shape=box];
  "24 E8" -> "25 D8" [label="t"];
  "21 <" [shape=trapezium,orientation=270];
  "21 <" -> "35 >" [label="o"];
  "19 E8" [shape=box];
  "19 E8" -> "24 E8" [label="t"];
  "19 E8" -> "21 <" [label="t"];
  "18 D8" [shape=box];
  "18 D8" -> "19 E8" [label="t"];
  "15 D8" [shape=box];
  "15 D8" -> "18 D8" [label="t"];
  "14 E8" [shape=box];
  "14 E8" -> "15 D8" [label="t"];
  "11 E8" [shape=box];
  "11 E8" -> "14 E8" [label="t"];
  "10 D8" [shape=box];
  "10 D8" -> "11 E8" [label="t"];
  "i" -> "21 <";
  "i" -> "10 D8";
}
// graph for dag "dag_cleaned_0" of module "median_1" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "i" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "35 >" [shape=trapezium,orientation=270];
  "35 >" -> "o";
  "33 D8" [shape=box];
  "33 D8" -> "35 >" [label="t"];
  "32 E8" [shape=box];
  "32 E8" -> "33 D8" [label="t"];
  "29 E8" [shape=box];
  "29 E8" -> "32 E8" [label="t"];
  "28 D8" [shape=box];
  "28 D8" -> "29 E8" [label="t"];
  "25 D8" [shape=box];
  "25 D8" -> "28 D8" [label="t"];
  "24 E8" [shape=box];
  "24 E8" -> "25 D8" [label="t"];
  "21 <" [shape=trapezium,orientation=270];
  "21 <" -> "35 >" [label="o"];
  "19 E8" [shape=box];
  "19 E8" -> "24 E8" [label="t"];
  "19 E8" -> "21 <" [label="t"];
  "18 D8" [shape=box];
  "18 D8" -> "19 E8" [label="t"];
  "15 D8" [shape=box];
  "15 D8" -> "18 D8" [label="t"];
  "14 E8" [shape=box];
  "14 E8" -> "15 D8" [label="t"];
  "11 E8" [shape=box];
  "11 E8" -> "14 E8" [label="t"];
  "10 D8" [shape=box];
  "10 D8" -> "11 E8" [label="t"];
  "i" -> "21 <";
  "i" -> "10 D8";
}
// graph for dag "median_1_helper_0_0" of module "median_1" in dot format
digraph "median_1_helper_0_0" {
  // inputs
  "i" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "35 >" [shape=trapezium,orientation=270];
  "35 >" -> "o";
  "33 D8" [shape=box];
  "33 D8" -> "35 >" [label="t"];
  "32 E8" [shape=box];
  "32 E8" -> "33 D8" [label="t"];
  "29 E8" [shape=box];
  "29 E8" -> "32 E8" [label="t"];
  "28 D8" [shape=box];
  "28 D8" -> "29 E8" [label="t"];
  "25 D8" [shape=box];
  "25 D8" -> "28 D8" [label="t"];
  "24 E8" [shape=box];
  "24 E8" -> "25 D8" [label="t"];
  "21 <" [shape=trapezium,orientation=270];
  "21 <" -> "35 >" [label="o"];
  "19 E8" [shape=box];
  "19 E8" -> "24 E8" [label="t"];
  "19 E8" -> "21 <" [label="t"];
  "18 D8" [shape=box];
  "18 D8" -> "19 E8" [label="t"];
  "15 D8" [shape=box];
  "15 D8" -> "18 D8" [label="t"];
  "14 E8" [shape=box];
  "14 E8" -> "15 D8" [label="t"];
  "11 E8" [shape=box];
  "11 E8" -> "14 E8" [label="t"];
  "10 D8" [shape=box];
  "10 D8" -> "11 E8" [label="t"];
  "i" -> "21 <";
  "i" -> "10 D8";
}

! acceleration function

#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <spoc.h>

// FREIA-SPoC helper function for module median_1
freia_status median_1_helper_0_0_0(freia_data2d * o0, freia_data2d * i0,
  const int32_t * pi0)
{
  spoc_instr si;
  spoc_param sp;
  spoc_reduction reduc;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_reduction_results redres;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // i [0 input 0] -> [0 poc 0] 10 dilate_8c
  // nope
  // poc 10 dilate_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_DILATE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];


  // STAGE 1
  // 0`t [0 poc 0] -> [1 poc 0] 11 erode_8c
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`t [1 input 0] -> [1 poc 0] 11 erode_8c
  // nope
  // poc 11 erode_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_ERODE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // STAGE 2
  // 0`t [1 poc 0] -> [2 poc 0] 14 erode_8c
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`t [2 input 0] -> [2 poc 0] 14 erode_8c
  // nope
  // poc 14 erode_8c stage 2 side 0
  si.poc[2][0].op = SPOC_POC_ERODE;
  si.poc[2][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][0].kernel[i] = pi0[i];


  // STAGE 3
  // 0`t [2 poc 0] -> [3 poc 0] 15 dilate_8c
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`t [3 input 0] -> [3 poc 0] 15 dilate_8c
  // nope
  // poc 15 dilate_8c stage 3 side 0
  si.poc[3][0].op = SPOC_POC_DILATE;
  si.poc[3][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][0].kernel[i] = pi0[i];


  // STAGE 4
  // 0`t [3 poc 0] -> [4 poc 0] 18 dilate_8c
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`t [4 input 0] -> [4 poc 0] 18 dilate_8c
  // nope
  // poc 18 dilate_8c stage 4 side 0
  si.poc[4][0].op = SPOC_POC_DILATE;
  si.poc[4][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][0].kernel[i] = pi0[i];


  // STAGE 5
  // 0`t [4 poc 0] -> [5 poc 0] 19 erode_8c
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`t [5 input 0] -> [5 poc 0] 19 erode_8c
  // nope
  // poc 19 erode_8c stage 5 side 0
  si.poc[5][0].op = SPOC_POC_ERODE;
  si.poc[5][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][0].kernel[i] = pi0[i];

  // 0`t [5 poc 0] -> [5 alu] 21 inf
  // nope
  // i [0 input 1] -> [5 alu] 21 inf
  si.mux[0][3].op = SPOC_MUX_IN1;
  // i [1 input 1] -> [5 alu] 21 inf
  si.mux[1][3].op = SPOC_MUX_IN1;
  // i [2 input 1] -> [5 alu] 21 inf
  si.mux[2][3].op = SPOC_MUX_IN1;
  // i [3 input 1] -> [5 alu] 21 inf
  si.mux[3][3].op = SPOC_MUX_IN1;
  // i [4 input 1] -> [5 alu] 21 inf
  si.mux[4][3].op = SPOC_MUX_IN1;
  // i [5 input 1] -> [5 alu] 21 inf
  // nope
  // alu 21 inf stage 5
  si.alu[5][0].op = SPOC_ALU_INF_IN0_IN1;


  // STAGE 6
  // 0`t [5 poc 0] -> [6 poc 0] 24 erode_8c
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`t [6 input 0] -> [6 poc 0] 24 erode_8c
  // nope
  // poc 24 erode_8c stage 6 side 0
  si.poc[6][0].op = SPOC_POC_ERODE;
  si.poc[6][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][0].kernel[i] = pi0[i];


  // STAGE 7
  // 0`t [6 poc 0] -> [7 poc 0] 25 dilate_8c
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`t [7 input 0] -> [7 poc 0] 25 dilate_8c
  // nope
  // poc 25 dilate_8c stage 7 side 0
  si.poc[7][0].op = SPOC_POC_DILATE;
  si.poc[7][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][0].kernel[i] = pi0[i];


  // STAGE 8
  // 0`t [7 poc 0] -> [8 poc 0] 28 dilate_8c
  si.mux[7][0].op = SPOC_MUX_IN0;
  // 0`t [8 input 0] -> [8 poc 0] 28 dilate_8c
  // nope
  // poc 28 dilate_8c stage 8 side 0
  si.poc[8][0].op = SPOC_POC_DILATE;
  si.poc[8][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[8][0].kernel[i] = pi0[i];


  // STAGE 9
  // 0`t [8 poc 0] -> [9 poc 0] 29 erode_8c
  si.mux[8][0].op = SPOC_MUX_IN0;
  // 0`t [9 input 0] -> [9 poc 0] 29 erode_8c
  // nope
  // poc 29 erode_8c stage 9 side 0
  si.poc[9][0].op = SPOC_POC_ERODE;
  si.poc[9][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[9][0].kernel[i] = pi0[i];


  // STAGE 10
  // 0`t [9 poc 0] -> [10 poc 0] 32 erode_8c
  si.mux[9][0].op = SPOC_MUX_IN0;
  // 0`t [10 input 0] -> [10 poc 0] 32 erode_8c
  // nope
  // poc 32 erode_8c stage 10 side 0
  si.poc[10][0].op = SPOC_POC_ERODE;
  si.poc[10][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[10][0].kernel[i] = pi0[i];


  // STAGE 11
  // 0`t [10 poc 0] -> [11 poc 0] 33 dilate_8c
  si.mux[10][0].op = SPOC_MUX_IN0;
  // 0`t [11 input 0] -> [11 poc 0] 33 dilate_8c
  // nope
  // poc 33 dilate_8c stage 11 side 0
  si.poc[11][0].op = SPOC_POC_DILATE;
  si.poc[11][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[11][0].kernel[i] = pi0[i];

  // 0`t [11 poc 0] -> [11 alu] 35 sup
  // nope
  // o [5 alu] -> [11 alu] 35 sup
  si.mux[5][1].op = SPOC_MUX_IN1;
  si.mux[5][3].op = SPOC_MUX_IN0;
  // o [6 input 1] -> [11 alu] 35 sup
  si.mux[6][3].op = SPOC_MUX_IN1;
  // o [7 input 1] -> [11 alu] 35 sup
  si.mux[7][3].op = SPOC_MUX_IN1;
  // o [8 input 1] -> [11 alu] 35 sup
  si.mux[8][3].op = SPOC_MUX_IN1;
  // o [9 input 1] -> [11 alu] 35 sup
  si.mux[9][3].op = SPOC_MUX_IN1;
  // o [10 input 1] -> [11 alu] 35 sup
  si.mux[10][3].op = SPOC_MUX_IN1;
  // o [11 input 1] -> [11 alu] 35 sup
  // nope
  // alu 35 sup stage 11
  si.alu[11][0].op = SPOC_ALU_SUP_IN0_IN1;


  // output image o on 0
  // o [11 alu] -> [11 output 0] 0 null
  si.mux[11][0].op = SPOC_MUX_IN1;
  si.mux[11][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // o [11 output 0] -> [11 output 0] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i0);

  return ret;
}

! updated function

freia_status median_1(freia_data2d *o, freia_data2d *i)
{
   freia_status ret;                                                    /*0005*/
   
   // int32_t c = 8;
   // ret =  freia_cipo_close(t, i, c, 1);
   ret = median_1_helper_0_0_0(o, i, freia_morpho_kernel_8c);           /*0010*/
   ret |= 0;                                                            /*0011*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= 0;                                                            /*0014*/
   ret |= 0;                                                            /*0015*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= 0;                                                            /*0018*/
   ret |= 0;                                                            /*0019*/

   ret |= 0;                                                            /*0021*/
   
   // ret |= freia_cipo_open(t, i, c, 1);
   ret |= 0;                                                            /*0024*/
   ret |= 0;                                                            /*0025*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= 0;                                                            /*0028*/
   ret |= 0;                                                            /*0029*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= 0;                                                            /*0032*/
   ret |= 0;                                                            /*0033*/

   ret |= 0;                                                            /*0035*/
   
   // cleanup
   ret |= ;                                                             /*0038*/
   return ret;                                                          /*0039*/
}

! cleaned up function

freia_status median_1(freia_data2d *o, freia_data2d *i)
{
   freia_status ret;                                                    /*0005*/
   
   // int32_t c = 8;
   // ret =  freia_cipo_close(t, i, c, 1);
   ret = median_1_helper_0_0_0(o, i, freia_morpho_kernel_8c);           /*0010*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   
   // ret |= freia_cipo_close(t, t, c, 1);
   
   
   // ret |= freia_cipo_open(t, i, c, 1);
   
   // ret |= freia_cipo_close(t, t, c, 1);
   
   // ret |= freia_cipo_open(t, t, c, 1);
   
   
   // cleanup
   ret |= ;                                                             /*0038*/
   return ret;                                                          /*0039*/
}
#
# TERAPIX
#

! initial function

freia_status median_1(freia_data2d *o, freia_data2d *i)
{
   freia_status ret;                                                    /*0005*/
   freia_data2d *t = freia_common_create_data(i->bpp, i->widthWa, i->heightWa);        /*0006*/
   
   // int32_t c = 8;
   // ret =  freia_cipo_close(t, i, c, 1);
   ret = freia_aipo_dilate_8c(t, i, freia_morpho_kernel_8c);            /*0010*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0011*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0014*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0015*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0018*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0019*/

   ret |= freia_aipo_inf(o, t, i);                                      /*0021*/
   
   // ret |= freia_cipo_open(t, i, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0024*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0025*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0028*/
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0029*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= freia_aipo_erode_8c(t, t, freia_morpho_kernel_8c);            /*0032*/
   ret |= freia_aipo_dilate_8c(t, t, freia_morpho_kernel_8c);           /*0033*/

   ret |= freia_aipo_sup(o, o, t);                                      /*0035*/
   
   // cleanup
   ret |= freia_common_destruct_data(t);                                /*0038*/
   return ret;                                                          /*0039*/
}

! graphs

// graph for dag "dag_0" of module "median_1" in dot format
digraph "dag_0" {
  // inputs
  "i" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "35 >" [shape=trapezium,orientation=270];
  "35 >" -> "o";
  "33 D8" [shape=box];
  "33 D8" -> "35 >" [label="t"];
  "32 E8" [shape=box];
  "32 E8" -> "33 D8" [label="t"];
  "29 E8" [shape=box];
  "29 E8" -> "32 E8" [label="t"];
  "28 D8" [shape=box];
  "28 D8" -> "29 E8" [label="t"];
  "25 D8" [shape=box];
  "25 D8" -> "28 D8" [label="t"];
  "24 E8" [shape=box];
  "24 E8" -> "25 D8" [label="t"];
  "21 <" [shape=trapezium,orientation=270];
  "21 <" -> "35 >" [label="o"];
  "19 E8" [shape=box];
  "19 E8" -> "24 E8" [label="t"];
  "19 E8" -> "21 <" [label="t"];
  "18 D8" [shape=box];
  "18 D8" -> "19 E8" [label="t"];
  "15 D8" [shape=box];
  "15 D8" -> "18 D8" [label="t"];
  "14 E8" [shape=box];
  "14 E8" -> "15 D8" [label="t"];
  "11 E8" [shape=box];
  "11 E8" -> "14 E8" [label="t"];
  "10 D8" [shape=box];
  "10 D8" -> "11 E8" [label="t"];
  "i" -> "21 <";
  "i" -> "10 D8";
}
// graph for dag "dag_cleaned_0" of module "median_1" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "i" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "35 >" [shape=trapezium,orientation=270];
  "35 >" -> "o";
  "33 D8" [shape=box];
  "33 D8" -> "35 >" [label="t"];
  "32 E8" [shape=box];
  "32 E8" -> "33 D8" [label="t"];
  "29 E8" [shape=box];
  "29 E8" -> "32 E8" [label="t"];
  "28 D8" [shape=box];
  "28 D8" -> "29 E8" [label="t"];
  "25 D8" [shape=box];
  "25 D8" -> "28 D8" [label="t"];
  "24 E8" [shape=box];
  "24 E8" -> "25 D8" [label="t"];
  "21 <" [shape=trapezium,orientation=270];
  "21 <" -> "35 >" [label="o"];
  "19 E8" [shape=box];
  "19 E8" -> "24 E8" [label="t"];
  "19 E8" -> "21 <" [label="t"];
  "18 D8" [shape=box];
  "18 D8" -> "19 E8" [label="t"];
  "15 D8" [shape=box];
  "15 D8" -> "18 D8" [label="t"];
  "14 E8" [shape=box];
  "14 E8" -> "15 D8" [label="t"];
  "11 E8" [shape=box];
  "11 E8" -> "14 E8" [label="t"];
  "10 D8" [shape=box];
  "10 D8" -> "11 E8" [label="t"];
  "i" -> "21 <";
  "i" -> "10 D8";
}
// graph for dag "median_1_helper_0_0" of module "median_1" in dot format
digraph "median_1_helper_0_0" {
  // inputs
  "i" [shape=circle];

  // outputs
  "t" [shape=circle];
  "t" [shape=circle];
  "o" [shape=circle];

  // computation vertices
  "35 >" [shape=trapezium,orientation=270];
  "35 >" -> "o";
  "21 <" [shape=trapezium,orientation=270];
  "21 <" -> "35 >" [label="o"];
  "33 D8" [shape=box];
  "33 D8" -> "35 >" [label="t"];
  "33 D8" -> "21 <" [label="t"];
  "33 D8" -> "t";
  "32 E8" [shape=box];
  "32 E8" -> "33 D8" [label="t"];
  "29 E8" [shape=box];
  "29 E8" -> "32 E8" [label="t"];
  "28 D8" [shape=box];
  "28 D8" -> "29 E8" [label="t"];
  "25 D8" [shape=box];
  "25 D8" -> "28 D8" [label="t"];
  "24 E8" [shape=box];
  "24 E8" -> "25 D8" [label="t"];
  "19 E8" [shape=box];
  "19 E8" -> "24 E8" [label="t"];
  "19 E8" -> "t";
  "18 D8" [shape=box];
  "18 D8" -> "19 E8" [label="t"];
  "15 D8" [shape=box];
  "15 D8" -> "18 D8" [label="t"];
  "14 E8" [shape=box];
  "14 E8" -> "15 D8" [label="t"];
  "11 E8" [shape=box];
  "11 E8" -> "14 E8" [label="t"];
  "10 D8" [shape=box];
  "10 D8" -> "11 E8" [label="t"];
  "i" -> "21 <";
  "i" -> "10 D8";
}

! acceleration function

#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <terapix.h>
#include <terapix_ucode.h>

/* FREIA terapix helper function for module median_1
 * 1 input image, 3 output images
 * 15 image operations in dag
 * dag length is 15, dag width is 3
 * cost is 188 cycles per imagelet row
 */
freia_status median_1_helper_0_0(
  freia_data2d * o0,
  freia_data2d * o1,
  freia_data2d * o2,
  freia_data2d * i0,
  const int32_t * pi4)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  terapix_mcu_instr mcu_instr[14];

  // imagelets definitions:
  // - 3 computation imagelets
  // - 3 double buffer imagelets
  int imagelet_size = 170;
  int imagelet_1 = 0;
  int imagelet_2 = 170;
  int imagelet_3 = 340;
  int imagelet_4 = 510;
  int imagelet_5 = 680;
  int imagelet_6 = 850;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // subimage operation
  param.size = sizeof(mcu_instr);
  param.raw = (void*) mcu_instr;

  // dyn_param contents  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);
  // 0: D8(1) -> 3
  mcu_instr[0].macrocode.xmin1 = imagelet_1;
  mcu_instr[0].macrocode.ymin1 = 0;
  mcu_instr[0].macrocode.xmin2 = imagelet_3;
  mcu_instr[0].macrocode.ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi4[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_instr[0].macrocode.xmin3 = x_0;
  mcu_instr[0].macrocode.ymin3 = y_0;
  mcu_instr[0].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[0].macrocode.iter2 = imagelet_size;
  mcu_instr[0].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 1: E8(3) -> 2
  mcu_instr[1].macrocode.xmin1 = imagelet_3;
  mcu_instr[1].macrocode.ymin1 = 0;
  mcu_instr[1].macrocode.xmin2 = imagelet_2;
  mcu_instr[1].macrocode.ymin2 = 0;
  mcu_instr[1].macrocode.xmin3 = x_0;
  mcu_instr[1].macrocode.ymin3 = y_0;
  mcu_instr[1].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[1].macrocode.iter2 = imagelet_size;
  mcu_instr[1].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 2: E8(2) -> 3
  mcu_instr[2].macrocode.xmin1 = imagelet_2;
  mcu_instr[2].macrocode.ymin1 = 0;
  mcu_instr[2].macrocode.xmin2 = imagelet_3;
  mcu_instr[2].macrocode.ymin2 = 0;
  mcu_instr[2].macrocode.xmin3 = x_0;
  mcu_instr[2].macrocode.ymin3 = y_0;
  mcu_instr[2].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[2].macrocode.iter2 = imagelet_size;
  mcu_instr[2].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: D8(3) -> 2
  mcu_instr[3].macrocode.xmin1 = imagelet_3;
  mcu_instr[3].macrocode.ymin1 = 0;
  mcu_instr[3].macrocode.xmin2 = imagelet_2;
  mcu_instr[3].macrocode.ymin2 = 0;
  mcu_instr[3].macrocode.xmin3 = x_0;
  mcu_instr[3].macrocode.ymin3 = y_0;
  mcu_instr[3].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[3].macrocode.iter2 = imagelet_size;
  mcu_instr[3].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 4: D8(2) -> 3
  mcu_instr[4].macrocode.xmin1 = imagelet_2;
  mcu_instr[4].macrocode.ymin1 = 0;
  mcu_instr[4].macrocode.xmin2 = imagelet_3;
  mcu_instr[4].macrocode.ymin2 = 0;
  mcu_instr[4].macrocode.xmin3 = x_0;
  mcu_instr[4].macrocode.ymin3 = y_0;
  mcu_instr[4].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[4].macrocode.iter2 = imagelet_size;
  mcu_instr[4].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 5: E8(3) -> 2
  mcu_instr[5].macrocode.xmin1 = imagelet_3;
  mcu_instr[5].macrocode.ymin1 = 0;
  mcu_instr[5].macrocode.xmin2 = imagelet_2;
  mcu_instr[5].macrocode.ymin2 = 0;
  mcu_instr[5].macrocode.xmin3 = x_0;
  mcu_instr[5].macrocode.ymin3 = y_0;
  mcu_instr[5].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[5].macrocode.iter2 = imagelet_size;
  mcu_instr[5].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 6: E8(2) -> 3
  mcu_instr[6].macrocode.xmin1 = imagelet_2;
  mcu_instr[6].macrocode.ymin1 = 0;
  mcu_instr[6].macrocode.xmin2 = imagelet_3;
  mcu_instr[6].macrocode.ymin2 = 0;
  mcu_instr[6].macrocode.xmin3 = x_0;
  mcu_instr[6].macrocode.ymin3 = y_0;
  mcu_instr[6].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[6].macrocode.iter2 = imagelet_size;
  mcu_instr[6].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 7: D8(3) -> 2
  mcu_instr[7].macrocode.xmin1 = imagelet_3;
  mcu_instr[7].macrocode.ymin1 = 0;
  mcu_instr[7].macrocode.xmin2 = imagelet_2;
  mcu_instr[7].macrocode.ymin2 = 0;
  mcu_instr[7].macrocode.xmin3 = x_0;
  mcu_instr[7].macrocode.ymin3 = y_0;
  mcu_instr[7].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[7].macrocode.iter2 = imagelet_size;
  mcu_instr[7].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 8: D8(2) -> 3
  mcu_instr[8].macrocode.xmin1 = imagelet_2;
  mcu_instr[8].macrocode.ymin1 = 0;
  mcu_instr[8].macrocode.xmin2 = imagelet_3;
  mcu_instr[8].macrocode.ymin2 = 0;
  mcu_instr[8].macrocode.xmin3 = x_0;
  mcu_instr[8].macrocode.ymin3 = y_0;
  mcu_instr[8].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[8].macrocode.iter2 = imagelet_size;
  mcu_instr[8].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 9: E8(3) -> 2
  mcu_instr[9].macrocode.xmin1 = imagelet_3;
  mcu_instr[9].macrocode.ymin1 = 0;
  mcu_instr[9].macrocode.xmin2 = imagelet_2;
  mcu_instr[9].macrocode.ymin2 = 0;
  mcu_instr[9].macrocode.xmin3 = x_0;
  mcu_instr[9].macrocode.ymin3 = y_0;
  mcu_instr[9].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[9].macrocode.iter2 = imagelet_size;
  mcu_instr[9].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 10: E8(2) -> 3
  mcu_instr[10].macrocode.xmin1 = imagelet_2;
  mcu_instr[10].macrocode.ymin1 = 0;
  mcu_instr[10].macrocode.xmin2 = imagelet_3;
  mcu_instr[10].macrocode.ymin2 = 0;
  mcu_instr[10].macrocode.xmin3 = x_0;
  mcu_instr[10].macrocode.ymin3 = y_0;
  mcu_instr[10].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[10].macrocode.iter2 = imagelet_size;
  mcu_instr[10].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 11: D8(3) -> 2
  mcu_instr[11].macrocode.xmin1 = imagelet_3;
  mcu_instr[11].macrocode.ymin1 = 0;
  mcu_instr[11].macrocode.xmin2 = imagelet_2;
  mcu_instr[11].macrocode.ymin2 = 0;
  mcu_instr[11].macrocode.xmin3 = x_0;
  mcu_instr[11].macrocode.ymin3 = y_0;
  mcu_instr[11].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[11].macrocode.iter2 = imagelet_size;
  mcu_instr[11].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 12: <(2,1) -> 3
  mcu_instr[12].macrocode.xmin1 = imagelet_2;
  mcu_instr[12].macrocode.ymin1 = 0;
  mcu_instr[12].macrocode.xmin2 = imagelet_1;
  mcu_instr[12].macrocode.ymin2 = 0;
  mcu_instr[12].macrocode.xmin3 = imagelet_3;
  mcu_instr[12].macrocode.ymin3 = 0;
  mcu_instr[12].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[12].macrocode.iter2 = imagelet_size;
  mcu_instr[12].macrocode.addrStart = TERAPIX_UCODE_INF;
  // 13: >(3,2) -> 1
  mcu_instr[13].macrocode.xmin1 = imagelet_3;
  mcu_instr[13].macrocode.ymin1 = 0;
  mcu_instr[13].macrocode.xmin2 = imagelet_2;
  mcu_instr[13].macrocode.ymin2 = 0;
  mcu_instr[13].macrocode.xmin3 = imagelet_1;
  mcu_instr[13].macrocode.ymin3 = 0;
  mcu_instr[13].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[13].macrocode.iter2 = imagelet_size;
  mcu_instr[13].macrocode.addrStart = TERAPIX_UCODE_SUP;

  // inputs:
  // - imagelet 1 is i0 for i

  // outputs:
  // - imagelet 2 is o0 for t
  // - imagelet 2 is o1 for t
  // - imagelet 1 is o2 for o

  // double buffer management:
  // - buffer 1/4
  // - buffer 2/5
  // - buffer 3/6

  // output imagelet erosion:
  //   north: 12
  //   south: 12
  //    west: 12
  //    east: 12

  ret = freia_cg_template_process_1i_3o(&param, o0, o1, o2, i0);


  return ret;
}


! updated function

freia_status median_1(freia_data2d *o, freia_data2d *i)
{
   freia_status ret;                                                    /*0005*/
   freia_data2d *t = freia_common_create_data(i->bpp, i->widthWa, i->heightWa);        /*0006*/
   
   // int32_t c = 8;
   // ret =  freia_cipo_close(t, i, c, 1);
   ret = median_1_helper_0_0(t, t, o, i, freia_morpho_kernel_8c);       /*0010*/
   ret |= 0;                                                            /*0011*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= 0;                                                            /*0014*/
   ret |= 0;                                                            /*0015*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= 0;                                                            /*0018*/
   ret |= 0;                                                            /*0019*/

   ret |= 0;                                                            /*0021*/
   
   // ret |= freia_cipo_open(t, i, c, 1);
   ret |= 0;                                                            /*0024*/
   ret |= 0;                                                            /*0025*/
   
   // ret |= freia_cipo_close(t, t, c, 1);
   ret |= 0;                                                            /*0028*/
   ret |= 0;                                                            /*0029*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   ret |= 0;                                                            /*0032*/
   ret |= 0;                                                            /*0033*/

   ret |= 0;                                                            /*0035*/
   
   // cleanup
   ret |= freia_common_destruct_data(t);                                /*0038*/
   return ret;                                                          /*0039*/
}

! cleaned up function

freia_status median_1(freia_data2d *o, freia_data2d *i)
{
   freia_status ret;                                                    /*0005*/
   freia_data2d *t = freia_common_create_data(i->bpp, i->widthWa, i->heightWa);        /*0006*/
   
   // int32_t c = 8;
   // ret =  freia_cipo_close(t, i, c, 1);
   ret = median_1_helper_0_0(t, t, o, i, freia_morpho_kernel_8c);       /*0010*/
   
   // ret |= freia_cipo_open(t, t, c, 1);
   
   // ret |= freia_cipo_close(t, t, c, 1);
   
   
   // ret |= freia_cipo_open(t, i, c, 1);
   
   // ret |= freia_cipo_close(t, t, c, 1);
   
   // ret |= freia_cipo_open(t, t, c, 1);
   
   
   // cleanup
   ret |= freia_common_destruct_data(t);                                /*0038*/
   return ret;                                                          /*0039*/
}
#
# FREIA COMPILATION DONE
#

