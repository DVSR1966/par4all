#
# AIPO
#

! initial function

int license_plate_copies(void)
{
   freia_dataio fdin;                                                   /*0010*/
   freia_dataio fdout;                                                  /*0011*/

   freia_data2d *in;                                                    /*0013*/
   freia_data2d *immir;                                                 /*0014*/
   freia_data2d *imopen;                                                /*0015*/
   freia_data2d *imclose;                                               /*0016*/
   freia_data2d *imopenth;                                              /*0017*/
   freia_data2d *imcloseth;                                             /*0018*/
   freia_data2d *imand;                                                 /*0019*/
   freia_data2d *imfilt;                                                /*0020*/
   freia_data2d *imout;                                                 /*0021*/
   freia_data2d *out;                                                   /*0022*/

   const  int32_t kernel1x3[9] = {0, 0, 0, 1, 1, 1, 0, 0, 0};           /*0024*/
   const  int32_t kernel3x1[9] = {0, 1, 0, 0, 1, 0, 0, 1, 0};           /*0025*/

   freia_status _return0, _return1, _return2, _return3, _return4;       /*0027*/
   freia_data2d *imtmp_0;                                               /*0028*/
   freia_status ret_0;                                                  /*0029*/
   int i_0;                                                             /*0030*/
   freia_data2d *imtmp_1;                                               /*0031*/
   freia_status ret_1;                                                  /*0032*/
   int i_1;                                                             /*0033*/
   freia_data2d *imtmp_2;                                               /*0034*/
   freia_status ret_2;                                                  /*0035*/
   int i_2;                                                             /*0036*/
   freia_data2d *imtmp_3;                                               /*0037*/
   freia_status ret_3;                                                  /*0038*/
   int i_3, i_4;                                                        /*0039*/
   
   /* open videos flow */
   freia_common_open_input(&fdin, 0);                                   /*0042*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, 8);          /*0043*/
   
   /* images creation */
   in = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);               /*0046*/
   immir = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0047*/
   imopen = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0048*/
   imclose = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);          /*0049*/
   imopenth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);         /*0050*/
   imcloseth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);        /*0051*/
   imand = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0052*/
   imfilt = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0053*/
   imout = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0054*/
   out = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);              /*0055*/
   
   /* processing */
   freia_common_rx_image(in, &fdin);                                    /*0058*/

   imtmp_0 = freia_common_create_data(imopen->bpp, imopen->widthWa, imopen->heightWa);                /*0060*/

   ret_0 = freia_aipo_copy(imtmp_0, in);                                /*0062*/

   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0064*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0065*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0066*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0067*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0068*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0069*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0070*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0071*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0072*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0073*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0074*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0075*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0076*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0077*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0078*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0079*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0080*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0081*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0082*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0083*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0084*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0085*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0086*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0087*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0088*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0089*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0090*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0091*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0092*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0093*/
   i_0 = 15;                                                            /*0094*/

   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0096*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0097*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0098*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0099*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0100*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0101*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0102*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0103*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0104*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0105*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0106*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0107*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0108*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0109*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0110*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0111*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0112*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0113*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0114*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0115*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0116*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0117*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0118*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0119*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0120*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0121*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0122*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0123*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0124*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0125*/
   i_0 = 15;                                                            /*0126*/

   freia_common_destruct_data(imtmp_0);                                 /*0128*/

   _return1 = ret_0;                                                    /*0130*/

   imtmp_1 = freia_common_create_data(imclose->bpp, imclose->widthWa, imclose->heightWa);             /*0132*/

   ret_1 = freia_aipo_copy(imtmp_1, in);                                /*0134*/

   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0136*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0137*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0138*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0139*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0140*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0141*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0142*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0143*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0144*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0145*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0146*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0147*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0148*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0149*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0150*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0151*/
   i_1 = 8;                                                             /*0152*/

   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0154*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0155*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0156*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0157*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0158*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0159*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0160*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0161*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0162*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0163*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0164*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0165*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0166*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0167*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0168*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0169*/
   i_1 = 8;                                                             /*0170*/

   freia_common_destruct_data(imtmp_1);                                 /*0172*/

   _return0 = ret_1;                                                    /*0174*/

   freia_aipo_threshold(imopenth, imopen, 1, 50, 1);                    /*0176*/
   freia_aipo_threshold(imcloseth, imclose, 150, 255, 1);               /*0177*/

   freia_aipo_and(imand, imopenth, imcloseth);                          /*0179*/

   imtmp_2 = freia_common_create_data(imfilt->bpp, imfilt->widthWa, imfilt->heightWa);                /*0181*/

   ret_2 = freia_aipo_copy(imtmp_2, imand);                             /*0183*/

   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0185*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0186*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0187*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0188*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0189*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0190*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0191*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0192*/
   i_2 = 4;                                                             /*0193*/

   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0195*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0196*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0197*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0198*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0199*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0200*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0201*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0202*/
   i_2 = 4;                                                             /*0203*/

   freia_common_destruct_data(imtmp_2);                                 /*0205*/

   _return2 = ret_2;                                                    /*0207*/

   imtmp_3 = freia_common_create_data(imout->bpp, imout->widthWa, imout->heightWa);    /*0209*/

   ret_3 = freia_aipo_copy(imtmp_3, imfilt);                            /*0211*/

   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0213*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0214*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0215*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0216*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0217*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0218*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0219*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0220*/
   i_3 = 4;                                                             /*0221*/

   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0223*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0224*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0225*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0226*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0227*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0228*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0229*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0230*/
   i_3 = 4;                                                             /*0231*/

   freia_common_destruct_data(imtmp_3);                                 /*0233*/

   _return3 = ret_3;                                                    /*0235*/

   freia_aipo_dilate_8c(out, imout, freia_morpho_kernel_8c);            /*0237*/
   freia_aipo_dilate_8c(out, out, freia_morpho_kernel_8c);              /*0238*/
   freia_aipo_dilate_8c(out, out, freia_morpho_kernel_8c);              /*0239*/
   i_4 = 3;                                                             /*0240*/

   _return4 = 0;                                                        /*0242*/

   freia_aipo_and(out, out, in);                                        /*0244*/
   freia_common_tx_image(out, &fdout);                                  /*0245*/
   
   /* images destruction */
   freia_common_destruct_data(in);                                      /*0248*/
   freia_common_destruct_data(immir);                                   /*0249*/
   freia_common_destruct_data(imopen);                                  /*0250*/
   freia_common_destruct_data(imclose);                                 /*0251*/
   freia_common_destruct_data(imopenth);                                /*0252*/
   freia_common_destruct_data(imcloseth);                               /*0253*/
   freia_common_destruct_data(imand);                                   /*0254*/
   freia_common_destruct_data(imfilt);                                  /*0255*/
   freia_common_destruct_data(imout);                                   /*0256*/
   freia_common_destruct_data(out);                                     /*0257*/
   
   /* close videos flow */
   freia_common_close_input(&fdin);                                     /*0260*/
   freia_common_close_output(&fdout);                                   /*0261*/

   return 0;                                                            /*0263*/
}

! graphs

// graph for dag "dag_0" of module "license_plate_copies" in dot format
digraph "dag_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "244 &" [shape=trapezium,orientation=270];
  "244 &" -> "out";
  "242 ?" [shape=none];
  "240 ?" [shape=none];
  "239 D8" [shape=box];
  "239 D8" -> "244 &" [label="out"];
  "238 D8" [shape=box];
  "238 D8" -> "239 D8" [label="out"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="out"];
  "235 ?" [shape=none];
  "233 ?" [shape=none];
  "231 ?" [shape=none];
  "231 ?" -> "221 ?" [arrowhead=empty,label="i_3"];
  "230 =" [shape=circle];
  "229 D8" [shape=box];
  "229 D8" -> "237 D8" [label="imout"];
  "229 D8" -> "230 =" [label="imout"];
  "228 =" [shape=circle];
  "228 =" -> "229 D8" [label="imtmp_3"];
  "227 D8" [shape=box];
  "227 D8" -> "228 =" [label="imout"];
  "226 =" [shape=circle];
  "226 =" -> "227 D8" [label="imtmp_3"];
  "225 D8" [shape=box];
  "225 D8" -> "226 =" [label="imout"];
  "224 =" [shape=circle];
  "224 =" -> "225 D8" [label="imtmp_3"];
  "223 D8" [shape=box];
  "223 D8" -> "224 =" [label="imout"];
  "221 ?" [shape=none];
  "221 ?" -> "231 ?" [arrowhead=empty,label="i_3"];
  "220 =" [shape=circle];
  "220 =" -> "223 D8" [label="imtmp_3"];
  "219 E8" [shape=box];
  "219 E8" -> "220 =" [label="imout"];
  "218 =" [shape=circle];
  "218 =" -> "219 E8" [label="imtmp_3"];
  "217 E8" [shape=box];
  "217 E8" -> "218 =" [label="imout"];
  "216 =" [shape=circle];
  "216 =" -> "217 E8" [label="imtmp_3"];
  "215 E8" [shape=box];
  "215 E8" -> "216 =" [label="imout"];
  "214 =" [shape=circle];
  "214 =" -> "215 E8" [label="imtmp_3"];
  "213 E8" [shape=box];
  "213 E8" -> "214 =" [label="imout"];
  "211 =" [shape=circle];
  "211 =" -> "213 E8" [label="imtmp_3"];
  "209 ?" [shape=none];
  "207 ?" [shape=none];
  "205 ?" [shape=none];
  "203 ?" [shape=none];
  "203 ?" -> "193 ?" [arrowhead=empty,label="i_2"];
  "202 =" [shape=circle];
  "201 D8" [shape=box];
  "201 D8" -> "211 =" [label="imfilt"];
  "201 D8" -> "202 =" [label="imfilt"];
  "200 =" [shape=circle];
  "200 =" -> "201 D8" [label="imtmp_2"];
  "199 D8" [shape=box];
  "199 D8" -> "200 =" [label="imfilt"];
  "198 =" [shape=circle];
  "198 =" -> "199 D8" [label="imtmp_2"];
  "197 D8" [shape=box];
  "197 D8" -> "198 =" [label="imfilt"];
  "196 =" [shape=circle];
  "196 =" -> "197 D8" [label="imtmp_2"];
  "195 D8" [shape=box];
  "195 D8" -> "196 =" [label="imfilt"];
  "193 ?" [shape=none];
  "193 ?" -> "203 ?" [arrowhead=empty,label="i_2"];
  "192 =" [shape=circle];
  "192 =" -> "195 D8" [label="imtmp_2"];
  "191 E8" [shape=box];
  "191 E8" -> "192 =" [label="imfilt"];
  "190 =" [shape=circle];
  "190 =" -> "191 E8" [label="imtmp_2"];
  "189 E8" [shape=box];
  "189 E8" -> "190 =" [label="imfilt"];
  "188 =" [shape=circle];
  "188 =" -> "189 E8" [label="imtmp_2"];
  "187 E8" [shape=box];
  "187 E8" -> "188 =" [label="imfilt"];
  "186 =" [shape=circle];
  "186 =" -> "187 E8" [label="imtmp_2"];
  "185 E8" [shape=box];
  "185 E8" -> "186 =" [label="imfilt"];
  "183 =" [shape=circle];
  "183 =" -> "185 E8" [label="imtmp_2"];
  "181 ?" [shape=none];
  "179 &" [shape=trapezium,orientation=270];
  "179 &" -> "183 =" [label="imand"];
  "177 thr" [shape=parallelogram];
  "177 thr" -> "179 &" [label="imcloseth"];
  "176 thr" [shape=parallelogram];
  "176 thr" -> "179 &" [label="imopenth"];
  "174 ?" [shape=none];
  "172 ?" [shape=none];
  "170 ?" [shape=none];
  "170 ?" -> "152 ?" [arrowhead=empty,label="i_1"];
  "169 =" [shape=circle];
  "168 E8" [shape=box];
  "168 E8" -> "177 thr" [label="imclose"];
  "168 E8" -> "169 =" [label="imclose"];
  "167 =" [shape=circle];
  "167 =" -> "168 E8" [label="imtmp_1"];
  "166 E8" [shape=box];
  "166 E8" -> "167 =" [label="imclose"];
  "165 =" [shape=circle];
  "165 =" -> "166 E8" [label="imtmp_1"];
  "164 E8" [shape=box];
  "164 E8" -> "165 =" [label="imclose"];
  "163 =" [shape=circle];
  "163 =" -> "164 E8" [label="imtmp_1"];
  "162 E8" [shape=box];
  "162 E8" -> "163 =" [label="imclose"];
  "161 =" [shape=circle];
  "161 =" -> "162 E8" [label="imtmp_1"];
  "160 E8" [shape=box];
  "160 E8" -> "161 =" [label="imclose"];
  "159 =" [shape=circle];
  "159 =" -> "160 E8" [label="imtmp_1"];
  "158 E8" [shape=box];
  "158 E8" -> "159 =" [label="imclose"];
  "157 =" [shape=circle];
  "157 =" -> "158 E8" [label="imtmp_1"];
  "156 E8" [shape=box];
  "156 E8" -> "157 =" [label="imclose"];
  "155 =" [shape=circle];
  "155 =" -> "156 E8" [label="imtmp_1"];
  "154 E8" [shape=box];
  "154 E8" -> "155 =" [label="imclose"];
  "152 ?" [shape=none];
  "152 ?" -> "170 ?" [arrowhead=empty,label="i_1"];
  "151 =" [shape=circle];
  "151 =" -> "154 E8" [label="imtmp_1"];
  "150 D8" [shape=box];
  "150 D8" -> "151 =" [label="imclose"];
  "149 =" [shape=circle];
  "149 =" -> "150 D8" [label="imtmp_1"];
  "148 D8" [shape=box];
  "148 D8" -> "149 =" [label="imclose"];
  "147 =" [shape=circle];
  "147 =" -> "148 D8" [label="imtmp_1"];
  "146 D8" [shape=box];
  "146 D8" -> "147 =" [label="imclose"];
  "145 =" [shape=circle];
  "145 =" -> "146 D8" [label="imtmp_1"];
  "144 D8" [shape=box];
  "144 D8" -> "145 =" [label="imclose"];
  "143 =" [shape=circle];
  "143 =" -> "144 D8" [label="imtmp_1"];
  "142 D8" [shape=box];
  "142 D8" -> "143 =" [label="imclose"];
  "141 =" [shape=circle];
  "141 =" -> "142 D8" [label="imtmp_1"];
  "140 D8" [shape=box];
  "140 D8" -> "141 =" [label="imclose"];
  "139 =" [shape=circle];
  "139 =" -> "140 D8" [label="imtmp_1"];
  "138 D8" [shape=box];
  "138 D8" -> "139 =" [label="imclose"];
  "137 =" [shape=circle];
  "137 =" -> "138 D8" [label="imtmp_1"];
  "136 D8" [shape=box];
  "136 D8" -> "137 =" [label="imclose"];
  "134 =" [shape=circle];
  "134 =" -> "136 D8" [label="imtmp_1"];
  "132 ?" [shape=none];
  "130 ?" [shape=none];
  "128 ?" [shape=none];
  "126 ?" [shape=none];
  "126 ?" -> "94 ?" [arrowhead=empty,label="i_0"];
  "125 =" [shape=circle];
  "124 D8" [shape=box];
  "124 D8" -> "176 thr" [label="imopen"];
  "124 D8" -> "125 =" [label="imopen"];
  "123 =" [shape=circle];
  "123 =" -> "124 D8" [label="imtmp_0"];
  "122 D8" [shape=box];
  "122 D8" -> "123 =" [label="imopen"];
  "121 =" [shape=circle];
  "121 =" -> "122 D8" [label="imtmp_0"];
  "120 D8" [shape=box];
  "120 D8" -> "121 =" [label="imopen"];
  "119 =" [shape=circle];
  "119 =" -> "120 D8" [label="imtmp_0"];
  "118 D8" [shape=box];
  "118 D8" -> "119 =" [label="imopen"];
  "117 =" [shape=circle];
  "117 =" -> "118 D8" [label="imtmp_0"];
  "116 D8" [shape=box];
  "116 D8" -> "117 =" [label="imopen"];
  "115 =" [shape=circle];
  "115 =" -> "116 D8" [label="imtmp_0"];
  "114 D8" [shape=box];
  "114 D8" -> "115 =" [label="imopen"];
  "113 =" [shape=circle];
  "113 =" -> "114 D8" [label="imtmp_0"];
  "112 D8" [shape=box];
  "112 D8" -> "113 =" [label="imopen"];
  "111 =" [shape=circle];
  "111 =" -> "112 D8" [label="imtmp_0"];
  "110 D8" [shape=box];
  "110 D8" -> "111 =" [label="imopen"];
  "109 =" [shape=circle];
  "109 =" -> "110 D8" [label="imtmp_0"];
  "108 D8" [shape=box];
  "108 D8" -> "109 =" [label="imopen"];
  "107 =" [shape=circle];
  "107 =" -> "108 D8" [label="imtmp_0"];
  "106 D8" [shape=box];
  "106 D8" -> "107 =" [label="imopen"];
  "105 =" [shape=circle];
  "105 =" -> "106 D8" [label="imtmp_0"];
  "104 D8" [shape=box];
  "104 D8" -> "105 =" [label="imopen"];
  "103 =" [shape=circle];
  "103 =" -> "104 D8" [label="imtmp_0"];
  "102 D8" [shape=box];
  "102 D8" -> "103 =" [label="imopen"];
  "101 =" [shape=circle];
  "101 =" -> "102 D8" [label="imtmp_0"];
  "100 D8" [shape=box];
  "100 D8" -> "101 =" [label="imopen"];
  "99 =" [shape=circle];
  "99 =" -> "100 D8" [label="imtmp_0"];
  "98 D8" [shape=box];
  "98 D8" -> "99 =" [label="imopen"];
  "97 =" [shape=circle];
  "97 =" -> "98 D8" [label="imtmp_0"];
  "96 D8" [shape=box];
  "96 D8" -> "97 =" [label="imopen"];
  "94 ?" [shape=none];
  "94 ?" -> "126 ?" [arrowhead=empty,label="i_0"];
  "93 =" [shape=circle];
  "93 =" -> "96 D8" [label="imtmp_0"];
  "92 E8" [shape=box];
  "92 E8" -> "93 =" [label="imopen"];
  "91 =" [shape=circle];
  "91 =" -> "92 E8" [label="imtmp_0"];
  "90 E8" [shape=box];
  "90 E8" -> "91 =" [label="imopen"];
  "89 =" [shape=circle];
  "89 =" -> "90 E8" [label="imtmp_0"];
  "88 E8" [shape=box];
  "88 E8" -> "89 =" [label="imopen"];
  "87 =" [shape=circle];
  "87 =" -> "88 E8" [label="imtmp_0"];
  "86 E8" [shape=box];
  "86 E8" -> "87 =" [label="imopen"];
  "85 =" [shape=circle];
  "85 =" -> "86 E8" [label="imtmp_0"];
  "84 E8" [shape=box];
  "84 E8" -> "85 =" [label="imopen"];
  "83 =" [shape=circle];
  "83 =" -> "84 E8" [label="imtmp_0"];
  "82 E8" [shape=box];
  "82 E8" -> "83 =" [label="imopen"];
  "81 =" [shape=circle];
  "81 =" -> "82 E8" [label="imtmp_0"];
  "80 E8" [shape=box];
  "80 E8" -> "81 =" [label="imopen"];
  "79 =" [shape=circle];
  "79 =" -> "80 E8" [label="imtmp_0"];
  "78 E8" [shape=box];
  "78 E8" -> "79 =" [label="imopen"];
  "77 =" [shape=circle];
  "77 =" -> "78 E8" [label="imtmp_0"];
  "76 E8" [shape=box];
  "76 E8" -> "77 =" [label="imopen"];
  "75 =" [shape=circle];
  "75 =" -> "76 E8" [label="imtmp_0"];
  "74 E8" [shape=box];
  "74 E8" -> "75 =" [label="imopen"];
  "73 =" [shape=circle];
  "73 =" -> "74 E8" [label="imtmp_0"];
  "72 E8" [shape=box];
  "72 E8" -> "73 =" [label="imopen"];
  "71 =" [shape=circle];
  "71 =" -> "72 E8" [label="imtmp_0"];
  "70 E8" [shape=box];
  "70 E8" -> "71 =" [label="imopen"];
  "69 =" [shape=circle];
  "69 =" -> "70 E8" [label="imtmp_0"];
  "68 E8" [shape=box];
  "68 E8" -> "69 =" [label="imopen"];
  "67 =" [shape=circle];
  "67 =" -> "68 E8" [label="imtmp_0"];
  "66 E8" [shape=box];
  "66 E8" -> "67 =" [label="imopen"];
  "65 =" [shape=circle];
  "65 =" -> "66 E8" [label="imtmp_0"];
  "64 E8" [shape=box];
  "64 E8" -> "65 =" [label="imopen"];
  "62 =" [shape=circle];
  "62 =" -> "64 E8" [label="imtmp_0"];
  "in" -> "244 &";
  "in" -> "134 =";
  "in" -> "62 =";
}
// graph for dag "dag_cleaned_0" of module "license_plate_copies" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "244 &" [shape=trapezium,orientation=270];
  "244 &" -> "out";
  "242 ?" [shape=none];
  "240 ?" [shape=none];
  "239 D8" [shape=box];
  "239 D8" -> "244 &" [label="out"];
  "238 D8" [shape=box];
  "238 D8" -> "239 D8" [label="out"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="out"];
  "235 ?" [shape=none];
  "233 ?" [shape=none];
  "231 ?" [shape=none];
  "231 ?" -> "221 ?" [arrowhead=empty,label="i_3"];
  "229 D8" [shape=box];
  "229 D8" -> "237 D8" [label="imout"];
  "227 D8" [shape=box];
  "227 D8" -> "229 D8" [label="imout"];
  "225 D8" [shape=box];
  "225 D8" -> "227 D8" [label="imout"];
  "223 D8" [shape=box];
  "223 D8" -> "225 D8" [label="imout"];
  "221 ?" [shape=none];
  "221 ?" -> "231 ?" [arrowhead=empty,label="i_3"];
  "219 E8" [shape=box];
  "219 E8" -> "223 D8" [label="imout"];
  "217 E8" [shape=box];
  "217 E8" -> "219 E8" [label="imout"];
  "215 E8" [shape=box];
  "215 E8" -> "217 E8" [label="imout"];
  "213 E8" [shape=box];
  "213 E8" -> "215 E8" [label="imout"];
  "209 ?" [shape=none];
  "207 ?" [shape=none];
  "205 ?" [shape=none];
  "203 ?" [shape=none];
  "203 ?" -> "193 ?" [arrowhead=empty,label="i_2"];
  "201 D8" [shape=box];
  "201 D8" -> "213 E8" [label="imfilt"];
  "199 D8" [shape=box];
  "199 D8" -> "201 D8" [label="imfilt"];
  "197 D8" [shape=box];
  "197 D8" -> "199 D8" [label="imfilt"];
  "195 D8" [shape=box];
  "195 D8" -> "197 D8" [label="imfilt"];
  "193 ?" [shape=none];
  "193 ?" -> "203 ?" [arrowhead=empty,label="i_2"];
  "191 E8" [shape=box];
  "191 E8" -> "195 D8" [label="imfilt"];
  "189 E8" [shape=box];
  "189 E8" -> "191 E8" [label="imfilt"];
  "187 E8" [shape=box];
  "187 E8" -> "189 E8" [label="imfilt"];
  "185 E8" [shape=box];
  "185 E8" -> "187 E8" [label="imfilt"];
  "181 ?" [shape=none];
  "179 &" [shape=trapezium,orientation=270];
  "179 &" -> "185 E8" [label="imand"];
  "177 thr" [shape=parallelogram];
  "177 thr" -> "179 &" [label="imcloseth"];
  "176 thr" [shape=parallelogram];
  "176 thr" -> "179 &" [label="imopenth"];
  "174 ?" [shape=none];
  "172 ?" [shape=none];
  "170 ?" [shape=none];
  "170 ?" -> "152 ?" [arrowhead=empty,label="i_1"];
  "168 E8" [shape=box];
  "168 E8" -> "177 thr" [label="imclose"];
  "166 E8" [shape=box];
  "166 E8" -> "168 E8" [label="imclose"];
  "164 E8" [shape=box];
  "164 E8" -> "166 E8" [label="imclose"];
  "162 E8" [shape=box];
  "162 E8" -> "164 E8" [label="imclose"];
  "160 E8" [shape=box];
  "160 E8" -> "162 E8" [label="imclose"];
  "158 E8" [shape=box];
  "158 E8" -> "160 E8" [label="imclose"];
  "156 E8" [shape=box];
  "156 E8" -> "158 E8" [label="imclose"];
  "154 E8" [shape=box];
  "154 E8" -> "156 E8" [label="imclose"];
  "152 ?" [shape=none];
  "152 ?" -> "170 ?" [arrowhead=empty,label="i_1"];
  "150 D8" [shape=box];
  "150 D8" -> "154 E8" [label="imclose"];
  "148 D8" [shape=box];
  "148 D8" -> "150 D8" [label="imclose"];
  "146 D8" [shape=box];
  "146 D8" -> "148 D8" [label="imclose"];
  "144 D8" [shape=box];
  "144 D8" -> "146 D8" [label="imclose"];
  "142 D8" [shape=box];
  "142 D8" -> "144 D8" [label="imclose"];
  "140 D8" [shape=box];
  "140 D8" -> "142 D8" [label="imclose"];
  "138 D8" [shape=box];
  "138 D8" -> "140 D8" [label="imclose"];
  "136 D8" [shape=box];
  "136 D8" -> "138 D8" [label="imclose"];
  "132 ?" [shape=none];
  "130 ?" [shape=none];
  "128 ?" [shape=none];
  "126 ?" [shape=none];
  "126 ?" -> "94 ?" [arrowhead=empty,label="i_0"];
  "124 D8" [shape=box];
  "124 D8" -> "176 thr" [label="imopen"];
  "122 D8" [shape=box];
  "122 D8" -> "124 D8" [label="imopen"];
  "120 D8" [shape=box];
  "120 D8" -> "122 D8" [label="imopen"];
  "118 D8" [shape=box];
  "118 D8" -> "120 D8" [label="imopen"];
  "116 D8" [shape=box];
  "116 D8" -> "118 D8" [label="imopen"];
  "114 D8" [shape=box];
  "114 D8" -> "116 D8" [label="imopen"];
  "112 D8" [shape=box];
  "112 D8" -> "114 D8" [label="imopen"];
  "110 D8" [shape=box];
  "110 D8" -> "112 D8" [label="imopen"];
  "108 D8" [shape=box];
  "108 D8" -> "110 D8" [label="imopen"];
  "106 D8" [shape=box];
  "106 D8" -> "108 D8" [label="imopen"];
  "104 D8" [shape=box];
  "104 D8" -> "106 D8" [label="imopen"];
  "102 D8" [shape=box];
  "102 D8" -> "104 D8" [label="imopen"];
  "100 D8" [shape=box];
  "100 D8" -> "102 D8" [label="imopen"];
  "98 D8" [shape=box];
  "98 D8" -> "100 D8" [label="imopen"];
  "96 D8" [shape=box];
  "96 D8" -> "98 D8" [label="imopen"];
  "94 ?" [shape=none];
  "94 ?" -> "126 ?" [arrowhead=empty,label="i_0"];
  "92 E8" [shape=box];
  "92 E8" -> "96 D8" [label="imopen"];
  "90 E8" [shape=box];
  "90 E8" -> "92 E8" [label="imopen"];
  "88 E8" [shape=box];
  "88 E8" -> "90 E8" [label="imopen"];
  "86 E8" [shape=box];
  "86 E8" -> "88 E8" [label="imopen"];
  "84 E8" [shape=box];
  "84 E8" -> "86 E8" [label="imopen"];
  "82 E8" [shape=box];
  "82 E8" -> "84 E8" [label="imopen"];
  "80 E8" [shape=box];
  "80 E8" -> "82 E8" [label="imopen"];
  "78 E8" [shape=box];
  "78 E8" -> "80 E8" [label="imopen"];
  "76 E8" [shape=box];
  "76 E8" -> "78 E8" [label="imopen"];
  "74 E8" [shape=box];
  "74 E8" -> "76 E8" [label="imopen"];
  "72 E8" [shape=box];
  "72 E8" -> "74 E8" [label="imopen"];
  "70 E8" [shape=box];
  "70 E8" -> "72 E8" [label="imopen"];
  "68 E8" [shape=box];
  "68 E8" -> "70 E8" [label="imopen"];
  "66 E8" [shape=box];
  "66 E8" -> "68 E8" [label="imopen"];
  "64 E8" [shape=box];
  "64 E8" -> "66 E8" [label="imopen"];
  "in" -> "64 E8";
  "in" -> "136 D8";
  "in" -> "244 &";
}

! updated function for

int license_plate_copies(void)
{
   freia_dataio fdin;                                                   /*0010*/
   freia_dataio fdout;                                                  /*0011*/

   freia_data2d *in;                                                    /*0013*/
   freia_data2d *imopen;                                                /*0015*/
   freia_data2d *imclose;                                               /*0016*/
   freia_data2d *imopenth;                                              /*0017*/
   freia_data2d *imcloseth;                                             /*0018*/
   freia_data2d *imand;                                                 /*0019*/
   freia_data2d *imfilt;                                                /*0020*/
   freia_data2d *imout;                                                 /*0021*/
   freia_data2d *out;                                                   /*0022*/

   const  int32_t kernel1x3[9] = {0, 0, 0, 1, 1, 1, 0, 0, 0};           /*0024*/
   const  int32_t kernel3x1[9] = {0, 1, 0, 0, 1, 0, 0, 1, 0};           /*0025*/

   freia_status _return0, _return1, _return2, _return3, _return4;       /*0027*/
   freia_status ret_0;                                                  /*0029*/
   int i_0;                                                             /*0030*/
   freia_status ret_1;                                                  /*0032*/
   int i_1;                                                             /*0033*/
   freia_status ret_2;                                                  /*0035*/
   int i_2;                                                             /*0036*/
   freia_status ret_3;                                                  /*0038*/
   int i_3, i_4;                                                        /*0039*/
   
   /* open videos flow */
   freia_common_open_input(&fdin, 0);                                   /*0042*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, 8);          /*0043*/
   
   /* images creation */
   in = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);               /*0046*/
   imopen = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0048*/
   imclose = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);          /*0049*/
   imopenth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);         /*0050*/
   imcloseth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);        /*0051*/
   imand = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0052*/
   imfilt = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0053*/
   imout = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0054*/
   out = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);              /*0055*/
   
   /* processing */
   freia_common_rx_image(in, &fdin);                                    /*0058*/
   
   
   
   
   
   ret_0 = 0;                                                           /*0062*/

   ret_0 |= freia_aipo_erode_8c(imopen, in, kernel1x3);                 /*0064*/
   ret_0 |= 0;                                                          /*0065*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0066*/
   ret_0 |= 0;                                                          /*0067*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0068*/
   ret_0 |= 0;                                                          /*0069*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0070*/
   ret_0 |= 0;                                                          /*0071*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0072*/
   ret_0 |= 0;                                                          /*0073*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0074*/
   ret_0 |= 0;                                                          /*0075*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0076*/
   ret_0 |= 0;                                                          /*0077*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0078*/
   ret_0 |= 0;                                                          /*0079*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0080*/
   ret_0 |= 0;                                                          /*0081*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0082*/
   ret_0 |= 0;                                                          /*0083*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0084*/
   ret_0 |= 0;                                                          /*0085*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0086*/
   ret_0 |= 0;                                                          /*0087*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0088*/
   ret_0 |= 0;                                                          /*0089*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0090*/
   ret_0 |= 0;                                                          /*0091*/
   ret_0 |= freia_aipo_erode_8c(imopen, imopen, kernel1x3);             /*0092*/
   ret_0 |= 0;                                                          /*0093*/
   i_0 = 15;                                                            /*0094*/

   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0096*/
   ret_0 |= 0;                                                          /*0097*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0098*/
   ret_0 |= 0;                                                          /*0099*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0100*/
   ret_0 |= 0;                                                          /*0101*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0102*/
   ret_0 |= 0;                                                          /*0103*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0104*/
   ret_0 |= 0;                                                          /*0105*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0106*/
   ret_0 |= 0;                                                          /*0107*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0108*/
   ret_0 |= 0;                                                          /*0109*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0110*/
   ret_0 |= 0;                                                          /*0111*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0112*/
   ret_0 |= 0;                                                          /*0113*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0114*/
   ret_0 |= 0;                                                          /*0115*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0116*/
   ret_0 |= 0;                                                          /*0117*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0118*/
   ret_0 |= 0;                                                          /*0119*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0120*/
   ret_0 |= 0;                                                          /*0121*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0122*/
   ret_0 |= 0;                                                          /*0123*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imopen, kernel1x3);            /*0124*/
   ret_0 |= 0;                                                          /*0125*/
   i_0 = 15;                                                            /*0126*/

   _return1 = ret_0;                                                    /*0130*/

   ret_1 = 0;                                                           /*0134*/

   ret_1 |= freia_aipo_dilate_8c(imclose, in, kernel1x3);               /*0136*/
   ret_1 |= 0;                                                          /*0137*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imclose, kernel1x3);          /*0138*/
   ret_1 |= 0;                                                          /*0139*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imclose, kernel1x3);          /*0140*/
   ret_1 |= 0;                                                          /*0141*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imclose, kernel1x3);          /*0142*/
   ret_1 |= 0;                                                          /*0143*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imclose, kernel1x3);          /*0144*/
   ret_1 |= 0;                                                          /*0145*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imclose, kernel1x3);          /*0146*/
   ret_1 |= 0;                                                          /*0147*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imclose, kernel1x3);          /*0148*/
   ret_1 |= 0;                                                          /*0149*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imclose, kernel1x3);          /*0150*/
   ret_1 |= 0;                                                          /*0151*/
   i_1 = 8;                                                             /*0152*/

   ret_1 |= freia_aipo_erode_8c(imclose, imclose, kernel1x3);           /*0154*/
   ret_1 |= 0;                                                          /*0155*/
   ret_1 |= freia_aipo_erode_8c(imclose, imclose, kernel1x3);           /*0156*/
   ret_1 |= 0;                                                          /*0157*/
   ret_1 |= freia_aipo_erode_8c(imclose, imclose, kernel1x3);           /*0158*/
   ret_1 |= 0;                                                          /*0159*/
   ret_1 |= freia_aipo_erode_8c(imclose, imclose, kernel1x3);           /*0160*/
   ret_1 |= 0;                                                          /*0161*/
   ret_1 |= freia_aipo_erode_8c(imclose, imclose, kernel1x3);           /*0162*/
   ret_1 |= 0;                                                          /*0163*/
   ret_1 |= freia_aipo_erode_8c(imclose, imclose, kernel1x3);           /*0164*/
   ret_1 |= 0;                                                          /*0165*/
   ret_1 |= freia_aipo_erode_8c(imclose, imclose, kernel1x3);           /*0166*/
   ret_1 |= 0;                                                          /*0167*/
   ret_1 |= freia_aipo_erode_8c(imclose, imclose, kernel1x3);           /*0168*/
   ret_1 |= 0;                                                          /*0169*/
   i_1 = 8;                                                             /*0170*/

   _return0 = ret_1;                                                    /*0174*/

   freia_aipo_threshold(imopenth, imopen, 1, 50, 1);                    /*0176*/
   freia_aipo_threshold(imcloseth, imclose, 150, 255, 1);               /*0177*/

   freia_aipo_and(imand, imopenth, imcloseth);                          /*0179*/

   ret_2 = 0;                                                           /*0183*/

   ret_2 |= freia_aipo_erode_8c(imfilt, imand, kernel3x1);              /*0185*/
   ret_2 |= 0;                                                          /*0186*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imfilt, kernel3x1);             /*0187*/
   ret_2 |= 0;                                                          /*0188*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imfilt, kernel3x1);             /*0189*/
   ret_2 |= 0;                                                          /*0190*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imfilt, kernel3x1);             /*0191*/
   ret_2 |= 0;                                                          /*0192*/
   i_2 = 4;                                                             /*0193*/

   ret_2 |= freia_aipo_dilate_8c(imfilt, imfilt, kernel3x1);            /*0195*/
   ret_2 |= 0;                                                          /*0196*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imfilt, kernel3x1);            /*0197*/
   ret_2 |= 0;                                                          /*0198*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imfilt, kernel3x1);            /*0199*/
   ret_2 |= 0;                                                          /*0200*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imfilt, kernel3x1);            /*0201*/
   ret_2 |= 0;                                                          /*0202*/
   i_2 = 4;                                                             /*0203*/

   _return2 = ret_2;                                                    /*0207*/

   ret_3 = 0;                                                           /*0211*/

   ret_3 |= freia_aipo_erode_8c(imout, imfilt, kernel1x3);              /*0213*/
   ret_3 |= 0;                                                          /*0214*/
   ret_3 |= freia_aipo_erode_8c(imout, imout, kernel1x3);               /*0215*/
   ret_3 |= 0;                                                          /*0216*/
   ret_3 |= freia_aipo_erode_8c(imout, imout, kernel1x3);               /*0217*/
   ret_3 |= 0;                                                          /*0218*/
   ret_3 |= freia_aipo_erode_8c(imout, imout, kernel1x3);               /*0219*/
   ret_3 |= 0;                                                          /*0220*/
   i_3 = 4;                                                             /*0221*/

   ret_3 |= freia_aipo_dilate_8c(imout, imout, kernel1x3);              /*0223*/
   ret_3 |= 0;                                                          /*0224*/
   ret_3 |= freia_aipo_dilate_8c(imout, imout, kernel1x3);              /*0225*/
   ret_3 |= 0;                                                          /*0226*/
   ret_3 |= freia_aipo_dilate_8c(imout, imout, kernel1x3);              /*0227*/
   ret_3 |= 0;                                                          /*0228*/
   ret_3 |= freia_aipo_dilate_8c(imout, imout, kernel1x3);              /*0229*/
   ret_3 |= 0;                                                          /*0230*/
   i_3 = 4;                                                             /*0231*/

   _return3 = ret_3;                                                    /*0235*/

   freia_aipo_dilate_8c(out, imout, freia_morpho_kernel_8c);            /*0237*/
   freia_aipo_dilate_8c(out, out, freia_morpho_kernel_8c);              /*0238*/
   freia_aipo_dilate_8c(out, out, freia_morpho_kernel_8c);              /*0239*/
   i_4 = 3;                                                             /*0240*/

   _return4 = 0;                                                        /*0242*/

   freia_aipo_and(out, out, in);                                        /*0244*/
   
   
   
   
   freia_common_tx_image(out, &fdout);                                  /*0245*/
   
   /* images destruction */
   freia_common_destruct_data(in);                                      /*0248*/
   freia_common_destruct_data(imopen);                                  /*0250*/
   freia_common_destruct_data(imclose);                                 /*0251*/
   freia_common_destruct_data(imopenth);                                /*0252*/
   freia_common_destruct_data(imcloseth);                               /*0253*/
   freia_common_destruct_data(imand);                                   /*0254*/
   freia_common_destruct_data(imfilt);                                  /*0255*/
   freia_common_destruct_data(imout);                                   /*0256*/
   freia_common_destruct_data(out);                                     /*0257*/
   
   /* close videos flow */
   freia_common_close_input(&fdin);                                     /*0260*/
   freia_common_close_output(&fdout);                                   /*0261*/

   return 0;                                                            /*0263*/
}
#
# SPOC
#

! initial function

int license_plate_copies(void)
{
   freia_dataio fdin;                                                   /*0010*/
   freia_dataio fdout;                                                  /*0011*/

   freia_data2d *in;                                                    /*0013*/
   freia_data2d *immir;                                                 /*0014*/
   freia_data2d *imopen;                                                /*0015*/
   freia_data2d *imclose;                                               /*0016*/
   freia_data2d *imopenth;                                              /*0017*/
   freia_data2d *imcloseth;                                             /*0018*/
   freia_data2d *imand;                                                 /*0019*/
   freia_data2d *imfilt;                                                /*0020*/
   freia_data2d *imout;                                                 /*0021*/
   freia_data2d *out;                                                   /*0022*/

   const  int32_t kernel1x3[9] = {0, 0, 0, 1, 1, 1, 0, 0, 0};           /*0024*/
   const  int32_t kernel3x1[9] = {0, 1, 0, 0, 1, 0, 0, 1, 0};           /*0025*/

   freia_status _return0, _return1, _return2, _return3, _return4;       /*0027*/
   freia_data2d *imtmp_0;                                               /*0028*/
   freia_status ret_0;                                                  /*0029*/
   int i_0;                                                             /*0030*/
   freia_data2d *imtmp_1;                                               /*0031*/
   freia_status ret_1;                                                  /*0032*/
   int i_1;                                                             /*0033*/
   freia_data2d *imtmp_2;                                               /*0034*/
   freia_status ret_2;                                                  /*0035*/
   int i_2;                                                             /*0036*/
   freia_data2d *imtmp_3;                                               /*0037*/
   freia_status ret_3;                                                  /*0038*/
   int i_3, i_4;                                                        /*0039*/
   
   /* open videos flow */
   freia_common_open_input(&fdin, 0);                                   /*0042*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, 8);          /*0043*/
   
   /* images creation */
   in = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);               /*0046*/
   immir = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0047*/
   imopen = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0048*/
   imclose = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);          /*0049*/
   imopenth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);         /*0050*/
   imcloseth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);        /*0051*/
   imand = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0052*/
   imfilt = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0053*/
   imout = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0054*/
   out = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);              /*0055*/
   
   /* processing */
   freia_common_rx_image(in, &fdin);                                    /*0058*/

   imtmp_0 = freia_common_create_data(imopen->bpp, imopen->widthWa, imopen->heightWa);                /*0060*/

   ret_0 = freia_aipo_copy(imtmp_0, in);                                /*0062*/

   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0064*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0065*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0066*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0067*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0068*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0069*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0070*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0071*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0072*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0073*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0074*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0075*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0076*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0077*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0078*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0079*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0080*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0081*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0082*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0083*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0084*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0085*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0086*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0087*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0088*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0089*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0090*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0091*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0092*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0093*/
   i_0 = 15;                                                            /*0094*/

   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0096*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0097*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0098*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0099*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0100*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0101*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0102*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0103*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0104*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0105*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0106*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0107*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0108*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0109*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0110*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0111*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0112*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0113*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0114*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0115*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0116*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0117*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0118*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0119*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0120*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0121*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0122*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0123*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0124*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0125*/
   i_0 = 15;                                                            /*0126*/

   freia_common_destruct_data(imtmp_0);                                 /*0128*/

   _return1 = ret_0;                                                    /*0130*/

   imtmp_1 = freia_common_create_data(imclose->bpp, imclose->widthWa, imclose->heightWa);             /*0132*/

   ret_1 = freia_aipo_copy(imtmp_1, in);                                /*0134*/

   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0136*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0137*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0138*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0139*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0140*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0141*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0142*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0143*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0144*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0145*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0146*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0147*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0148*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0149*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0150*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0151*/
   i_1 = 8;                                                             /*0152*/

   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0154*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0155*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0156*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0157*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0158*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0159*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0160*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0161*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0162*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0163*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0164*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0165*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0166*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0167*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0168*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0169*/
   i_1 = 8;                                                             /*0170*/

   freia_common_destruct_data(imtmp_1);                                 /*0172*/

   _return0 = ret_1;                                                    /*0174*/

   freia_aipo_threshold(imopenth, imopen, 1, 50, 1);                    /*0176*/
   freia_aipo_threshold(imcloseth, imclose, 150, 255, 1);               /*0177*/

   freia_aipo_and(imand, imopenth, imcloseth);                          /*0179*/

   imtmp_2 = freia_common_create_data(imfilt->bpp, imfilt->widthWa, imfilt->heightWa);                /*0181*/

   ret_2 = freia_aipo_copy(imtmp_2, imand);                             /*0183*/

   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0185*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0186*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0187*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0188*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0189*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0190*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0191*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0192*/
   i_2 = 4;                                                             /*0193*/

   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0195*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0196*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0197*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0198*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0199*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0200*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0201*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0202*/
   i_2 = 4;                                                             /*0203*/

   freia_common_destruct_data(imtmp_2);                                 /*0205*/

   _return2 = ret_2;                                                    /*0207*/

   imtmp_3 = freia_common_create_data(imout->bpp, imout->widthWa, imout->heightWa);    /*0209*/

   ret_3 = freia_aipo_copy(imtmp_3, imfilt);                            /*0211*/

   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0213*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0214*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0215*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0216*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0217*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0218*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0219*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0220*/
   i_3 = 4;                                                             /*0221*/

   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0223*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0224*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0225*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0226*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0227*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0228*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0229*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0230*/
   i_3 = 4;                                                             /*0231*/

   freia_common_destruct_data(imtmp_3);                                 /*0233*/

   _return3 = ret_3;                                                    /*0235*/

   freia_aipo_dilate_8c(out, imout, freia_morpho_kernel_8c);            /*0237*/
   freia_aipo_dilate_8c(out, out, freia_morpho_kernel_8c);              /*0238*/
   freia_aipo_dilate_8c(out, out, freia_morpho_kernel_8c);              /*0239*/
   i_4 = 3;                                                             /*0240*/

   _return4 = 0;                                                        /*0242*/

   freia_aipo_and(out, out, in);                                        /*0244*/
   freia_common_tx_image(out, &fdout);                                  /*0245*/
   
   /* images destruction */
   freia_common_destruct_data(in);                                      /*0248*/
   freia_common_destruct_data(immir);                                   /*0249*/
   freia_common_destruct_data(imopen);                                  /*0250*/
   freia_common_destruct_data(imclose);                                 /*0251*/
   freia_common_destruct_data(imopenth);                                /*0252*/
   freia_common_destruct_data(imcloseth);                               /*0253*/
   freia_common_destruct_data(imand);                                   /*0254*/
   freia_common_destruct_data(imfilt);                                  /*0255*/
   freia_common_destruct_data(imout);                                   /*0256*/
   freia_common_destruct_data(out);                                     /*0257*/
   
   /* close videos flow */
   freia_common_close_input(&fdin);                                     /*0260*/
   freia_common_close_output(&fdout);                                   /*0261*/

   return 0;                                                            /*0263*/
}

! graphs

// graph for dag "dag_0" of module "license_plate_copies" in dot format
digraph "dag_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "244 &" [shape=trapezium,orientation=270];
  "244 &" -> "out";
  "242 ?" [shape=none];
  "240 ?" [shape=none];
  "239 D8" [shape=box];
  "239 D8" -> "244 &" [label="out"];
  "238 D8" [shape=box];
  "238 D8" -> "239 D8" [label="out"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="out"];
  "235 ?" [shape=none];
  "233 ?" [shape=none];
  "231 ?" [shape=none];
  "231 ?" -> "221 ?" [arrowhead=empty,label="i_3"];
  "230 =" [shape=circle];
  "229 D8" [shape=box];
  "229 D8" -> "237 D8" [label="imout"];
  "229 D8" -> "230 =" [label="imout"];
  "228 =" [shape=circle];
  "228 =" -> "229 D8" [label="imtmp_3"];
  "227 D8" [shape=box];
  "227 D8" -> "228 =" [label="imout"];
  "226 =" [shape=circle];
  "226 =" -> "227 D8" [label="imtmp_3"];
  "225 D8" [shape=box];
  "225 D8" -> "226 =" [label="imout"];
  "224 =" [shape=circle];
  "224 =" -> "225 D8" [label="imtmp_3"];
  "223 D8" [shape=box];
  "223 D8" -> "224 =" [label="imout"];
  "221 ?" [shape=none];
  "221 ?" -> "231 ?" [arrowhead=empty,label="i_3"];
  "220 =" [shape=circle];
  "220 =" -> "223 D8" [label="imtmp_3"];
  "219 E8" [shape=box];
  "219 E8" -> "220 =" [label="imout"];
  "218 =" [shape=circle];
  "218 =" -> "219 E8" [label="imtmp_3"];
  "217 E8" [shape=box];
  "217 E8" -> "218 =" [label="imout"];
  "216 =" [shape=circle];
  "216 =" -> "217 E8" [label="imtmp_3"];
  "215 E8" [shape=box];
  "215 E8" -> "216 =" [label="imout"];
  "214 =" [shape=circle];
  "214 =" -> "215 E8" [label="imtmp_3"];
  "213 E8" [shape=box];
  "213 E8" -> "214 =" [label="imout"];
  "211 =" [shape=circle];
  "211 =" -> "213 E8" [label="imtmp_3"];
  "209 ?" [shape=none];
  "207 ?" [shape=none];
  "205 ?" [shape=none];
  "203 ?" [shape=none];
  "203 ?" -> "193 ?" [arrowhead=empty,label="i_2"];
  "202 =" [shape=circle];
  "201 D8" [shape=box];
  "201 D8" -> "211 =" [label="imfilt"];
  "201 D8" -> "202 =" [label="imfilt"];
  "200 =" [shape=circle];
  "200 =" -> "201 D8" [label="imtmp_2"];
  "199 D8" [shape=box];
  "199 D8" -> "200 =" [label="imfilt"];
  "198 =" [shape=circle];
  "198 =" -> "199 D8" [label="imtmp_2"];
  "197 D8" [shape=box];
  "197 D8" -> "198 =" [label="imfilt"];
  "196 =" [shape=circle];
  "196 =" -> "197 D8" [label="imtmp_2"];
  "195 D8" [shape=box];
  "195 D8" -> "196 =" [label="imfilt"];
  "193 ?" [shape=none];
  "193 ?" -> "203 ?" [arrowhead=empty,label="i_2"];
  "192 =" [shape=circle];
  "192 =" -> "195 D8" [label="imtmp_2"];
  "191 E8" [shape=box];
  "191 E8" -> "192 =" [label="imfilt"];
  "190 =" [shape=circle];
  "190 =" -> "191 E8" [label="imtmp_2"];
  "189 E8" [shape=box];
  "189 E8" -> "190 =" [label="imfilt"];
  "188 =" [shape=circle];
  "188 =" -> "189 E8" [label="imtmp_2"];
  "187 E8" [shape=box];
  "187 E8" -> "188 =" [label="imfilt"];
  "186 =" [shape=circle];
  "186 =" -> "187 E8" [label="imtmp_2"];
  "185 E8" [shape=box];
  "185 E8" -> "186 =" [label="imfilt"];
  "183 =" [shape=circle];
  "183 =" -> "185 E8" [label="imtmp_2"];
  "181 ?" [shape=none];
  "179 &" [shape=trapezium,orientation=270];
  "179 &" -> "183 =" [label="imand"];
  "177 thr" [shape=parallelogram];
  "177 thr" -> "179 &" [label="imcloseth"];
  "176 thr" [shape=parallelogram];
  "176 thr" -> "179 &" [label="imopenth"];
  "174 ?" [shape=none];
  "172 ?" [shape=none];
  "170 ?" [shape=none];
  "170 ?" -> "152 ?" [arrowhead=empty,label="i_1"];
  "169 =" [shape=circle];
  "168 E8" [shape=box];
  "168 E8" -> "177 thr" [label="imclose"];
  "168 E8" -> "169 =" [label="imclose"];
  "167 =" [shape=circle];
  "167 =" -> "168 E8" [label="imtmp_1"];
  "166 E8" [shape=box];
  "166 E8" -> "167 =" [label="imclose"];
  "165 =" [shape=circle];
  "165 =" -> "166 E8" [label="imtmp_1"];
  "164 E8" [shape=box];
  "164 E8" -> "165 =" [label="imclose"];
  "163 =" [shape=circle];
  "163 =" -> "164 E8" [label="imtmp_1"];
  "162 E8" [shape=box];
  "162 E8" -> "163 =" [label="imclose"];
  "161 =" [shape=circle];
  "161 =" -> "162 E8" [label="imtmp_1"];
  "160 E8" [shape=box];
  "160 E8" -> "161 =" [label="imclose"];
  "159 =" [shape=circle];
  "159 =" -> "160 E8" [label="imtmp_1"];
  "158 E8" [shape=box];
  "158 E8" -> "159 =" [label="imclose"];
  "157 =" [shape=circle];
  "157 =" -> "158 E8" [label="imtmp_1"];
  "156 E8" [shape=box];
  "156 E8" -> "157 =" [label="imclose"];
  "155 =" [shape=circle];
  "155 =" -> "156 E8" [label="imtmp_1"];
  "154 E8" [shape=box];
  "154 E8" -> "155 =" [label="imclose"];
  "152 ?" [shape=none];
  "152 ?" -> "170 ?" [arrowhead=empty,label="i_1"];
  "151 =" [shape=circle];
  "151 =" -> "154 E8" [label="imtmp_1"];
  "150 D8" [shape=box];
  "150 D8" -> "151 =" [label="imclose"];
  "149 =" [shape=circle];
  "149 =" -> "150 D8" [label="imtmp_1"];
  "148 D8" [shape=box];
  "148 D8" -> "149 =" [label="imclose"];
  "147 =" [shape=circle];
  "147 =" -> "148 D8" [label="imtmp_1"];
  "146 D8" [shape=box];
  "146 D8" -> "147 =" [label="imclose"];
  "145 =" [shape=circle];
  "145 =" -> "146 D8" [label="imtmp_1"];
  "144 D8" [shape=box];
  "144 D8" -> "145 =" [label="imclose"];
  "143 =" [shape=circle];
  "143 =" -> "144 D8" [label="imtmp_1"];
  "142 D8" [shape=box];
  "142 D8" -> "143 =" [label="imclose"];
  "141 =" [shape=circle];
  "141 =" -> "142 D8" [label="imtmp_1"];
  "140 D8" [shape=box];
  "140 D8" -> "141 =" [label="imclose"];
  "139 =" [shape=circle];
  "139 =" -> "140 D8" [label="imtmp_1"];
  "138 D8" [shape=box];
  "138 D8" -> "139 =" [label="imclose"];
  "137 =" [shape=circle];
  "137 =" -> "138 D8" [label="imtmp_1"];
  "136 D8" [shape=box];
  "136 D8" -> "137 =" [label="imclose"];
  "134 =" [shape=circle];
  "134 =" -> "136 D8" [label="imtmp_1"];
  "132 ?" [shape=none];
  "130 ?" [shape=none];
  "128 ?" [shape=none];
  "126 ?" [shape=none];
  "126 ?" -> "94 ?" [arrowhead=empty,label="i_0"];
  "125 =" [shape=circle];
  "124 D8" [shape=box];
  "124 D8" -> "176 thr" [label="imopen"];
  "124 D8" -> "125 =" [label="imopen"];
  "123 =" [shape=circle];
  "123 =" -> "124 D8" [label="imtmp_0"];
  "122 D8" [shape=box];
  "122 D8" -> "123 =" [label="imopen"];
  "121 =" [shape=circle];
  "121 =" -> "122 D8" [label="imtmp_0"];
  "120 D8" [shape=box];
  "120 D8" -> "121 =" [label="imopen"];
  "119 =" [shape=circle];
  "119 =" -> "120 D8" [label="imtmp_0"];
  "118 D8" [shape=box];
  "118 D8" -> "119 =" [label="imopen"];
  "117 =" [shape=circle];
  "117 =" -> "118 D8" [label="imtmp_0"];
  "116 D8" [shape=box];
  "116 D8" -> "117 =" [label="imopen"];
  "115 =" [shape=circle];
  "115 =" -> "116 D8" [label="imtmp_0"];
  "114 D8" [shape=box];
  "114 D8" -> "115 =" [label="imopen"];
  "113 =" [shape=circle];
  "113 =" -> "114 D8" [label="imtmp_0"];
  "112 D8" [shape=box];
  "112 D8" -> "113 =" [label="imopen"];
  "111 =" [shape=circle];
  "111 =" -> "112 D8" [label="imtmp_0"];
  "110 D8" [shape=box];
  "110 D8" -> "111 =" [label="imopen"];
  "109 =" [shape=circle];
  "109 =" -> "110 D8" [label="imtmp_0"];
  "108 D8" [shape=box];
  "108 D8" -> "109 =" [label="imopen"];
  "107 =" [shape=circle];
  "107 =" -> "108 D8" [label="imtmp_0"];
  "106 D8" [shape=box];
  "106 D8" -> "107 =" [label="imopen"];
  "105 =" [shape=circle];
  "105 =" -> "106 D8" [label="imtmp_0"];
  "104 D8" [shape=box];
  "104 D8" -> "105 =" [label="imopen"];
  "103 =" [shape=circle];
  "103 =" -> "104 D8" [label="imtmp_0"];
  "102 D8" [shape=box];
  "102 D8" -> "103 =" [label="imopen"];
  "101 =" [shape=circle];
  "101 =" -> "102 D8" [label="imtmp_0"];
  "100 D8" [shape=box];
  "100 D8" -> "101 =" [label="imopen"];
  "99 =" [shape=circle];
  "99 =" -> "100 D8" [label="imtmp_0"];
  "98 D8" [shape=box];
  "98 D8" -> "99 =" [label="imopen"];
  "97 =" [shape=circle];
  "97 =" -> "98 D8" [label="imtmp_0"];
  "96 D8" [shape=box];
  "96 D8" -> "97 =" [label="imopen"];
  "94 ?" [shape=none];
  "94 ?" -> "126 ?" [arrowhead=empty,label="i_0"];
  "93 =" [shape=circle];
  "93 =" -> "96 D8" [label="imtmp_0"];
  "92 E8" [shape=box];
  "92 E8" -> "93 =" [label="imopen"];
  "91 =" [shape=circle];
  "91 =" -> "92 E8" [label="imtmp_0"];
  "90 E8" [shape=box];
  "90 E8" -> "91 =" [label="imopen"];
  "89 =" [shape=circle];
  "89 =" -> "90 E8" [label="imtmp_0"];
  "88 E8" [shape=box];
  "88 E8" -> "89 =" [label="imopen"];
  "87 =" [shape=circle];
  "87 =" -> "88 E8" [label="imtmp_0"];
  "86 E8" [shape=box];
  "86 E8" -> "87 =" [label="imopen"];
  "85 =" [shape=circle];
  "85 =" -> "86 E8" [label="imtmp_0"];
  "84 E8" [shape=box];
  "84 E8" -> "85 =" [label="imopen"];
  "83 =" [shape=circle];
  "83 =" -> "84 E8" [label="imtmp_0"];
  "82 E8" [shape=box];
  "82 E8" -> "83 =" [label="imopen"];
  "81 =" [shape=circle];
  "81 =" -> "82 E8" [label="imtmp_0"];
  "80 E8" [shape=box];
  "80 E8" -> "81 =" [label="imopen"];
  "79 =" [shape=circle];
  "79 =" -> "80 E8" [label="imtmp_0"];
  "78 E8" [shape=box];
  "78 E8" -> "79 =" [label="imopen"];
  "77 =" [shape=circle];
  "77 =" -> "78 E8" [label="imtmp_0"];
  "76 E8" [shape=box];
  "76 E8" -> "77 =" [label="imopen"];
  "75 =" [shape=circle];
  "75 =" -> "76 E8" [label="imtmp_0"];
  "74 E8" [shape=box];
  "74 E8" -> "75 =" [label="imopen"];
  "73 =" [shape=circle];
  "73 =" -> "74 E8" [label="imtmp_0"];
  "72 E8" [shape=box];
  "72 E8" -> "73 =" [label="imopen"];
  "71 =" [shape=circle];
  "71 =" -> "72 E8" [label="imtmp_0"];
  "70 E8" [shape=box];
  "70 E8" -> "71 =" [label="imopen"];
  "69 =" [shape=circle];
  "69 =" -> "70 E8" [label="imtmp_0"];
  "68 E8" [shape=box];
  "68 E8" -> "69 =" [label="imopen"];
  "67 =" [shape=circle];
  "67 =" -> "68 E8" [label="imtmp_0"];
  "66 E8" [shape=box];
  "66 E8" -> "67 =" [label="imopen"];
  "65 =" [shape=circle];
  "65 =" -> "66 E8" [label="imtmp_0"];
  "64 E8" [shape=box];
  "64 E8" -> "65 =" [label="imopen"];
  "62 =" [shape=circle];
  "62 =" -> "64 E8" [label="imtmp_0"];
  "in" -> "244 &";
  "in" -> "134 =";
  "in" -> "62 =";
}
// graph for dag "dag_cleaned_0" of module "license_plate_copies" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "244 &" [shape=trapezium,orientation=270];
  "244 &" -> "out";
  "242 ?" [shape=none];
  "240 ?" [shape=none];
  "239 D8" [shape=box];
  "239 D8" -> "244 &" [label="out"];
  "238 D8" [shape=box];
  "238 D8" -> "239 D8" [label="out"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="out"];
  "235 ?" [shape=none];
  "233 ?" [shape=none];
  "231 ?" [shape=none];
  "231 ?" -> "221 ?" [arrowhead=empty,label="i_3"];
  "229 D8" [shape=box];
  "229 D8" -> "237 D8" [label="imout"];
  "227 D8" [shape=box];
  "227 D8" -> "229 D8" [label="imout"];
  "225 D8" [shape=box];
  "225 D8" -> "227 D8" [label="imout"];
  "223 D8" [shape=box];
  "223 D8" -> "225 D8" [label="imout"];
  "221 ?" [shape=none];
  "221 ?" -> "231 ?" [arrowhead=empty,label="i_3"];
  "219 E8" [shape=box];
  "219 E8" -> "223 D8" [label="imout"];
  "217 E8" [shape=box];
  "217 E8" -> "219 E8" [label="imout"];
  "215 E8" [shape=box];
  "215 E8" -> "217 E8" [label="imout"];
  "213 E8" [shape=box];
  "213 E8" -> "215 E8" [label="imout"];
  "209 ?" [shape=none];
  "207 ?" [shape=none];
  "205 ?" [shape=none];
  "203 ?" [shape=none];
  "203 ?" -> "193 ?" [arrowhead=empty,label="i_2"];
  "201 D8" [shape=box];
  "201 D8" -> "213 E8" [label="imfilt"];
  "199 D8" [shape=box];
  "199 D8" -> "201 D8" [label="imfilt"];
  "197 D8" [shape=box];
  "197 D8" -> "199 D8" [label="imfilt"];
  "195 D8" [shape=box];
  "195 D8" -> "197 D8" [label="imfilt"];
  "193 ?" [shape=none];
  "193 ?" -> "203 ?" [arrowhead=empty,label="i_2"];
  "191 E8" [shape=box];
  "191 E8" -> "195 D8" [label="imfilt"];
  "189 E8" [shape=box];
  "189 E8" -> "191 E8" [label="imfilt"];
  "187 E8" [shape=box];
  "187 E8" -> "189 E8" [label="imfilt"];
  "185 E8" [shape=box];
  "185 E8" -> "187 E8" [label="imfilt"];
  "181 ?" [shape=none];
  "179 &" [shape=trapezium,orientation=270];
  "179 &" -> "185 E8" [label="imand"];
  "177 thr" [shape=parallelogram];
  "177 thr" -> "179 &" [label="imcloseth"];
  "176 thr" [shape=parallelogram];
  "176 thr" -> "179 &" [label="imopenth"];
  "174 ?" [shape=none];
  "172 ?" [shape=none];
  "170 ?" [shape=none];
  "170 ?" -> "152 ?" [arrowhead=empty,label="i_1"];
  "168 E8" [shape=box];
  "168 E8" -> "177 thr" [label="imclose"];
  "166 E8" [shape=box];
  "166 E8" -> "168 E8" [label="imclose"];
  "164 E8" [shape=box];
  "164 E8" -> "166 E8" [label="imclose"];
  "162 E8" [shape=box];
  "162 E8" -> "164 E8" [label="imclose"];
  "160 E8" [shape=box];
  "160 E8" -> "162 E8" [label="imclose"];
  "158 E8" [shape=box];
  "158 E8" -> "160 E8" [label="imclose"];
  "156 E8" [shape=box];
  "156 E8" -> "158 E8" [label="imclose"];
  "154 E8" [shape=box];
  "154 E8" -> "156 E8" [label="imclose"];
  "152 ?" [shape=none];
  "152 ?" -> "170 ?" [arrowhead=empty,label="i_1"];
  "150 D8" [shape=box];
  "150 D8" -> "154 E8" [label="imclose"];
  "148 D8" [shape=box];
  "148 D8" -> "150 D8" [label="imclose"];
  "146 D8" [shape=box];
  "146 D8" -> "148 D8" [label="imclose"];
  "144 D8" [shape=box];
  "144 D8" -> "146 D8" [label="imclose"];
  "142 D8" [shape=box];
  "142 D8" -> "144 D8" [label="imclose"];
  "140 D8" [shape=box];
  "140 D8" -> "142 D8" [label="imclose"];
  "138 D8" [shape=box];
  "138 D8" -> "140 D8" [label="imclose"];
  "136 D8" [shape=box];
  "136 D8" -> "138 D8" [label="imclose"];
  "132 ?" [shape=none];
  "130 ?" [shape=none];
  "128 ?" [shape=none];
  "126 ?" [shape=none];
  "126 ?" -> "94 ?" [arrowhead=empty,label="i_0"];
  "124 D8" [shape=box];
  "124 D8" -> "176 thr" [label="imopen"];
  "122 D8" [shape=box];
  "122 D8" -> "124 D8" [label="imopen"];
  "120 D8" [shape=box];
  "120 D8" -> "122 D8" [label="imopen"];
  "118 D8" [shape=box];
  "118 D8" -> "120 D8" [label="imopen"];
  "116 D8" [shape=box];
  "116 D8" -> "118 D8" [label="imopen"];
  "114 D8" [shape=box];
  "114 D8" -> "116 D8" [label="imopen"];
  "112 D8" [shape=box];
  "112 D8" -> "114 D8" [label="imopen"];
  "110 D8" [shape=box];
  "110 D8" -> "112 D8" [label="imopen"];
  "108 D8" [shape=box];
  "108 D8" -> "110 D8" [label="imopen"];
  "106 D8" [shape=box];
  "106 D8" -> "108 D8" [label="imopen"];
  "104 D8" [shape=box];
  "104 D8" -> "106 D8" [label="imopen"];
  "102 D8" [shape=box];
  "102 D8" -> "104 D8" [label="imopen"];
  "100 D8" [shape=box];
  "100 D8" -> "102 D8" [label="imopen"];
  "98 D8" [shape=box];
  "98 D8" -> "100 D8" [label="imopen"];
  "96 D8" [shape=box];
  "96 D8" -> "98 D8" [label="imopen"];
  "94 ?" [shape=none];
  "94 ?" -> "126 ?" [arrowhead=empty,label="i_0"];
  "92 E8" [shape=box];
  "92 E8" -> "96 D8" [label="imopen"];
  "90 E8" [shape=box];
  "90 E8" -> "92 E8" [label="imopen"];
  "88 E8" [shape=box];
  "88 E8" -> "90 E8" [label="imopen"];
  "86 E8" [shape=box];
  "86 E8" -> "88 E8" [label="imopen"];
  "84 E8" [shape=box];
  "84 E8" -> "86 E8" [label="imopen"];
  "82 E8" [shape=box];
  "82 E8" -> "84 E8" [label="imopen"];
  "80 E8" [shape=box];
  "80 E8" -> "82 E8" [label="imopen"];
  "78 E8" [shape=box];
  "78 E8" -> "80 E8" [label="imopen"];
  "76 E8" [shape=box];
  "76 E8" -> "78 E8" [label="imopen"];
  "74 E8" [shape=box];
  "74 E8" -> "76 E8" [label="imopen"];
  "72 E8" [shape=box];
  "72 E8" -> "74 E8" [label="imopen"];
  "70 E8" [shape=box];
  "70 E8" -> "72 E8" [label="imopen"];
  "68 E8" [shape=box];
  "68 E8" -> "70 E8" [label="imopen"];
  "66 E8" [shape=box];
  "66 E8" -> "68 E8" [label="imopen"];
  "64 E8" [shape=box];
  "64 E8" -> "66 E8" [label="imopen"];
  "in" -> "64 E8";
  "in" -> "136 D8";
  "in" -> "244 &";
}
// graph for dag "license_plate_copies_helper_0_0" of module "license_plate_copies" in dot format
digraph "license_plate_copies_helper_0_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "239 D8" [shape=box];
  "239 D8" -> "out";
  "238 D8" [shape=box];
  "238 D8" -> "239 D8" [label="out"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="out"];
  "229 D8" [shape=box];
  "229 D8" -> "237 D8" [label="imout"];
  "227 D8" [shape=box];
  "227 D8" -> "229 D8" [label="imout"];
  "225 D8" [shape=box];
  "225 D8" -> "227 D8" [label="imout"];
  "223 D8" [shape=box];
  "223 D8" -> "225 D8" [label="imout"];
  "219 E8" [shape=box];
  "219 E8" -> "223 D8" [label="imout"];
  "217 E8" [shape=box];
  "217 E8" -> "219 E8" [label="imout"];
  "215 E8" [shape=box];
  "215 E8" -> "217 E8" [label="imout"];
  "213 E8" [shape=box];
  "213 E8" -> "215 E8" [label="imout"];
  "201 D8" [shape=box];
  "201 D8" -> "213 E8" [label="imfilt"];
  "199 D8" [shape=box];
  "199 D8" -> "201 D8" [label="imfilt"];
  "197 D8" [shape=box];
  "197 D8" -> "199 D8" [label="imfilt"];
  "195 D8" [shape=box];
  "195 D8" -> "197 D8" [label="imfilt"];
  "191 E8" [shape=box];
  "191 E8" -> "195 D8" [label="imfilt"];
  "189 E8" [shape=box];
  "189 E8" -> "191 E8" [label="imfilt"];
  "187 E8" [shape=box];
  "187 E8" -> "189 E8" [label="imfilt"];
  "185 E8" [shape=box];
  "185 E8" -> "187 E8" [label="imfilt"];
  "179 &" [shape=trapezium,orientation=270];
  "179 &" -> "185 E8" [label="imand"];
  "177 thr" [shape=parallelogram];
  "177 thr" -> "179 &" [label="imcloseth"];
  "176 thr" [shape=parallelogram];
  "176 thr" -> "179 &" [label="imopenth"];
  "168 E8" [shape=box];
  "168 E8" -> "177 thr" [label="imclose"];
  "166 E8" [shape=box];
  "166 E8" -> "168 E8" [label="imclose"];
  "164 E8" [shape=box];
  "164 E8" -> "166 E8" [label="imclose"];
  "162 E8" [shape=box];
  "162 E8" -> "164 E8" [label="imclose"];
  "160 E8" [shape=box];
  "160 E8" -> "162 E8" [label="imclose"];
  "158 E8" [shape=box];
  "158 E8" -> "160 E8" [label="imclose"];
  "156 E8" [shape=box];
  "156 E8" -> "158 E8" [label="imclose"];
  "154 E8" [shape=box];
  "154 E8" -> "156 E8" [label="imclose"];
  "150 D8" [shape=box];
  "150 D8" -> "154 E8" [label="imclose"];
  "148 D8" [shape=box];
  "148 D8" -> "150 D8" [label="imclose"];
  "146 D8" [shape=box];
  "146 D8" -> "148 D8" [label="imclose"];
  "144 D8" [shape=box];
  "144 D8" -> "146 D8" [label="imclose"];
  "142 D8" [shape=box];
  "142 D8" -> "144 D8" [label="imclose"];
  "140 D8" [shape=box];
  "140 D8" -> "142 D8" [label="imclose"];
  "138 D8" [shape=box];
  "138 D8" -> "140 D8" [label="imclose"];
  "136 D8" [shape=box];
  "136 D8" -> "138 D8" [label="imclose"];
  "124 D8" [shape=box];
  "124 D8" -> "176 thr" [label="imopen"];
  "122 D8" [shape=box];
  "122 D8" -> "124 D8" [label="imopen"];
  "120 D8" [shape=box];
  "120 D8" -> "122 D8" [label="imopen"];
  "118 D8" [shape=box];
  "118 D8" -> "120 D8" [label="imopen"];
  "116 D8" [shape=box];
  "116 D8" -> "118 D8" [label="imopen"];
  "114 D8" [shape=box];
  "114 D8" -> "116 D8" [label="imopen"];
  "112 D8" [shape=box];
  "112 D8" -> "114 D8" [label="imopen"];
  "110 D8" [shape=box];
  "110 D8" -> "112 D8" [label="imopen"];
  "108 D8" [shape=box];
  "108 D8" -> "110 D8" [label="imopen"];
  "106 D8" [shape=box];
  "106 D8" -> "108 D8" [label="imopen"];
  "104 D8" [shape=box];
  "104 D8" -> "106 D8" [label="imopen"];
  "102 D8" [shape=box];
  "102 D8" -> "104 D8" [label="imopen"];
  "100 D8" [shape=box];
  "100 D8" -> "102 D8" [label="imopen"];
  "98 D8" [shape=box];
  "98 D8" -> "100 D8" [label="imopen"];
  "96 D8" [shape=box];
  "96 D8" -> "98 D8" [label="imopen"];
  "92 E8" [shape=box];
  "92 E8" -> "96 D8" [label="imopen"];
  "90 E8" [shape=box];
  "90 E8" -> "92 E8" [label="imopen"];
  "88 E8" [shape=box];
  "88 E8" -> "90 E8" [label="imopen"];
  "86 E8" [shape=box];
  "86 E8" -> "88 E8" [label="imopen"];
  "84 E8" [shape=box];
  "84 E8" -> "86 E8" [label="imopen"];
  "82 E8" [shape=box];
  "82 E8" -> "84 E8" [label="imopen"];
  "80 E8" [shape=box];
  "80 E8" -> "82 E8" [label="imopen"];
  "78 E8" [shape=box];
  "78 E8" -> "80 E8" [label="imopen"];
  "76 E8" [shape=box];
  "76 E8" -> "78 E8" [label="imopen"];
  "74 E8" [shape=box];
  "74 E8" -> "76 E8" [label="imopen"];
  "72 E8" [shape=box];
  "72 E8" -> "74 E8" [label="imopen"];
  "70 E8" [shape=box];
  "70 E8" -> "72 E8" [label="imopen"];
  "68 E8" [shape=box];
  "68 E8" -> "70 E8" [label="imopen"];
  "66 E8" [shape=box];
  "66 E8" -> "68 E8" [label="imopen"];
  "64 E8" [shape=box];
  "64 E8" -> "66 E8" [label="imopen"];
  "in" -> "136 D8";
  "in" -> "64 E8";
}
// graph for dag "license_plate_copies_helper_0_1" of module "license_plate_copies" in dot format
digraph "license_plate_copies_helper_0_1" {
  // inputs
  "in" [shape=circle];
  "out" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "244 &" [shape=trapezium,orientation=270];
  "244 &" -> "out";
  "in" -> "244 &";
  "out" -> "244 &";
}

! acceleration function

#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <spoc.h>

// FREIA-SPoC helper function for module license_plate_copies
freia_status license_plate_copies_helper_0_0_0(freia_data2d * o0, freia_data2d * o1, freia_data2d * i0,
  const int32_t * pi0,
  int32_t pi1,
  int32_t pi2,
  int32_t pi3)
{
  spoc_instr si;
  spoc_param sp;
  spoc_reduction reduc;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_reduction_results redres;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`in [0 input 0] -> [0 poc 0] 64 erode_8c
  // nope
  // poc 64 erode_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_ERODE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];


  // STAGE 1
  // 0`imopen [0 poc 0] -> [1 poc 0] 66 erode_8c
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`imopen [1 input 0] -> [1 poc 0] 66 erode_8c
  // nope
  // poc 66 erode_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_ERODE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // STAGE 2
  // 0`imopen [1 poc 0] -> [2 poc 0] 68 erode_8c
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`imopen [2 input 0] -> [2 poc 0] 68 erode_8c
  // nope
  // poc 68 erode_8c stage 2 side 0
  si.poc[2][0].op = SPOC_POC_ERODE;
  si.poc[2][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][0].kernel[i] = pi0[i];


  // STAGE 3
  // 0`imopen [2 poc 0] -> [3 poc 0] 70 erode_8c
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`imopen [3 input 0] -> [3 poc 0] 70 erode_8c
  // nope
  // poc 70 erode_8c stage 3 side 0
  si.poc[3][0].op = SPOC_POC_ERODE;
  si.poc[3][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][0].kernel[i] = pi0[i];


  // STAGE 4
  // 0`imopen [3 poc 0] -> [4 poc 0] 72 erode_8c
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`imopen [4 input 0] -> [4 poc 0] 72 erode_8c
  // nope
  // poc 72 erode_8c stage 4 side 0
  si.poc[4][0].op = SPOC_POC_ERODE;
  si.poc[4][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][0].kernel[i] = pi0[i];


  // STAGE 5
  // 0`imopen [4 poc 0] -> [5 poc 0] 74 erode_8c
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`imopen [5 input 0] -> [5 poc 0] 74 erode_8c
  // nope
  // poc 74 erode_8c stage 5 side 0
  si.poc[5][0].op = SPOC_POC_ERODE;
  si.poc[5][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][0].kernel[i] = pi0[i];


  // STAGE 6
  // 0`imopen [5 poc 0] -> [6 poc 0] 76 erode_8c
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`imopen [6 input 0] -> [6 poc 0] 76 erode_8c
  // nope
  // poc 76 erode_8c stage 6 side 0
  si.poc[6][0].op = SPOC_POC_ERODE;
  si.poc[6][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][0].kernel[i] = pi0[i];


  // STAGE 7
  // 0`imopen [6 poc 0] -> [7 poc 0] 78 erode_8c
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`imopen [7 input 0] -> [7 poc 0] 78 erode_8c
  // nope
  // poc 78 erode_8c stage 7 side 0
  si.poc[7][0].op = SPOC_POC_ERODE;
  si.poc[7][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][0].kernel[i] = pi0[i];


  // STAGE 8
  // 0`imopen [7 poc 0] -> [8 poc 0] 80 erode_8c
  si.mux[7][0].op = SPOC_MUX_IN0;
  // 0`imopen [8 input 0] -> [8 poc 0] 80 erode_8c
  // nope
  // poc 80 erode_8c stage 8 side 0
  si.poc[8][0].op = SPOC_POC_ERODE;
  si.poc[8][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[8][0].kernel[i] = pi0[i];


  // STAGE 9
  // 0`imopen [8 poc 0] -> [9 poc 0] 82 erode_8c
  si.mux[8][0].op = SPOC_MUX_IN0;
  // 0`imopen [9 input 0] -> [9 poc 0] 82 erode_8c
  // nope
  // poc 82 erode_8c stage 9 side 0
  si.poc[9][0].op = SPOC_POC_ERODE;
  si.poc[9][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[9][0].kernel[i] = pi0[i];


  // STAGE 10
  // 0`imopen [9 poc 0] -> [10 poc 0] 84 erode_8c
  si.mux[9][0].op = SPOC_MUX_IN0;
  // 0`imopen [10 input 0] -> [10 poc 0] 84 erode_8c
  // nope
  // poc 84 erode_8c stage 10 side 0
  si.poc[10][0].op = SPOC_POC_ERODE;
  si.poc[10][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[10][0].kernel[i] = pi0[i];


  // STAGE 11
  // 0`imopen [10 poc 0] -> [11 poc 0] 86 erode_8c
  si.mux[10][0].op = SPOC_MUX_IN0;
  // 0`imopen [11 input 0] -> [11 poc 0] 86 erode_8c
  // nope
  // poc 86 erode_8c stage 11 side 0
  si.poc[11][0].op = SPOC_POC_ERODE;
  si.poc[11][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[11][0].kernel[i] = pi0[i];


  // STAGE 12
  // 0`imopen [11 poc 0] -> [12 poc 0] 88 erode_8c
  si.mux[11][0].op = SPOC_MUX_IN0;
  // 0`imopen [12 input 0] -> [12 poc 0] 88 erode_8c
  // nope
  // poc 88 erode_8c stage 12 side 0
  si.poc[12][0].op = SPOC_POC_ERODE;
  si.poc[12][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[12][0].kernel[i] = pi0[i];


  // STAGE 13
  // 0`imopen [12 poc 0] -> [13 poc 0] 90 erode_8c
  si.mux[12][0].op = SPOC_MUX_IN0;
  // 0`imopen [13 input 0] -> [13 poc 0] 90 erode_8c
  // nope
  // poc 90 erode_8c stage 13 side 0
  si.poc[13][0].op = SPOC_POC_ERODE;
  si.poc[13][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[13][0].kernel[i] = pi0[i];


  // STAGE 14
  // 0`imopen [13 poc 0] -> [14 poc 0] 92 erode_8c
  si.mux[13][0].op = SPOC_MUX_IN0;
  // 0`imopen [14 input 0] -> [14 poc 0] 92 erode_8c
  // nope
  // poc 92 erode_8c stage 14 side 0
  si.poc[14][0].op = SPOC_POC_ERODE;
  si.poc[14][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[14][0].kernel[i] = pi0[i];


  // STAGE 15
  // 0`imopen [14 poc 0] -> [15 poc 0] 96 dilate_8c
  si.mux[14][0].op = SPOC_MUX_IN0;
  // 0`imopen [15 input 0] -> [15 poc 0] 96 dilate_8c
  // nope
  // poc 96 dilate_8c stage 15 side 0
  si.poc[15][0].op = SPOC_POC_DILATE;
  si.poc[15][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[15][0].kernel[i] = pi0[i];


  // STAGE 16
  // 0`imopen [15 poc 0] -> [16 poc 0] 98 dilate_8c
  si.mux[15][0].op = SPOC_MUX_IN0;
  // 0`imopen [16 input 0] -> [16 poc 0] 98 dilate_8c
  // nope
  // poc 98 dilate_8c stage 16 side 0
  si.poc[16][0].op = SPOC_POC_DILATE;
  si.poc[16][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[16][0].kernel[i] = pi0[i];


  // STAGE 17
  // 0`imopen [16 poc 0] -> [17 poc 0] 100 dilate_8c
  si.mux[16][0].op = SPOC_MUX_IN0;
  // 0`imopen [17 input 0] -> [17 poc 0] 100 dilate_8c
  // nope
  // poc 100 dilate_8c stage 17 side 0
  si.poc[17][0].op = SPOC_POC_DILATE;
  si.poc[17][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[17][0].kernel[i] = pi0[i];


  // STAGE 18
  // 0`imopen [17 poc 0] -> [18 poc 0] 102 dilate_8c
  si.mux[17][0].op = SPOC_MUX_IN0;
  // 0`imopen [18 input 0] -> [18 poc 0] 102 dilate_8c
  // nope
  // poc 102 dilate_8c stage 18 side 0
  si.poc[18][0].op = SPOC_POC_DILATE;
  si.poc[18][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[18][0].kernel[i] = pi0[i];


  // STAGE 19
  // 0`imopen [18 poc 0] -> [19 poc 0] 104 dilate_8c
  si.mux[18][0].op = SPOC_MUX_IN0;
  // 0`imopen [19 input 0] -> [19 poc 0] 104 dilate_8c
  // nope
  // poc 104 dilate_8c stage 19 side 0
  si.poc[19][0].op = SPOC_POC_DILATE;
  si.poc[19][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[19][0].kernel[i] = pi0[i];


  // STAGE 20
  // 0`imopen [19 poc 0] -> [20 poc 0] 106 dilate_8c
  si.mux[19][0].op = SPOC_MUX_IN0;
  // 0`imopen [20 input 0] -> [20 poc 0] 106 dilate_8c
  // nope
  // poc 106 dilate_8c stage 20 side 0
  si.poc[20][0].op = SPOC_POC_DILATE;
  si.poc[20][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[20][0].kernel[i] = pi0[i];


  // STAGE 21
  // 0`imopen [20 poc 0] -> [21 poc 0] 108 dilate_8c
  si.mux[20][0].op = SPOC_MUX_IN0;
  // 0`imopen [21 input 0] -> [21 poc 0] 108 dilate_8c
  // nope
  // poc 108 dilate_8c stage 21 side 0
  si.poc[21][0].op = SPOC_POC_DILATE;
  si.poc[21][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[21][0].kernel[i] = pi0[i];


  // STAGE 22
  // 0`imopen [21 poc 0] -> [22 poc 0] 110 dilate_8c
  si.mux[21][0].op = SPOC_MUX_IN0;
  // 0`imopen [22 input 0] -> [22 poc 0] 110 dilate_8c
  // nope
  // poc 110 dilate_8c stage 22 side 0
  si.poc[22][0].op = SPOC_POC_DILATE;
  si.poc[22][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[22][0].kernel[i] = pi0[i];


  // STAGE 23
  // 0`imopen [22 poc 0] -> [23 poc 0] 112 dilate_8c
  si.mux[22][0].op = SPOC_MUX_IN0;
  // 0`imopen [23 input 0] -> [23 poc 0] 112 dilate_8c
  // nope
  // poc 112 dilate_8c stage 23 side 0
  si.poc[23][0].op = SPOC_POC_DILATE;
  si.poc[23][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[23][0].kernel[i] = pi0[i];


  // STAGE 0
  // 0`in [0 input 1] -> [0 poc 1] 136 dilate_8c
  // nope
  // poc 136 dilate_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_DILATE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi0[i];


  // STAGE 1
  // 0`imclose [0 poc 1] -> [1 poc 1] 138 dilate_8c
  si.mux[0][3].op = SPOC_MUX_IN1;
  // 0`imclose [1 input 1] -> [1 poc 1] 138 dilate_8c
  // nope
  // poc 138 dilate_8c stage 1 side 1
  si.poc[1][1].op = SPOC_POC_DILATE;
  si.poc[1][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][1].kernel[i] = pi0[i];


  // STAGE 2
  // 0`imclose [1 poc 1] -> [2 poc 1] 140 dilate_8c
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`imclose [2 input 1] -> [2 poc 1] 140 dilate_8c
  // nope
  // poc 140 dilate_8c stage 2 side 1
  si.poc[2][1].op = SPOC_POC_DILATE;
  si.poc[2][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][1].kernel[i] = pi0[i];


  // STAGE 3
  // 0`imclose [2 poc 1] -> [3 poc 1] 142 dilate_8c
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`imclose [3 input 1] -> [3 poc 1] 142 dilate_8c
  // nope
  // poc 142 dilate_8c stage 3 side 1
  si.poc[3][1].op = SPOC_POC_DILATE;
  si.poc[3][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][1].kernel[i] = pi0[i];


  // STAGE 4
  // 0`imclose [3 poc 1] -> [4 poc 1] 144 dilate_8c
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`imclose [4 input 1] -> [4 poc 1] 144 dilate_8c
  // nope
  // poc 144 dilate_8c stage 4 side 1
  si.poc[4][1].op = SPOC_POC_DILATE;
  si.poc[4][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][1].kernel[i] = pi0[i];


  // STAGE 5
  // 0`imclose [4 poc 1] -> [5 poc 1] 146 dilate_8c
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`imclose [5 input 1] -> [5 poc 1] 146 dilate_8c
  // nope
  // poc 146 dilate_8c stage 5 side 1
  si.poc[5][1].op = SPOC_POC_DILATE;
  si.poc[5][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][1].kernel[i] = pi0[i];


  // STAGE 6
  // 0`imclose [5 poc 1] -> [6 poc 1] 148 dilate_8c
  si.mux[5][3].op = SPOC_MUX_IN1;
  // 0`imclose [6 input 1] -> [6 poc 1] 148 dilate_8c
  // nope
  // poc 148 dilate_8c stage 6 side 1
  si.poc[6][1].op = SPOC_POC_DILATE;
  si.poc[6][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[6][1].kernel[i] = pi0[i];


  // STAGE 7
  // 0`imclose [6 poc 1] -> [7 poc 1] 150 dilate_8c
  si.mux[6][3].op = SPOC_MUX_IN1;
  // 0`imclose [7 input 1] -> [7 poc 1] 150 dilate_8c
  // nope
  // poc 150 dilate_8c stage 7 side 1
  si.poc[7][1].op = SPOC_POC_DILATE;
  si.poc[7][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][1].kernel[i] = pi0[i];


  // STAGE 8
  // 0`imclose [7 poc 1] -> [8 poc 1] 154 erode_8c
  si.mux[7][3].op = SPOC_MUX_IN1;
  // 0`imclose [8 input 1] -> [8 poc 1] 154 erode_8c
  // nope
  // poc 154 erode_8c stage 8 side 1
  si.poc[8][1].op = SPOC_POC_ERODE;
  si.poc[8][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[8][1].kernel[i] = pi0[i];


  // STAGE 9
  // 0`imclose [8 poc 1] -> [9 poc 1] 156 erode_8c
  si.mux[8][3].op = SPOC_MUX_IN1;
  // 0`imclose [9 input 1] -> [9 poc 1] 156 erode_8c
  // nope
  // poc 156 erode_8c stage 9 side 1
  si.poc[9][1].op = SPOC_POC_ERODE;
  si.poc[9][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[9][1].kernel[i] = pi0[i];


  // STAGE 10
  // 0`imclose [9 poc 1] -> [10 poc 1] 158 erode_8c
  si.mux[9][3].op = SPOC_MUX_IN1;
  // 0`imclose [10 input 1] -> [10 poc 1] 158 erode_8c
  // nope
  // poc 158 erode_8c stage 10 side 1
  si.poc[10][1].op = SPOC_POC_ERODE;
  si.poc[10][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[10][1].kernel[i] = pi0[i];


  // STAGE 11
  // 0`imclose [10 poc 1] -> [11 poc 1] 160 erode_8c
  si.mux[10][3].op = SPOC_MUX_IN1;
  // 0`imclose [11 input 1] -> [11 poc 1] 160 erode_8c
  // nope
  // poc 160 erode_8c stage 11 side 1
  si.poc[11][1].op = SPOC_POC_ERODE;
  si.poc[11][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[11][1].kernel[i] = pi0[i];


  // STAGE 12
  // 0`imclose [11 poc 1] -> [12 poc 1] 162 erode_8c
  si.mux[11][3].op = SPOC_MUX_IN1;
  // 0`imclose [12 input 1] -> [12 poc 1] 162 erode_8c
  // nope
  // poc 162 erode_8c stage 12 side 1
  si.poc[12][1].op = SPOC_POC_ERODE;
  si.poc[12][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[12][1].kernel[i] = pi0[i];


  // STAGE 13
  // 0`imclose [12 poc 1] -> [13 poc 1] 164 erode_8c
  si.mux[12][3].op = SPOC_MUX_IN1;
  // 0`imclose [13 input 1] -> [13 poc 1] 164 erode_8c
  // nope
  // poc 164 erode_8c stage 13 side 1
  si.poc[13][1].op = SPOC_POC_ERODE;
  si.poc[13][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[13][1].kernel[i] = pi0[i];


  // STAGE 14
  // 0`imclose [13 poc 1] -> [14 poc 1] 166 erode_8c
  si.mux[13][3].op = SPOC_MUX_IN1;
  // 0`imclose [14 input 1] -> [14 poc 1] 166 erode_8c
  // nope
  // poc 166 erode_8c stage 14 side 1
  si.poc[14][1].op = SPOC_POC_ERODE;
  si.poc[14][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[14][1].kernel[i] = pi0[i];


  // STAGE 15
  // 0`imclose [14 poc 1] -> [15 poc 1] 168 erode_8c
  si.mux[14][3].op = SPOC_MUX_IN1;
  // 0`imclose [15 input 1] -> [15 poc 1] 168 erode_8c
  // nope
  // poc 168 erode_8c stage 15 side 1
  si.poc[15][1].op = SPOC_POC_ERODE;
  si.poc[15][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[15][1].kernel[i] = pi0[i];

  // 0`imclose [15 poc 1] -> [15 threshold 1] 177 threshold
  si.mux[15][3].op = SPOC_MUX_IN1;
  // threshold 177 threshold stage 15 side 1
  si.th[15][1].op = pi3? SPOC_TH_BINARIZE : SPOC_TH_NO_BINARIZE;
  sp.th[15][1].boundmin = pi1;
  sp.th[15][1].boundmax = pi2;


  // output image 0`imopen on 0 and image 0`imcloseth on 1
  // 0`imopen [23 poc 0] -> [23 output 0] 0 null
  si.mux[23][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`imopen [23 output 0] -> [23 output 0] 0 null
  // nope

  // 0`imcloseth [15 threshold 1] -> [23 output 1] 0 null
  // 0`imcloseth [16 input 1] -> [23 output 1] 0 null
  si.mux[16][3].op = SPOC_MUX_IN1;
  // 0`imcloseth [17 input 1] -> [23 output 1] 0 null
  si.mux[17][3].op = SPOC_MUX_IN1;
  // 0`imcloseth [18 input 1] -> [23 output 1] 0 null
  si.mux[18][3].op = SPOC_MUX_IN1;
  // 0`imcloseth [19 input 1] -> [23 output 1] 0 null
  si.mux[19][3].op = SPOC_MUX_IN1;
  // 0`imcloseth [20 input 1] -> [23 output 1] 0 null
  si.mux[20][3].op = SPOC_MUX_IN1;
  // 0`imcloseth [21 input 1] -> [23 output 1] 0 null
  si.mux[21][3].op = SPOC_MUX_IN1;
  // 0`imcloseth [22 input 1] -> [23 output 1] 0 null
  si.mux[22][3].op = SPOC_MUX_IN1;
  // 0`imcloseth [23 input 1] -> [23 output 1] 0 null
  si.mux[23][3].op = SPOC_MUX_IN1;

  // fill in to the end...
  // 0`imcloseth [23 output 1] -> [23 output 1] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, o1, i0, i0);

  return ret;
}

// FREIA-SPoC helper function for module license_plate_copies
freia_status license_plate_copies_helper_0_0_1(freia_data2d * o0, freia_data2d * i0, freia_data2d * i1,
  const int32_t * pi0,
  int32_t pi1,
  int32_t pi2,
  int32_t pi3,
  const int32_t * pi4,
  const int32_t * pi5)
{
  spoc_instr si;
  spoc_param sp;
  spoc_reduction reduc;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_reduction_results redres;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`imopen [0 input 1] -> [0 poc 1] 114 dilate_8c
  // nope
  // poc 114 dilate_8c stage 0 side 1
  si.poc[0][1].op = SPOC_POC_DILATE;
  si.poc[0][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][1].kernel[i] = pi0[i];


  // STAGE 1
  // 0`imopen [0 poc 1] -> [1 poc 1] 116 dilate_8c
  si.mux[0][3].op = SPOC_MUX_IN1;
  // 0`imopen [1 input 1] -> [1 poc 1] 116 dilate_8c
  // nope
  // poc 116 dilate_8c stage 1 side 1
  si.poc[1][1].op = SPOC_POC_DILATE;
  si.poc[1][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][1].kernel[i] = pi0[i];


  // STAGE 2
  // 0`imopen [1 poc 1] -> [2 poc 1] 118 dilate_8c
  si.mux[1][3].op = SPOC_MUX_IN1;
  // 0`imopen [2 input 1] -> [2 poc 1] 118 dilate_8c
  // nope
  // poc 118 dilate_8c stage 2 side 1
  si.poc[2][1].op = SPOC_POC_DILATE;
  si.poc[2][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[2][1].kernel[i] = pi0[i];


  // STAGE 3
  // 0`imopen [2 poc 1] -> [3 poc 1] 120 dilate_8c
  si.mux[2][3].op = SPOC_MUX_IN1;
  // 0`imopen [3 input 1] -> [3 poc 1] 120 dilate_8c
  // nope
  // poc 120 dilate_8c stage 3 side 1
  si.poc[3][1].op = SPOC_POC_DILATE;
  si.poc[3][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[3][1].kernel[i] = pi0[i];


  // STAGE 4
  // 0`imopen [3 poc 1] -> [4 poc 1] 122 dilate_8c
  si.mux[3][3].op = SPOC_MUX_IN1;
  // 0`imopen [4 input 1] -> [4 poc 1] 122 dilate_8c
  // nope
  // poc 122 dilate_8c stage 4 side 1
  si.poc[4][1].op = SPOC_POC_DILATE;
  si.poc[4][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[4][1].kernel[i] = pi0[i];


  // STAGE 5
  // 0`imopen [4 poc 1] -> [5 poc 1] 124 dilate_8c
  si.mux[4][3].op = SPOC_MUX_IN1;
  // 0`imopen [5 input 1] -> [5 poc 1] 124 dilate_8c
  // nope
  // poc 124 dilate_8c stage 5 side 1
  si.poc[5][1].op = SPOC_POC_DILATE;
  si.poc[5][1].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[5][1].kernel[i] = pi0[i];

  // 0`imopen [5 poc 1] -> [5 threshold 1] 176 threshold
  si.mux[5][3].op = SPOC_MUX_IN1;
  // threshold 176 threshold stage 5 side 1
  si.th[5][1].op = pi3? SPOC_TH_BINARIZE : SPOC_TH_NO_BINARIZE;
  sp.th[5][1].boundmin = pi1;
  sp.th[5][1].boundmax = pi2;


  // STAGE 6
  // 0`imcloseth [0 input 0] -> [6 alu] 179 and
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`imcloseth [1 input 0] -> [6 alu] 179 and
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`imcloseth [2 input 0] -> [6 alu] 179 and
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`imcloseth [3 input 0] -> [6 alu] 179 and
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`imcloseth [4 input 0] -> [6 alu] 179 and
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`imcloseth [5 input 0] -> [6 alu] 179 and
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`imcloseth [6 input 0] -> [6 alu] 179 and
  // nope
  // 0`imopenth [5 threshold 1] -> [6 alu] 179 and
  // 0`imopenth [6 input 1] -> [6 alu] 179 and
  // nope
  // alu 179 and stage 6
  si.alu[6][0].op = SPOC_ALU_AND_IN0_IN1;


  // STAGE 7
  // 0`imand [6 alu] -> [7 poc 0] 185 erode_8c
  si.mux[6][0].op = SPOC_MUX_IN1;
  si.mux[6][2].op = SPOC_MUX_IN0;
  // 0`imand [7 input 0] -> [7 poc 0] 185 erode_8c
  // nope
  // poc 185 erode_8c stage 7 side 0
  si.poc[7][0].op = SPOC_POC_ERODE;
  si.poc[7][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[7][0].kernel[i] = pi4[i];


  // STAGE 8
  // 0`imfilt [7 poc 0] -> [8 poc 0] 187 erode_8c
  si.mux[7][0].op = SPOC_MUX_IN0;
  // 0`imfilt [8 input 0] -> [8 poc 0] 187 erode_8c
  // nope
  // poc 187 erode_8c stage 8 side 0
  si.poc[8][0].op = SPOC_POC_ERODE;
  si.poc[8][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[8][0].kernel[i] = pi4[i];


  // STAGE 9
  // 0`imfilt [8 poc 0] -> [9 poc 0] 189 erode_8c
  si.mux[8][0].op = SPOC_MUX_IN0;
  // 0`imfilt [9 input 0] -> [9 poc 0] 189 erode_8c
  // nope
  // poc 189 erode_8c stage 9 side 0
  si.poc[9][0].op = SPOC_POC_ERODE;
  si.poc[9][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[9][0].kernel[i] = pi4[i];


  // STAGE 10
  // 0`imfilt [9 poc 0] -> [10 poc 0] 191 erode_8c
  si.mux[9][0].op = SPOC_MUX_IN0;
  // 0`imfilt [10 input 0] -> [10 poc 0] 191 erode_8c
  // nope
  // poc 191 erode_8c stage 10 side 0
  si.poc[10][0].op = SPOC_POC_ERODE;
  si.poc[10][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[10][0].kernel[i] = pi4[i];


  // STAGE 11
  // 0`imfilt [10 poc 0] -> [11 poc 0] 195 dilate_8c
  si.mux[10][0].op = SPOC_MUX_IN0;
  // 0`imfilt [11 input 0] -> [11 poc 0] 195 dilate_8c
  // nope
  // poc 195 dilate_8c stage 11 side 0
  si.poc[11][0].op = SPOC_POC_DILATE;
  si.poc[11][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[11][0].kernel[i] = pi4[i];


  // STAGE 12
  // 0`imfilt [11 poc 0] -> [12 poc 0] 197 dilate_8c
  si.mux[11][0].op = SPOC_MUX_IN0;
  // 0`imfilt [12 input 0] -> [12 poc 0] 197 dilate_8c
  // nope
  // poc 197 dilate_8c stage 12 side 0
  si.poc[12][0].op = SPOC_POC_DILATE;
  si.poc[12][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[12][0].kernel[i] = pi4[i];


  // STAGE 13
  // 0`imfilt [12 poc 0] -> [13 poc 0] 199 dilate_8c
  si.mux[12][0].op = SPOC_MUX_IN0;
  // 0`imfilt [13 input 0] -> [13 poc 0] 199 dilate_8c
  // nope
  // poc 199 dilate_8c stage 13 side 0
  si.poc[13][0].op = SPOC_POC_DILATE;
  si.poc[13][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[13][0].kernel[i] = pi4[i];


  // STAGE 14
  // 0`imfilt [13 poc 0] -> [14 poc 0] 201 dilate_8c
  si.mux[13][0].op = SPOC_MUX_IN0;
  // 0`imfilt [14 input 0] -> [14 poc 0] 201 dilate_8c
  // nope
  // poc 201 dilate_8c stage 14 side 0
  si.poc[14][0].op = SPOC_POC_DILATE;
  si.poc[14][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[14][0].kernel[i] = pi4[i];


  // STAGE 15
  // 0`imfilt [14 poc 0] -> [15 poc 0] 213 erode_8c
  si.mux[14][0].op = SPOC_MUX_IN0;
  // 0`imfilt [15 input 0] -> [15 poc 0] 213 erode_8c
  // nope
  // poc 213 erode_8c stage 15 side 0
  si.poc[15][0].op = SPOC_POC_ERODE;
  si.poc[15][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[15][0].kernel[i] = pi0[i];


  // STAGE 16
  // 0`imout [15 poc 0] -> [16 poc 0] 215 erode_8c
  si.mux[15][0].op = SPOC_MUX_IN0;
  // 0`imout [16 input 0] -> [16 poc 0] 215 erode_8c
  // nope
  // poc 215 erode_8c stage 16 side 0
  si.poc[16][0].op = SPOC_POC_ERODE;
  si.poc[16][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[16][0].kernel[i] = pi0[i];


  // STAGE 17
  // 0`imout [16 poc 0] -> [17 poc 0] 217 erode_8c
  si.mux[16][0].op = SPOC_MUX_IN0;
  // 0`imout [17 input 0] -> [17 poc 0] 217 erode_8c
  // nope
  // poc 217 erode_8c stage 17 side 0
  si.poc[17][0].op = SPOC_POC_ERODE;
  si.poc[17][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[17][0].kernel[i] = pi0[i];


  // STAGE 18
  // 0`imout [17 poc 0] -> [18 poc 0] 219 erode_8c
  si.mux[17][0].op = SPOC_MUX_IN0;
  // 0`imout [18 input 0] -> [18 poc 0] 219 erode_8c
  // nope
  // poc 219 erode_8c stage 18 side 0
  si.poc[18][0].op = SPOC_POC_ERODE;
  si.poc[18][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[18][0].kernel[i] = pi0[i];


  // STAGE 19
  // 0`imout [18 poc 0] -> [19 poc 0] 223 dilate_8c
  si.mux[18][0].op = SPOC_MUX_IN0;
  // 0`imout [19 input 0] -> [19 poc 0] 223 dilate_8c
  // nope
  // poc 223 dilate_8c stage 19 side 0
  si.poc[19][0].op = SPOC_POC_DILATE;
  si.poc[19][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[19][0].kernel[i] = pi0[i];


  // STAGE 20
  // 0`imout [19 poc 0] -> [20 poc 0] 225 dilate_8c
  si.mux[19][0].op = SPOC_MUX_IN0;
  // 0`imout [20 input 0] -> [20 poc 0] 225 dilate_8c
  // nope
  // poc 225 dilate_8c stage 20 side 0
  si.poc[20][0].op = SPOC_POC_DILATE;
  si.poc[20][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[20][0].kernel[i] = pi0[i];


  // STAGE 21
  // 0`imout [20 poc 0] -> [21 poc 0] 227 dilate_8c
  si.mux[20][0].op = SPOC_MUX_IN0;
  // 0`imout [21 input 0] -> [21 poc 0] 227 dilate_8c
  // nope
  // poc 227 dilate_8c stage 21 side 0
  si.poc[21][0].op = SPOC_POC_DILATE;
  si.poc[21][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[21][0].kernel[i] = pi0[i];


  // STAGE 22
  // 0`imout [21 poc 0] -> [22 poc 0] 229 dilate_8c
  si.mux[21][0].op = SPOC_MUX_IN0;
  // 0`imout [22 input 0] -> [22 poc 0] 229 dilate_8c
  // nope
  // poc 229 dilate_8c stage 22 side 0
  si.poc[22][0].op = SPOC_POC_DILATE;
  si.poc[22][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[22][0].kernel[i] = pi0[i];


  // STAGE 23
  // 0`imout [22 poc 0] -> [23 poc 0] 237 dilate_8c
  si.mux[22][0].op = SPOC_MUX_IN0;
  // 0`imout [23 input 0] -> [23 poc 0] 237 dilate_8c
  // nope
  // poc 237 dilate_8c stage 23 side 0
  si.poc[23][0].op = SPOC_POC_DILATE;
  si.poc[23][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[23][0].kernel[i] = pi5[i];


  // output image 0`out on 0
  // 0`out [23 poc 0] -> [23 output 0] 0 null
  si.mux[23][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`out [23 output 0] -> [23 output 0] 0 null
  // nope

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

// FREIA-SPoC helper function for module license_plate_copies
freia_status license_plate_copies_helper_0_0_2(freia_data2d * o0, freia_data2d * i0,
  const int32_t * pi0)
{
  spoc_instr si;
  spoc_param sp;
  spoc_reduction reduc;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_reduction_results redres;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`out [0 input 0] -> [0 poc 0] 238 dilate_8c
  // nope
  // poc 238 dilate_8c stage 0 side 0
  si.poc[0][0].op = SPOC_POC_DILATE;
  si.poc[0][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[0][0].kernel[i] = pi0[i];


  // STAGE 1
  // 0`out [0 poc 0] -> [1 poc 0] 239 dilate_8c
  si.mux[0][0].op = SPOC_MUX_IN0;
  // 0`out [1 input 0] -> [1 poc 0] 239 dilate_8c
  // nope
  // poc 239 dilate_8c stage 1 side 0
  si.poc[1][0].op = SPOC_POC_DILATE;
  si.poc[1][0].grid = SPOC_POC_8_CONNEX;
  for(i=0 ; i<9 ; i++)
    sp.poc[1][0].kernel[i] = pi0[i];


  // output image 0`out on 0
  // 0`out [1 poc 0] -> [1 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`out [1 output 0] -> [23 output 0] 0 null
  // 0`out [2 input 0] -> [23 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`out [3 input 0] -> [23 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`out [4 input 0] -> [23 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`out [5 input 0] -> [23 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`out [6 input 0] -> [23 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`out [7 input 0] -> [23 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;
  // 0`out [8 input 0] -> [23 output 0] 0 null
  si.mux[8][0].op = SPOC_MUX_IN0;
  // 0`out [9 input 0] -> [23 output 0] 0 null
  si.mux[9][0].op = SPOC_MUX_IN0;
  // 0`out [10 input 0] -> [23 output 0] 0 null
  si.mux[10][0].op = SPOC_MUX_IN0;
  // 0`out [11 input 0] -> [23 output 0] 0 null
  si.mux[11][0].op = SPOC_MUX_IN0;
  // 0`out [12 input 0] -> [23 output 0] 0 null
  si.mux[12][0].op = SPOC_MUX_IN0;
  // 0`out [13 input 0] -> [23 output 0] 0 null
  si.mux[13][0].op = SPOC_MUX_IN0;
  // 0`out [14 input 0] -> [23 output 0] 0 null
  si.mux[14][0].op = SPOC_MUX_IN0;
  // 0`out [15 input 0] -> [23 output 0] 0 null
  si.mux[15][0].op = SPOC_MUX_IN0;
  // 0`out [16 input 0] -> [23 output 0] 0 null
  si.mux[16][0].op = SPOC_MUX_IN0;
  // 0`out [17 input 0] -> [23 output 0] 0 null
  si.mux[17][0].op = SPOC_MUX_IN0;
  // 0`out [18 input 0] -> [23 output 0] 0 null
  si.mux[18][0].op = SPOC_MUX_IN0;
  // 0`out [19 input 0] -> [23 output 0] 0 null
  si.mux[19][0].op = SPOC_MUX_IN0;
  // 0`out [20 input 0] -> [23 output 0] 0 null
  si.mux[20][0].op = SPOC_MUX_IN0;
  // 0`out [21 input 0] -> [23 output 0] 0 null
  si.mux[21][0].op = SPOC_MUX_IN0;
  // 0`out [22 input 0] -> [23 output 0] 0 null
  si.mux[22][0].op = SPOC_MUX_IN0;
  // 0`out [23 input 0] -> [23 output 0] 0 null
  si.mux[23][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, NULL);

  return ret;
}

// FREIA-SPoC helper function for module license_plate_copies
freia_status license_plate_copies_helper_0_1_0(freia_data2d * o0, freia_data2d * i0, freia_data2d * i1)
{
  spoc_instr si;
  spoc_param sp;
  spoc_reduction reduc;
  freia_microcode mcode;
  freia_dynamic_param dynparam;
  freia_reduction_results redres;
  freia_op_param param;
  freia_status ret;
  int i;

  // init pipe to nop
  spoc_init_pipe(&si, &sp, 16);


  // STAGE 0
  // 0`in [0 input 0] -> [0 alu] 244 and
  // nope
  // 0`out [0 input 1] -> [0 alu] 244 and
  // nope
  // alu 244 and stage 0
  si.alu[0][0].op = SPOC_ALU_AND_IN0_IN1;


  // output image 0`out on 0
  // 0`out [0 alu] -> [0 output 0] 0 null
  si.mux[0][0].op = SPOC_MUX_IN1;
  si.mux[0][2].op = SPOC_MUX_IN0;

  // fill in to the end...
  // 0`out [0 output 0] -> [23 output 0] 0 null
  // 0`out [1 input 0] -> [23 output 0] 0 null
  si.mux[1][0].op = SPOC_MUX_IN0;
  // 0`out [2 input 0] -> [23 output 0] 0 null
  si.mux[2][0].op = SPOC_MUX_IN0;
  // 0`out [3 input 0] -> [23 output 0] 0 null
  si.mux[3][0].op = SPOC_MUX_IN0;
  // 0`out [4 input 0] -> [23 output 0] 0 null
  si.mux[4][0].op = SPOC_MUX_IN0;
  // 0`out [5 input 0] -> [23 output 0] 0 null
  si.mux[5][0].op = SPOC_MUX_IN0;
  // 0`out [6 input 0] -> [23 output 0] 0 null
  si.mux[6][0].op = SPOC_MUX_IN0;
  // 0`out [7 input 0] -> [23 output 0] 0 null
  si.mux[7][0].op = SPOC_MUX_IN0;
  // 0`out [8 input 0] -> [23 output 0] 0 null
  si.mux[8][0].op = SPOC_MUX_IN0;
  // 0`out [9 input 0] -> [23 output 0] 0 null
  si.mux[9][0].op = SPOC_MUX_IN0;
  // 0`out [10 input 0] -> [23 output 0] 0 null
  si.mux[10][0].op = SPOC_MUX_IN0;
  // 0`out [11 input 0] -> [23 output 0] 0 null
  si.mux[11][0].op = SPOC_MUX_IN0;
  // 0`out [12 input 0] -> [23 output 0] 0 null
  si.mux[12][0].op = SPOC_MUX_IN0;
  // 0`out [13 input 0] -> [23 output 0] 0 null
  si.mux[13][0].op = SPOC_MUX_IN0;
  // 0`out [14 input 0] -> [23 output 0] 0 null
  si.mux[14][0].op = SPOC_MUX_IN0;
  // 0`out [15 input 0] -> [23 output 0] 0 null
  si.mux[15][0].op = SPOC_MUX_IN0;
  // 0`out [16 input 0] -> [23 output 0] 0 null
  si.mux[16][0].op = SPOC_MUX_IN0;
  // 0`out [17 input 0] -> [23 output 0] 0 null
  si.mux[17][0].op = SPOC_MUX_IN0;
  // 0`out [18 input 0] -> [23 output 0] 0 null
  si.mux[18][0].op = SPOC_MUX_IN0;
  // 0`out [19 input 0] -> [23 output 0] 0 null
  si.mux[19][0].op = SPOC_MUX_IN0;
  // 0`out [20 input 0] -> [23 output 0] 0 null
  si.mux[20][0].op = SPOC_MUX_IN0;
  // 0`out [21 input 0] -> [23 output 0] 0 null
  si.mux[21][0].op = SPOC_MUX_IN0;
  // 0`out [22 input 0] -> [23 output 0] 0 null
  si.mux[22][0].op = SPOC_MUX_IN0;
  // 0`out [23 input 0] -> [23 output 0] 0 null
  si.mux[23][0].op = SPOC_MUX_IN0;

  mcode.raw = (freia_ptr) &si;
  mcode.size = sizeof(spoc_instr);

  dynparam.raw = (freia_ptr) &sp;
  dynparam.size = sizeof(spoc_param);

  redres.raw = (freia_ptr) &reduc;
  redres.size = sizeof(spoc_reduction);

  ret = freia_cg_write_microcode(&mcode);
  ret |= freia_cg_write_dynamic_param(&dynparam);

  // actual call of spoc hardware
  freia_cg_template_process_2i_2o(&param, o0, NULL, i0, i1);

  return ret;
}

! updated function

int license_plate_copies(void)
{
   freia_dataio fdin;                                                   /*0010*/
   freia_dataio fdout;                                                  /*0011*/

   freia_data2d *in;                                                    /*0013*/
   freia_data2d *imopen;                                                /*0015*/
   freia_data2d *imcloseth;                                             /*0018*/
   freia_data2d *out;                                                   /*0022*/

   const  int32_t kernel1x3[9] = {0, 0, 0, 1, 1, 1, 0, 0, 0};           /*0024*/
   const  int32_t kernel3x1[9] = {0, 1, 0, 0, 1, 0, 0, 1, 0};           /*0025*/

   freia_status _return0, _return1, _return2, _return3, _return4;       /*0027*/
   freia_status ret_0;                                                  /*0029*/
   int i_0;                                                             /*0030*/
   freia_status ret_1;                                                  /*0032*/
   int i_1;                                                             /*0033*/
   freia_status ret_2;                                                  /*0035*/
   int i_2;                                                             /*0036*/
   freia_status ret_3;                                                  /*0038*/
   int i_3, i_4;                                                        /*0039*/
   
   /* open videos flow */
   freia_common_open_input(&fdin, 0);                                   /*0042*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, 8);          /*0043*/
   
   /* images creation */
   in = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);               /*0046*/
   imopen = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0048*/
   imcloseth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);        /*0051*/
   out = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);              /*0055*/
   
   /* processing */
   freia_common_rx_image(in, &fdin);                                    /*0058*/
   
   
   
   
   
   ret_0 = 0;                                                           /*0062*/

   ret_0 |= license_plate_copies_helper_0_0_0(imopen, imcloseth, in, kernel1x3, 150, 255, 1);         /*0064*/
   ret_0 |= 0;                                                          /*0065*/
   ret_0 |= 0;                                                          /*0066*/
   ret_0 |= 0;                                                          /*0067*/
   ret_0 |= 0;                                                          /*0068*/
   ret_0 |= 0;                                                          /*0069*/
   ret_0 |= 0;                                                          /*0070*/
   ret_0 |= 0;                                                          /*0071*/
   ret_0 |= 0;                                                          /*0072*/
   ret_0 |= 0;                                                          /*0073*/
   ret_0 |= 0;                                                          /*0074*/
   ret_0 |= 0;                                                          /*0075*/
   ret_0 |= 0;                                                          /*0076*/
   ret_0 |= 0;                                                          /*0077*/
   ret_0 |= 0;                                                          /*0078*/
   ret_0 |= 0;                                                          /*0079*/
   ret_0 |= 0;                                                          /*0080*/
   ret_0 |= 0;                                                          /*0081*/
   ret_0 |= 0;                                                          /*0082*/
   ret_0 |= 0;                                                          /*0083*/
   ret_0 |= 0;                                                          /*0084*/
   ret_0 |= 0;                                                          /*0085*/
   ret_0 |= 0;                                                          /*0086*/
   ret_0 |= 0;                                                          /*0087*/
   ret_0 |= 0;                                                          /*0088*/
   ret_0 |= 0;                                                          /*0089*/
   ret_0 |= 0;                                                          /*0090*/
   ret_0 |= 0;                                                          /*0091*/
   ret_0 |= 0;                                                          /*0092*/
   ret_0 |= 0;                                                          /*0093*/
   i_0 = 15;                                                            /*0094*/

   ret_0 |= 0;                                                          /*0096*/
   ret_0 |= 0;                                                          /*0097*/
   ret_0 |= 0;                                                          /*0098*/
   ret_0 |= 0;                                                          /*0099*/
   ret_0 |= 0;                                                          /*0100*/
   ret_0 |= 0;                                                          /*0101*/
   ret_0 |= 0;                                                          /*0102*/
   ret_0 |= 0;                                                          /*0103*/
   ret_0 |= 0;                                                          /*0104*/
   ret_0 |= 0;                                                          /*0105*/
   ret_0 |= 0;                                                          /*0106*/
   ret_0 |= 0;                                                          /*0107*/
   ret_0 |= 0;                                                          /*0108*/
   ret_0 |= 0;                                                          /*0109*/
   ret_0 |= 0;                                                          /*0110*/
   ret_0 |= 0;                                                          /*0111*/
   ret_0 |= 0;                                                          /*0112*/
   ret_0 |= 0;                                                          /*0113*/
   ret_0 |= license_plate_copies_helper_0_0_1(out, imcloseth, imopen, kernel1x3, 1, 50, 1, kernel3x1, freia_morpho_kernel_8c);      /*0114*/
   ret_0 |= 0;                                                          /*0115*/
   ret_0 |= 0;                                                          /*0116*/
   ret_0 |= 0;                                                          /*0117*/
   ret_0 |= 0;                                                          /*0118*/
   ret_0 |= 0;                                                          /*0119*/
   ret_0 |= 0;                                                          /*0120*/
   ret_0 |= 0;                                                          /*0121*/
   ret_0 |= 0;                                                          /*0122*/
   ret_0 |= 0;                                                          /*0123*/
   ret_0 |= 0;                                                          /*0124*/
   ret_0 |= 0;                                                          /*0125*/
   i_0 = 15;                                                            /*0126*/

   _return1 = ret_0;                                                    /*0130*/

   ret_1 = 0;                                                           /*0134*/

   ret_1 |= 0;                                                          /*0136*/
   ret_1 |= 0;                                                          /*0137*/
   ret_1 |= 0;                                                          /*0138*/
   ret_1 |= 0;                                                          /*0139*/
   ret_1 |= 0;                                                          /*0140*/
   ret_1 |= 0;                                                          /*0141*/
   ret_1 |= 0;                                                          /*0142*/
   ret_1 |= 0;                                                          /*0143*/
   ret_1 |= 0;                                                          /*0144*/
   ret_1 |= 0;                                                          /*0145*/
   ret_1 |= 0;                                                          /*0146*/
   ret_1 |= 0;                                                          /*0147*/
   ret_1 |= 0;                                                          /*0148*/
   ret_1 |= 0;                                                          /*0149*/
   ret_1 |= 0;                                                          /*0150*/
   ret_1 |= 0;                                                          /*0151*/
   i_1 = 8;                                                             /*0152*/

   ret_1 |= 0;                                                          /*0154*/
   ret_1 |= 0;                                                          /*0155*/
   ret_1 |= 0;                                                          /*0156*/
   ret_1 |= 0;                                                          /*0157*/
   ret_1 |= 0;                                                          /*0158*/
   ret_1 |= 0;                                                          /*0159*/
   ret_1 |= 0;                                                          /*0160*/
   ret_1 |= 0;                                                          /*0161*/
   ret_1 |= 0;                                                          /*0162*/
   ret_1 |= 0;                                                          /*0163*/
   ret_1 |= 0;                                                          /*0164*/
   ret_1 |= 0;                                                          /*0165*/
   ret_1 |= 0;                                                          /*0166*/
   ret_1 |= 0;                                                          /*0167*/
   ret_1 |= 0;                                                          /*0168*/
   ret_1 |= 0;                                                          /*0169*/
   i_1 = 8;                                                             /*0170*/

   _return0 = ret_1;                                                    /*0174*/
   
   
   
   ret_2 = 0;                                                           /*0183*/

   ret_2 |= 0;                                                          /*0185*/
   ret_2 |= 0;                                                          /*0186*/
   ret_2 |= 0;                                                          /*0187*/
   ret_2 |= 0;                                                          /*0188*/
   ret_2 |= 0;                                                          /*0189*/
   ret_2 |= 0;                                                          /*0190*/
   ret_2 |= 0;                                                          /*0191*/
   ret_2 |= 0;                                                          /*0192*/
   i_2 = 4;                                                             /*0193*/

   ret_2 |= 0;                                                          /*0195*/
   ret_2 |= 0;                                                          /*0196*/
   ret_2 |= 0;                                                          /*0197*/
   ret_2 |= 0;                                                          /*0198*/
   ret_2 |= 0;                                                          /*0199*/
   ret_2 |= 0;                                                          /*0200*/
   ret_2 |= 0;                                                          /*0201*/
   ret_2 |= 0;                                                          /*0202*/
   i_2 = 4;                                                             /*0203*/

   _return2 = ret_2;                                                    /*0207*/

   ret_3 = 0;                                                           /*0211*/

   ret_3 |= 0;                                                          /*0213*/
   ret_3 |= 0;                                                          /*0214*/
   ret_3 |= 0;                                                          /*0215*/
   ret_3 |= 0;                                                          /*0216*/
   ret_3 |= 0;                                                          /*0217*/
   ret_3 |= 0;                                                          /*0218*/
   ret_3 |= 0;                                                          /*0219*/
   ret_3 |= 0;                                                          /*0220*/
   i_3 = 4;                                                             /*0221*/

   ret_3 |= 0;                                                          /*0223*/
   ret_3 |= 0;                                                          /*0224*/
   ret_3 |= 0;                                                          /*0225*/
   ret_3 |= 0;                                                          /*0226*/
   ret_3 |= 0;                                                          /*0227*/
   ret_3 |= 0;                                                          /*0228*/
   ret_3 |= 0;                                                          /*0229*/
   ret_3 |= 0;                                                          /*0230*/
   i_3 = 4;                                                             /*0231*/

   _return3 = ret_3;                                                    /*0235*/

   license_plate_copies_helper_0_0_2(out, out, freia_morpho_kernel_8c);                /*0238*/
   i_4 = 3;                                                             /*0240*/

   _return4 = 0;                                                        /*0242*/

   license_plate_copies_helper_0_1_0(out, in, out);                     /*0244*/
   
   
   
   
   freia_common_tx_image(out, &fdout);                                  /*0245*/
   
   /* images destruction */
   freia_common_destruct_data(in);                                      /*0248*/
   freia_common_destruct_data(imopen);                                  /*0250*/
   freia_common_destruct_data(imcloseth);                               /*0253*/
   freia_common_destruct_data(out);                                     /*0257*/
   
   /* close videos flow */
   freia_common_close_input(&fdin);                                     /*0260*/
   freia_common_close_output(&fdout);                                   /*0261*/

   return 0;                                                            /*0263*/
}

! cleaned up function

int license_plate_copies(void)
{
   freia_dataio fdin;                                                   /*0010*/
   freia_dataio fdout;                                                  /*0011*/

   freia_data2d *in;                                                    /*0013*/
   freia_data2d *imopen;                                                /*0015*/
   freia_data2d *imcloseth;                                             /*0018*/
   freia_data2d *out;                                                   /*0022*/

   const  int32_t kernel1x3[9] = {0, 0, 0, 1, 1, 1, 0, 0, 0};           /*0024*/
   const  int32_t kernel3x1[9] = {0, 1, 0, 0, 1, 0, 0, 1, 0};           /*0025*/

   freia_status _return0, _return1, _return2, _return3, _return4;       /*0027*/
   freia_status ret_0;                                                  /*0029*/
   int i_0;                                                             /*0030*/
   freia_status ret_1;                                                  /*0032*/
   int i_1;                                                             /*0033*/
   freia_status ret_2;                                                  /*0035*/
   int i_2;                                                             /*0036*/
   freia_status ret_3;                                                  /*0038*/
   int i_3, i_4;                                                        /*0039*/
   
   /* open videos flow */
   freia_common_open_input(&fdin, 0);                                   /*0042*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, 8);          /*0043*/
   
   /* images creation */
   in = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);               /*0046*/
   imopen = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0048*/
   imcloseth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);        /*0051*/
   out = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);              /*0055*/
   
   /* processing */
   freia_common_rx_image(in, &fdin);                                    /*0058*/
   
   
   
   
   
   ret_0 = 0;                                                           /*0062*/

   ret_0 |= license_plate_copies_helper_0_0_0(imopen, imcloseth, in, kernel1x3, 150, 255, 1);         /*0064*/
   i_0 = 15;                                                            /*0094*/

   ret_0 |= license_plate_copies_helper_0_0_1(out, imcloseth, imopen, kernel1x3, 1, 50, 1, kernel3x1, freia_morpho_kernel_8c);      /*0114*/
   i_0 = 15;                                                            /*0126*/

   _return1 = ret_0;                                                    /*0130*/

   ret_1 = 0;                                                           /*0134*/

   i_1 = 8;                                                             /*0152*/

   i_1 = 8;                                                             /*0170*/

   _return0 = ret_1;                                                    /*0174*/
   
   
   
   ret_2 = 0;                                                           /*0183*/

   i_2 = 4;                                                             /*0193*/

   i_2 = 4;                                                             /*0203*/

   _return2 = ret_2;                                                    /*0207*/

   ret_3 = 0;                                                           /*0211*/

   i_3 = 4;                                                             /*0221*/

   i_3 = 4;                                                             /*0231*/

   _return3 = ret_3;                                                    /*0235*/

   license_plate_copies_helper_0_0_2(out, out, freia_morpho_kernel_8c);                /*0238*/
   i_4 = 3;                                                             /*0240*/

   _return4 = 0;                                                        /*0242*/

   license_plate_copies_helper_0_1_0(out, in, out);                     /*0244*/
   
   
   
   
   freia_common_tx_image(out, &fdout);                                  /*0245*/
   
   /* images destruction */
   freia_common_destruct_data(in);                                      /*0248*/
   freia_common_destruct_data(imopen);                                  /*0250*/
   freia_common_destruct_data(imcloseth);                               /*0253*/
   freia_common_destruct_data(out);                                     /*0257*/
   
   /* close videos flow */
   freia_common_close_input(&fdin);                                     /*0260*/
   freia_common_close_output(&fdout);                                   /*0261*/

   return 0;                                                            /*0263*/
}
#
# TERAPIX
#

! initial function

int license_plate_copies(void)
{
   freia_dataio fdin;                                                   /*0010*/
   freia_dataio fdout;                                                  /*0011*/

   freia_data2d *in;                                                    /*0013*/
   freia_data2d *immir;                                                 /*0014*/
   freia_data2d *imopen;                                                /*0015*/
   freia_data2d *imclose;                                               /*0016*/
   freia_data2d *imopenth;                                              /*0017*/
   freia_data2d *imcloseth;                                             /*0018*/
   freia_data2d *imand;                                                 /*0019*/
   freia_data2d *imfilt;                                                /*0020*/
   freia_data2d *imout;                                                 /*0021*/
   freia_data2d *out;                                                   /*0022*/

   const  int32_t kernel1x3[9] = {0, 0, 0, 1, 1, 1, 0, 0, 0};           /*0024*/
   const  int32_t kernel3x1[9] = {0, 1, 0, 0, 1, 0, 0, 1, 0};           /*0025*/

   freia_status _return0, _return1, _return2, _return3, _return4;       /*0027*/
   freia_data2d *imtmp_0;                                               /*0028*/
   freia_status ret_0;                                                  /*0029*/
   int i_0;                                                             /*0030*/
   freia_data2d *imtmp_1;                                               /*0031*/
   freia_status ret_1;                                                  /*0032*/
   int i_1;                                                             /*0033*/
   freia_data2d *imtmp_2;                                               /*0034*/
   freia_status ret_2;                                                  /*0035*/
   int i_2;                                                             /*0036*/
   freia_data2d *imtmp_3;                                               /*0037*/
   freia_status ret_3;                                                  /*0038*/
   int i_3, i_4;                                                        /*0039*/
   
   /* open videos flow */
   freia_common_open_input(&fdin, 0);                                   /*0042*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, 8);          /*0043*/
   
   /* images creation */
   in = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);               /*0046*/
   immir = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0047*/
   imopen = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0048*/
   imclose = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);          /*0049*/
   imopenth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);         /*0050*/
   imcloseth = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);        /*0051*/
   imand = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0052*/
   imfilt = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);           /*0053*/
   imout = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);            /*0054*/
   out = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);              /*0055*/
   
   /* processing */
   freia_common_rx_image(in, &fdin);                                    /*0058*/

   imtmp_0 = freia_common_create_data(imopen->bpp, imopen->widthWa, imopen->heightWa);                /*0060*/

   ret_0 = freia_aipo_copy(imtmp_0, in);                                /*0062*/

   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0064*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0065*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0066*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0067*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0068*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0069*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0070*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0071*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0072*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0073*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0074*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0075*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0076*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0077*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0078*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0079*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0080*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0081*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0082*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0083*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0084*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0085*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0086*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0087*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0088*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0089*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0090*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0091*/
   ret_0 |= freia_aipo_erode_8c(imopen, imtmp_0, kernel1x3);            /*0092*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0093*/
   i_0 = 15;                                                            /*0094*/

   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0096*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0097*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0098*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0099*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0100*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0101*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0102*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0103*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0104*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0105*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0106*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0107*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0108*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0109*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0110*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0111*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0112*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0113*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0114*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0115*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0116*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0117*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0118*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0119*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0120*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0121*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0122*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0123*/
   ret_0 |= freia_aipo_dilate_8c(imopen, imtmp_0, kernel1x3);           /*0124*/
   ret_0 |= freia_aipo_copy(imtmp_0, imopen);                           /*0125*/
   i_0 = 15;                                                            /*0126*/

   freia_common_destruct_data(imtmp_0);                                 /*0128*/

   _return1 = ret_0;                                                    /*0130*/

   imtmp_1 = freia_common_create_data(imclose->bpp, imclose->widthWa, imclose->heightWa);             /*0132*/

   ret_1 = freia_aipo_copy(imtmp_1, in);                                /*0134*/

   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0136*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0137*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0138*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0139*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0140*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0141*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0142*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0143*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0144*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0145*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0146*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0147*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0148*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0149*/
   ret_1 |= freia_aipo_dilate_8c(imclose, imtmp_1, kernel1x3);          /*0150*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0151*/
   i_1 = 8;                                                             /*0152*/

   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0154*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0155*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0156*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0157*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0158*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0159*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0160*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0161*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0162*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0163*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0164*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0165*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0166*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0167*/
   ret_1 |= freia_aipo_erode_8c(imclose, imtmp_1, kernel1x3);           /*0168*/
   ret_1 |= freia_aipo_copy(imtmp_1, imclose);                          /*0169*/
   i_1 = 8;                                                             /*0170*/

   freia_common_destruct_data(imtmp_1);                                 /*0172*/

   _return0 = ret_1;                                                    /*0174*/

   freia_aipo_threshold(imopenth, imopen, 1, 50, 1);                    /*0176*/
   freia_aipo_threshold(imcloseth, imclose, 150, 255, 1);               /*0177*/

   freia_aipo_and(imand, imopenth, imcloseth);                          /*0179*/

   imtmp_2 = freia_common_create_data(imfilt->bpp, imfilt->widthWa, imfilt->heightWa);                /*0181*/

   ret_2 = freia_aipo_copy(imtmp_2, imand);                             /*0183*/

   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0185*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0186*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0187*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0188*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0189*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0190*/
   ret_2 |= freia_aipo_erode_8c(imfilt, imtmp_2, kernel3x1);            /*0191*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0192*/
   i_2 = 4;                                                             /*0193*/

   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0195*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0196*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0197*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0198*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0199*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0200*/
   ret_2 |= freia_aipo_dilate_8c(imfilt, imtmp_2, kernel3x1);           /*0201*/
   ret_2 |= freia_aipo_copy(imtmp_2, imfilt);                           /*0202*/
   i_2 = 4;                                                             /*0203*/

   freia_common_destruct_data(imtmp_2);                                 /*0205*/

   _return2 = ret_2;                                                    /*0207*/

   imtmp_3 = freia_common_create_data(imout->bpp, imout->widthWa, imout->heightWa);    /*0209*/

   ret_3 = freia_aipo_copy(imtmp_3, imfilt);                            /*0211*/

   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0213*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0214*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0215*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0216*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0217*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0218*/
   ret_3 |= freia_aipo_erode_8c(imout, imtmp_3, kernel1x3);             /*0219*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0220*/
   i_3 = 4;                                                             /*0221*/

   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0223*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0224*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0225*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0226*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0227*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0228*/
   ret_3 |= freia_aipo_dilate_8c(imout, imtmp_3, kernel1x3);            /*0229*/
   ret_3 |= freia_aipo_copy(imtmp_3, imout);                            /*0230*/
   i_3 = 4;                                                             /*0231*/

   freia_common_destruct_data(imtmp_3);                                 /*0233*/

   _return3 = ret_3;                                                    /*0235*/

   freia_aipo_dilate_8c(out, imout, freia_morpho_kernel_8c);            /*0237*/
   freia_aipo_dilate_8c(out, out, freia_morpho_kernel_8c);              /*0238*/
   freia_aipo_dilate_8c(out, out, freia_morpho_kernel_8c);              /*0239*/
   i_4 = 3;                                                             /*0240*/

   _return4 = 0;                                                        /*0242*/

   freia_aipo_and(out, out, in);                                        /*0244*/
   freia_common_tx_image(out, &fdout);                                  /*0245*/
   
   /* images destruction */
   freia_common_destruct_data(in);                                      /*0248*/
   freia_common_destruct_data(immir);                                   /*0249*/
   freia_common_destruct_data(imopen);                                  /*0250*/
   freia_common_destruct_data(imclose);                                 /*0251*/
   freia_common_destruct_data(imopenth);                                /*0252*/
   freia_common_destruct_data(imcloseth);                               /*0253*/
   freia_common_destruct_data(imand);                                   /*0254*/
   freia_common_destruct_data(imfilt);                                  /*0255*/
   freia_common_destruct_data(imout);                                   /*0256*/
   freia_common_destruct_data(out);                                     /*0257*/
   
   /* close videos flow */
   freia_common_close_input(&fdin);                                     /*0260*/
   freia_common_close_output(&fdout);                                   /*0261*/

   return 0;                                                            /*0263*/
}

! graphs

// graph for dag "dag_0" of module "license_plate_copies" in dot format
digraph "dag_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "244 &" [shape=trapezium,orientation=270];
  "244 &" -> "out";
  "242 ?" [shape=none];
  "240 ?" [shape=none];
  "239 D8" [shape=box];
  "239 D8" -> "244 &" [label="out"];
  "238 D8" [shape=box];
  "238 D8" -> "239 D8" [label="out"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="out"];
  "235 ?" [shape=none];
  "233 ?" [shape=none];
  "231 ?" [shape=none];
  "231 ?" -> "221 ?" [arrowhead=empty,label="i_3"];
  "230 =" [shape=circle];
  "229 D8" [shape=box];
  "229 D8" -> "237 D8" [label="imout"];
  "229 D8" -> "230 =" [label="imout"];
  "228 =" [shape=circle];
  "228 =" -> "229 D8" [label="imtmp_3"];
  "227 D8" [shape=box];
  "227 D8" -> "228 =" [label="imout"];
  "226 =" [shape=circle];
  "226 =" -> "227 D8" [label="imtmp_3"];
  "225 D8" [shape=box];
  "225 D8" -> "226 =" [label="imout"];
  "224 =" [shape=circle];
  "224 =" -> "225 D8" [label="imtmp_3"];
  "223 D8" [shape=box];
  "223 D8" -> "224 =" [label="imout"];
  "221 ?" [shape=none];
  "221 ?" -> "231 ?" [arrowhead=empty,label="i_3"];
  "220 =" [shape=circle];
  "220 =" -> "223 D8" [label="imtmp_3"];
  "219 E8" [shape=box];
  "219 E8" -> "220 =" [label="imout"];
  "218 =" [shape=circle];
  "218 =" -> "219 E8" [label="imtmp_3"];
  "217 E8" [shape=box];
  "217 E8" -> "218 =" [label="imout"];
  "216 =" [shape=circle];
  "216 =" -> "217 E8" [label="imtmp_3"];
  "215 E8" [shape=box];
  "215 E8" -> "216 =" [label="imout"];
  "214 =" [shape=circle];
  "214 =" -> "215 E8" [label="imtmp_3"];
  "213 E8" [shape=box];
  "213 E8" -> "214 =" [label="imout"];
  "211 =" [shape=circle];
  "211 =" -> "213 E8" [label="imtmp_3"];
  "209 ?" [shape=none];
  "207 ?" [shape=none];
  "205 ?" [shape=none];
  "203 ?" [shape=none];
  "203 ?" -> "193 ?" [arrowhead=empty,label="i_2"];
  "202 =" [shape=circle];
  "201 D8" [shape=box];
  "201 D8" -> "211 =" [label="imfilt"];
  "201 D8" -> "202 =" [label="imfilt"];
  "200 =" [shape=circle];
  "200 =" -> "201 D8" [label="imtmp_2"];
  "199 D8" [shape=box];
  "199 D8" -> "200 =" [label="imfilt"];
  "198 =" [shape=circle];
  "198 =" -> "199 D8" [label="imtmp_2"];
  "197 D8" [shape=box];
  "197 D8" -> "198 =" [label="imfilt"];
  "196 =" [shape=circle];
  "196 =" -> "197 D8" [label="imtmp_2"];
  "195 D8" [shape=box];
  "195 D8" -> "196 =" [label="imfilt"];
  "193 ?" [shape=none];
  "193 ?" -> "203 ?" [arrowhead=empty,label="i_2"];
  "192 =" [shape=circle];
  "192 =" -> "195 D8" [label="imtmp_2"];
  "191 E8" [shape=box];
  "191 E8" -> "192 =" [label="imfilt"];
  "190 =" [shape=circle];
  "190 =" -> "191 E8" [label="imtmp_2"];
  "189 E8" [shape=box];
  "189 E8" -> "190 =" [label="imfilt"];
  "188 =" [shape=circle];
  "188 =" -> "189 E8" [label="imtmp_2"];
  "187 E8" [shape=box];
  "187 E8" -> "188 =" [label="imfilt"];
  "186 =" [shape=circle];
  "186 =" -> "187 E8" [label="imtmp_2"];
  "185 E8" [shape=box];
  "185 E8" -> "186 =" [label="imfilt"];
  "183 =" [shape=circle];
  "183 =" -> "185 E8" [label="imtmp_2"];
  "181 ?" [shape=none];
  "179 &" [shape=trapezium,orientation=270];
  "179 &" -> "183 =" [label="imand"];
  "177 thr" [shape=parallelogram];
  "177 thr" -> "179 &" [label="imcloseth"];
  "176 thr" [shape=parallelogram];
  "176 thr" -> "179 &" [label="imopenth"];
  "174 ?" [shape=none];
  "172 ?" [shape=none];
  "170 ?" [shape=none];
  "170 ?" -> "152 ?" [arrowhead=empty,label="i_1"];
  "169 =" [shape=circle];
  "168 E8" [shape=box];
  "168 E8" -> "177 thr" [label="imclose"];
  "168 E8" -> "169 =" [label="imclose"];
  "167 =" [shape=circle];
  "167 =" -> "168 E8" [label="imtmp_1"];
  "166 E8" [shape=box];
  "166 E8" -> "167 =" [label="imclose"];
  "165 =" [shape=circle];
  "165 =" -> "166 E8" [label="imtmp_1"];
  "164 E8" [shape=box];
  "164 E8" -> "165 =" [label="imclose"];
  "163 =" [shape=circle];
  "163 =" -> "164 E8" [label="imtmp_1"];
  "162 E8" [shape=box];
  "162 E8" -> "163 =" [label="imclose"];
  "161 =" [shape=circle];
  "161 =" -> "162 E8" [label="imtmp_1"];
  "160 E8" [shape=box];
  "160 E8" -> "161 =" [label="imclose"];
  "159 =" [shape=circle];
  "159 =" -> "160 E8" [label="imtmp_1"];
  "158 E8" [shape=box];
  "158 E8" -> "159 =" [label="imclose"];
  "157 =" [shape=circle];
  "157 =" -> "158 E8" [label="imtmp_1"];
  "156 E8" [shape=box];
  "156 E8" -> "157 =" [label="imclose"];
  "155 =" [shape=circle];
  "155 =" -> "156 E8" [label="imtmp_1"];
  "154 E8" [shape=box];
  "154 E8" -> "155 =" [label="imclose"];
  "152 ?" [shape=none];
  "152 ?" -> "170 ?" [arrowhead=empty,label="i_1"];
  "151 =" [shape=circle];
  "151 =" -> "154 E8" [label="imtmp_1"];
  "150 D8" [shape=box];
  "150 D8" -> "151 =" [label="imclose"];
  "149 =" [shape=circle];
  "149 =" -> "150 D8" [label="imtmp_1"];
  "148 D8" [shape=box];
  "148 D8" -> "149 =" [label="imclose"];
  "147 =" [shape=circle];
  "147 =" -> "148 D8" [label="imtmp_1"];
  "146 D8" [shape=box];
  "146 D8" -> "147 =" [label="imclose"];
  "145 =" [shape=circle];
  "145 =" -> "146 D8" [label="imtmp_1"];
  "144 D8" [shape=box];
  "144 D8" -> "145 =" [label="imclose"];
  "143 =" [shape=circle];
  "143 =" -> "144 D8" [label="imtmp_1"];
  "142 D8" [shape=box];
  "142 D8" -> "143 =" [label="imclose"];
  "141 =" [shape=circle];
  "141 =" -> "142 D8" [label="imtmp_1"];
  "140 D8" [shape=box];
  "140 D8" -> "141 =" [label="imclose"];
  "139 =" [shape=circle];
  "139 =" -> "140 D8" [label="imtmp_1"];
  "138 D8" [shape=box];
  "138 D8" -> "139 =" [label="imclose"];
  "137 =" [shape=circle];
  "137 =" -> "138 D8" [label="imtmp_1"];
  "136 D8" [shape=box];
  "136 D8" -> "137 =" [label="imclose"];
  "134 =" [shape=circle];
  "134 =" -> "136 D8" [label="imtmp_1"];
  "132 ?" [shape=none];
  "130 ?" [shape=none];
  "128 ?" [shape=none];
  "126 ?" [shape=none];
  "126 ?" -> "94 ?" [arrowhead=empty,label="i_0"];
  "125 =" [shape=circle];
  "124 D8" [shape=box];
  "124 D8" -> "176 thr" [label="imopen"];
  "124 D8" -> "125 =" [label="imopen"];
  "123 =" [shape=circle];
  "123 =" -> "124 D8" [label="imtmp_0"];
  "122 D8" [shape=box];
  "122 D8" -> "123 =" [label="imopen"];
  "121 =" [shape=circle];
  "121 =" -> "122 D8" [label="imtmp_0"];
  "120 D8" [shape=box];
  "120 D8" -> "121 =" [label="imopen"];
  "119 =" [shape=circle];
  "119 =" -> "120 D8" [label="imtmp_0"];
  "118 D8" [shape=box];
  "118 D8" -> "119 =" [label="imopen"];
  "117 =" [shape=circle];
  "117 =" -> "118 D8" [label="imtmp_0"];
  "116 D8" [shape=box];
  "116 D8" -> "117 =" [label="imopen"];
  "115 =" [shape=circle];
  "115 =" -> "116 D8" [label="imtmp_0"];
  "114 D8" [shape=box];
  "114 D8" -> "115 =" [label="imopen"];
  "113 =" [shape=circle];
  "113 =" -> "114 D8" [label="imtmp_0"];
  "112 D8" [shape=box];
  "112 D8" -> "113 =" [label="imopen"];
  "111 =" [shape=circle];
  "111 =" -> "112 D8" [label="imtmp_0"];
  "110 D8" [shape=box];
  "110 D8" -> "111 =" [label="imopen"];
  "109 =" [shape=circle];
  "109 =" -> "110 D8" [label="imtmp_0"];
  "108 D8" [shape=box];
  "108 D8" -> "109 =" [label="imopen"];
  "107 =" [shape=circle];
  "107 =" -> "108 D8" [label="imtmp_0"];
  "106 D8" [shape=box];
  "106 D8" -> "107 =" [label="imopen"];
  "105 =" [shape=circle];
  "105 =" -> "106 D8" [label="imtmp_0"];
  "104 D8" [shape=box];
  "104 D8" -> "105 =" [label="imopen"];
  "103 =" [shape=circle];
  "103 =" -> "104 D8" [label="imtmp_0"];
  "102 D8" [shape=box];
  "102 D8" -> "103 =" [label="imopen"];
  "101 =" [shape=circle];
  "101 =" -> "102 D8" [label="imtmp_0"];
  "100 D8" [shape=box];
  "100 D8" -> "101 =" [label="imopen"];
  "99 =" [shape=circle];
  "99 =" -> "100 D8" [label="imtmp_0"];
  "98 D8" [shape=box];
  "98 D8" -> "99 =" [label="imopen"];
  "97 =" [shape=circle];
  "97 =" -> "98 D8" [label="imtmp_0"];
  "96 D8" [shape=box];
  "96 D8" -> "97 =" [label="imopen"];
  "94 ?" [shape=none];
  "94 ?" -> "126 ?" [arrowhead=empty,label="i_0"];
  "93 =" [shape=circle];
  "93 =" -> "96 D8" [label="imtmp_0"];
  "92 E8" [shape=box];
  "92 E8" -> "93 =" [label="imopen"];
  "91 =" [shape=circle];
  "91 =" -> "92 E8" [label="imtmp_0"];
  "90 E8" [shape=box];
  "90 E8" -> "91 =" [label="imopen"];
  "89 =" [shape=circle];
  "89 =" -> "90 E8" [label="imtmp_0"];
  "88 E8" [shape=box];
  "88 E8" -> "89 =" [label="imopen"];
  "87 =" [shape=circle];
  "87 =" -> "88 E8" [label="imtmp_0"];
  "86 E8" [shape=box];
  "86 E8" -> "87 =" [label="imopen"];
  "85 =" [shape=circle];
  "85 =" -> "86 E8" [label="imtmp_0"];
  "84 E8" [shape=box];
  "84 E8" -> "85 =" [label="imopen"];
  "83 =" [shape=circle];
  "83 =" -> "84 E8" [label="imtmp_0"];
  "82 E8" [shape=box];
  "82 E8" -> "83 =" [label="imopen"];
  "81 =" [shape=circle];
  "81 =" -> "82 E8" [label="imtmp_0"];
  "80 E8" [shape=box];
  "80 E8" -> "81 =" [label="imopen"];
  "79 =" [shape=circle];
  "79 =" -> "80 E8" [label="imtmp_0"];
  "78 E8" [shape=box];
  "78 E8" -> "79 =" [label="imopen"];
  "77 =" [shape=circle];
  "77 =" -> "78 E8" [label="imtmp_0"];
  "76 E8" [shape=box];
  "76 E8" -> "77 =" [label="imopen"];
  "75 =" [shape=circle];
  "75 =" -> "76 E8" [label="imtmp_0"];
  "74 E8" [shape=box];
  "74 E8" -> "75 =" [label="imopen"];
  "73 =" [shape=circle];
  "73 =" -> "74 E8" [label="imtmp_0"];
  "72 E8" [shape=box];
  "72 E8" -> "73 =" [label="imopen"];
  "71 =" [shape=circle];
  "71 =" -> "72 E8" [label="imtmp_0"];
  "70 E8" [shape=box];
  "70 E8" -> "71 =" [label="imopen"];
  "69 =" [shape=circle];
  "69 =" -> "70 E8" [label="imtmp_0"];
  "68 E8" [shape=box];
  "68 E8" -> "69 =" [label="imopen"];
  "67 =" [shape=circle];
  "67 =" -> "68 E8" [label="imtmp_0"];
  "66 E8" [shape=box];
  "66 E8" -> "67 =" [label="imopen"];
  "65 =" [shape=circle];
  "65 =" -> "66 E8" [label="imtmp_0"];
  "64 E8" [shape=box];
  "64 E8" -> "65 =" [label="imopen"];
  "62 =" [shape=circle];
  "62 =" -> "64 E8" [label="imtmp_0"];
  "in" -> "244 &";
  "in" -> "134 =";
  "in" -> "62 =";
}
// graph for dag "dag_cleaned_0" of module "license_plate_copies" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "244 &" [shape=trapezium,orientation=270];
  "244 &" -> "out";
  "242 ?" [shape=none];
  "240 ?" [shape=none];
  "239 D8" [shape=box];
  "239 D8" -> "244 &" [label="out"];
  "238 D8" [shape=box];
  "238 D8" -> "239 D8" [label="out"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="out"];
  "235 ?" [shape=none];
  "233 ?" [shape=none];
  "231 ?" [shape=none];
  "231 ?" -> "221 ?" [arrowhead=empty,label="i_3"];
  "229 D8" [shape=box];
  "229 D8" -> "237 D8" [label="imout"];
  "227 D8" [shape=box];
  "227 D8" -> "229 D8" [label="imout"];
  "225 D8" [shape=box];
  "225 D8" -> "227 D8" [label="imout"];
  "223 D8" [shape=box];
  "223 D8" -> "225 D8" [label="imout"];
  "221 ?" [shape=none];
  "221 ?" -> "231 ?" [arrowhead=empty,label="i_3"];
  "219 E8" [shape=box];
  "219 E8" -> "223 D8" [label="imout"];
  "217 E8" [shape=box];
  "217 E8" -> "219 E8" [label="imout"];
  "215 E8" [shape=box];
  "215 E8" -> "217 E8" [label="imout"];
  "213 E8" [shape=box];
  "213 E8" -> "215 E8" [label="imout"];
  "209 ?" [shape=none];
  "207 ?" [shape=none];
  "205 ?" [shape=none];
  "203 ?" [shape=none];
  "203 ?" -> "193 ?" [arrowhead=empty,label="i_2"];
  "201 D8" [shape=box];
  "201 D8" -> "213 E8" [label="imfilt"];
  "199 D8" [shape=box];
  "199 D8" -> "201 D8" [label="imfilt"];
  "197 D8" [shape=box];
  "197 D8" -> "199 D8" [label="imfilt"];
  "195 D8" [shape=box];
  "195 D8" -> "197 D8" [label="imfilt"];
  "193 ?" [shape=none];
  "193 ?" -> "203 ?" [arrowhead=empty,label="i_2"];
  "191 E8" [shape=box];
  "191 E8" -> "195 D8" [label="imfilt"];
  "189 E8" [shape=box];
  "189 E8" -> "191 E8" [label="imfilt"];
  "187 E8" [shape=box];
  "187 E8" -> "189 E8" [label="imfilt"];
  "185 E8" [shape=box];
  "185 E8" -> "187 E8" [label="imfilt"];
  "181 ?" [shape=none];
  "179 &" [shape=trapezium,orientation=270];
  "179 &" -> "185 E8" [label="imand"];
  "177 thr" [shape=parallelogram];
  "177 thr" -> "179 &" [label="imcloseth"];
  "176 thr" [shape=parallelogram];
  "176 thr" -> "179 &" [label="imopenth"];
  "174 ?" [shape=none];
  "172 ?" [shape=none];
  "170 ?" [shape=none];
  "170 ?" -> "152 ?" [arrowhead=empty,label="i_1"];
  "168 E8" [shape=box];
  "168 E8" -> "177 thr" [label="imclose"];
  "166 E8" [shape=box];
  "166 E8" -> "168 E8" [label="imclose"];
  "164 E8" [shape=box];
  "164 E8" -> "166 E8" [label="imclose"];
  "162 E8" [shape=box];
  "162 E8" -> "164 E8" [label="imclose"];
  "160 E8" [shape=box];
  "160 E8" -> "162 E8" [label="imclose"];
  "158 E8" [shape=box];
  "158 E8" -> "160 E8" [label="imclose"];
  "156 E8" [shape=box];
  "156 E8" -> "158 E8" [label="imclose"];
  "154 E8" [shape=box];
  "154 E8" -> "156 E8" [label="imclose"];
  "152 ?" [shape=none];
  "152 ?" -> "170 ?" [arrowhead=empty,label="i_1"];
  "150 D8" [shape=box];
  "150 D8" -> "154 E8" [label="imclose"];
  "148 D8" [shape=box];
  "148 D8" -> "150 D8" [label="imclose"];
  "146 D8" [shape=box];
  "146 D8" -> "148 D8" [label="imclose"];
  "144 D8" [shape=box];
  "144 D8" -> "146 D8" [label="imclose"];
  "142 D8" [shape=box];
  "142 D8" -> "144 D8" [label="imclose"];
  "140 D8" [shape=box];
  "140 D8" -> "142 D8" [label="imclose"];
  "138 D8" [shape=box];
  "138 D8" -> "140 D8" [label="imclose"];
  "136 D8" [shape=box];
  "136 D8" -> "138 D8" [label="imclose"];
  "132 ?" [shape=none];
  "130 ?" [shape=none];
  "128 ?" [shape=none];
  "126 ?" [shape=none];
  "126 ?" -> "94 ?" [arrowhead=empty,label="i_0"];
  "124 D8" [shape=box];
  "124 D8" -> "176 thr" [label="imopen"];
  "122 D8" [shape=box];
  "122 D8" -> "124 D8" [label="imopen"];
  "120 D8" [shape=box];
  "120 D8" -> "122 D8" [label="imopen"];
  "118 D8" [shape=box];
  "118 D8" -> "120 D8" [label="imopen"];
  "116 D8" [shape=box];
  "116 D8" -> "118 D8" [label="imopen"];
  "114 D8" [shape=box];
  "114 D8" -> "116 D8" [label="imopen"];
  "112 D8" [shape=box];
  "112 D8" -> "114 D8" [label="imopen"];
  "110 D8" [shape=box];
  "110 D8" -> "112 D8" [label="imopen"];
  "108 D8" [shape=box];
  "108 D8" -> "110 D8" [label="imopen"];
  "106 D8" [shape=box];
  "106 D8" -> "108 D8" [label="imopen"];
  "104 D8" [shape=box];
  "104 D8" -> "106 D8" [label="imopen"];
  "102 D8" [shape=box];
  "102 D8" -> "104 D8" [label="imopen"];
  "100 D8" [shape=box];
  "100 D8" -> "102 D8" [label="imopen"];
  "98 D8" [shape=box];
  "98 D8" -> "100 D8" [label="imopen"];
  "96 D8" [shape=box];
  "96 D8" -> "98 D8" [label="imopen"];
  "94 ?" [shape=none];
  "94 ?" -> "126 ?" [arrowhead=empty,label="i_0"];
  "92 E8" [shape=box];
  "92 E8" -> "96 D8" [label="imopen"];
  "90 E8" [shape=box];
  "90 E8" -> "92 E8" [label="imopen"];
  "88 E8" [shape=box];
  "88 E8" -> "90 E8" [label="imopen"];
  "86 E8" [shape=box];
  "86 E8" -> "88 E8" [label="imopen"];
  "84 E8" [shape=box];
  "84 E8" -> "86 E8" [label="imopen"];
  "82 E8" [shape=box];
  "82 E8" -> "84 E8" [label="imopen"];
  "80 E8" [shape=box];
  "80 E8" -> "82 E8" [label="imopen"];
  "78 E8" [shape=box];
  "78 E8" -> "80 E8" [label="imopen"];
  "76 E8" [shape=box];
  "76 E8" -> "78 E8" [label="imopen"];
  "74 E8" [shape=box];
  "74 E8" -> "76 E8" [label="imopen"];
  "72 E8" [shape=box];
  "72 E8" -> "74 E8" [label="imopen"];
  "70 E8" [shape=box];
  "70 E8" -> "72 E8" [label="imopen"];
  "68 E8" [shape=box];
  "68 E8" -> "70 E8" [label="imopen"];
  "66 E8" [shape=box];
  "66 E8" -> "68 E8" [label="imopen"];
  "64 E8" [shape=box];
  "64 E8" -> "66 E8" [label="imopen"];
  "in" -> "64 E8";
  "in" -> "136 D8";
  "in" -> "244 &";
}
// graph for dag "license_plate_copies_helper_0_0" of module "license_plate_copies" in dot format
digraph "license_plate_copies_helper_0_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "out" [shape=circle];

  // computation vertices
  "244 &" [shape=trapezium,orientation=270];
  "244 &" -> "out";
  "239 D8" [shape=box];
  "239 D8" -> "244 &" [label="out"];
  "238 D8" [shape=box];
  "238 D8" -> "239 D8" [label="out"];
  "237 D8" [shape=box];
  "237 D8" -> "238 D8" [label="out"];
  "229 D8" [shape=box];
  "229 D8" -> "237 D8" [label="imout"];
  "227 D8" [shape=box];
  "227 D8" -> "229 D8" [label="imout"];
  "225 D8" [shape=box];
  "225 D8" -> "227 D8" [label="imout"];
  "223 D8" [shape=box];
  "223 D8" -> "225 D8" [label="imout"];
  "219 E8" [shape=box];
  "219 E8" -> "223 D8" [label="imout"];
  "217 E8" [shape=box];
  "217 E8" -> "219 E8" [label="imout"];
  "215 E8" [shape=box];
  "215 E8" -> "217 E8" [label="imout"];
  "213 E8" [shape=box];
  "213 E8" -> "215 E8" [label="imout"];
  "201 D8" [shape=box];
  "201 D8" -> "213 E8" [label="imfilt"];
  "199 D8" [shape=box];
  "199 D8" -> "201 D8" [label="imfilt"];
  "197 D8" [shape=box];
  "197 D8" -> "199 D8" [label="imfilt"];
  "195 D8" [shape=box];
  "195 D8" -> "197 D8" [label="imfilt"];
  "191 E8" [shape=box];
  "191 E8" -> "195 D8" [label="imfilt"];
  "189 E8" [shape=box];
  "189 E8" -> "191 E8" [label="imfilt"];
  "187 E8" [shape=box];
  "187 E8" -> "189 E8" [label="imfilt"];
  "185 E8" [shape=box];
  "185 E8" -> "187 E8" [label="imfilt"];
  "179 &" [shape=trapezium,orientation=270];
  "179 &" -> "185 E8" [label="imand"];
  "176 thr" [shape=parallelogram];
  "176 thr" -> "179 &" [label="imopenth"];
  "177 thr" [shape=parallelogram];
  "177 thr" -> "179 &" [label="imcloseth"];
  "124 D8" [shape=box];
  "124 D8" -> "176 thr" [label="imopen"];
  "122 D8" [shape=box];
  "122 D8" -> "124 D8" [label="imopen"];
  "120 D8" [shape=box];
  "120 D8" -> "122 D8" [label="imopen"];
  "118 D8" [shape=box];
  "118 D8" -> "120 D8" [label="imopen"];
  "116 D8" [shape=box];
  "116 D8" -> "118 D8" [label="imopen"];
  "114 D8" [shape=box];
  "114 D8" -> "116 D8" [label="imopen"];
  "112 D8" [shape=box];
  "112 D8" -> "114 D8" [label="imopen"];
  "110 D8" [shape=box];
  "110 D8" -> "112 D8" [label="imopen"];
  "108 D8" [shape=box];
  "108 D8" -> "110 D8" [label="imopen"];
  "106 D8" [shape=box];
  "106 D8" -> "108 D8" [label="imopen"];
  "104 D8" [shape=box];
  "104 D8" -> "106 D8" [label="imopen"];
  "102 D8" [shape=box];
  "102 D8" -> "104 D8" [label="imopen"];
  "100 D8" [shape=box];
  "100 D8" -> "102 D8" [label="imopen"];
  "98 D8" [shape=box];
  "98 D8" -> "100 D8" [label="imopen"];
  "168 E8" [shape=box];
  "168 E8" -> "177 thr" [label="imclose"];
  "96 D8" [shape=box];
  "96 D8" -> "98 D8" [label="imopen"];
  "166 E8" [shape=box];
  "166 E8" -> "168 E8" [label="imclose"];
  "92 E8" [shape=box];
  "92 E8" -> "96 D8" [label="imopen"];
  "164 E8" [shape=box];
  "164 E8" -> "166 E8" [label="imclose"];
  "90 E8" [shape=box];
  "90 E8" -> "92 E8" [label="imopen"];
  "162 E8" [shape=box];
  "162 E8" -> "164 E8" [label="imclose"];
  "88 E8" [shape=box];
  "88 E8" -> "90 E8" [label="imopen"];
  "160 E8" [shape=box];
  "160 E8" -> "162 E8" [label="imclose"];
  "86 E8" [shape=box];
  "86 E8" -> "88 E8" [label="imopen"];
  "158 E8" [shape=box];
  "158 E8" -> "160 E8" [label="imclose"];
  "84 E8" [shape=box];
  "84 E8" -> "86 E8" [label="imopen"];
  "156 E8" [shape=box];
  "156 E8" -> "158 E8" [label="imclose"];
  "82 E8" [shape=box];
  "82 E8" -> "84 E8" [label="imopen"];
  "154 E8" [shape=box];
  "154 E8" -> "156 E8" [label="imclose"];
  "80 E8" [shape=box];
  "80 E8" -> "82 E8" [label="imopen"];
  "150 D8" [shape=box];
  "150 D8" -> "154 E8" [label="imclose"];
  "78 E8" [shape=box];
  "78 E8" -> "80 E8" [label="imopen"];
  "148 D8" [shape=box];
  "148 D8" -> "150 D8" [label="imclose"];
  "76 E8" [shape=box];
  "76 E8" -> "78 E8" [label="imopen"];
  "146 D8" [shape=box];
  "146 D8" -> "148 D8" [label="imclose"];
  "74 E8" [shape=box];
  "74 E8" -> "76 E8" [label="imopen"];
  "144 D8" [shape=box];
  "144 D8" -> "146 D8" [label="imclose"];
  "72 E8" [shape=box];
  "72 E8" -> "74 E8" [label="imopen"];
  "142 D8" [shape=box];
  "142 D8" -> "144 D8" [label="imclose"];
  "70 E8" [shape=box];
  "70 E8" -> "72 E8" [label="imopen"];
  "140 D8" [shape=box];
  "140 D8" -> "142 D8" [label="imclose"];
  "68 E8" [shape=box];
  "68 E8" -> "70 E8" [label="imopen"];
  "138 D8" [shape=box];
  "138 D8" -> "140 D8" [label="imclose"];
  "66 E8" [shape=box];
  "66 E8" -> "68 E8" [label="imopen"];
  "136 D8" [shape=box];
  "136 D8" -> "138 D8" [label="imclose"];
  "64 E8" [shape=box];
  "64 E8" -> "66 E8" [label="imopen"];
  "in" -> "244 &";
  "in" -> "136 D8";
  "in" -> "64 E8";
}

! acceleration function

#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <terapix.h>
#include <terapix_ucode.h>

/* FREIA terapix helper function for module license_plate_copies
 * 1 input image, 1 output image
 * 70 image operations in dag
 * dag length is 53, dag width is 2
 * cost is 993 cycles per imagelet row
 */
freia_status license_plate_copies_helper_0_0(
  freia_data2d * o0,
  freia_data2d * i0,
  const int32_t * pi2,
  int32_t pi3,
  int32_t pi4,
  int32_t pi5,
  int32_t pi6,
  int32_t pi7,
  int32_t pi8,
  const int32_t * pi9,
  const int32_t * pi10)
{
  // declarations:
  freia_microcode mcode;
  freia_op_param param;
  freia_dynamic_param dyn_param;
  terapix_gram gram;
  int i;
  freia_status ret;
  // operation 0 parameters
  int16_t p_0[9];
  const int32_t x_0 = 0;
  const int32_t y_0 = 0;
  // operation 46 parameters
  int16_t p_46[3];
  const int32_t x_46 = 3;
  const int32_t y_46 = 0;
  // operation 47 parameters
  int16_t p_47[3];
  const int32_t x_47 = 6;
  const int32_t y_47 = 0;
  // operation 49 parameters
  int16_t p_49[9];
  const int32_t x_49 = 9;
  const int32_t y_49 = 0;
  // operation 65 parameters
  int16_t p_65[9];
  const int32_t x_65 = 12;
  const int32_t y_65 = 0;
  terapix_mcu_instr mcu_instr[69];

  // imagelets definitions:
  // - 4 computation imagelets
  // - 1 double buffer imagelets
  int imagelet_size = 204;
  int imagelet_1 = 0;
  int imagelet_2 = 204;
  int imagelet_3 = 408;
  int imagelet_4 = 612;
  int imagelet_5 = 816;

  // body:
  // mcode param
  mcode.raw = (void*) terapix_ucode_array;
  mcode.size = TERAPIX_UCODE_SIZE_T;
  freia_mg_write_microcode(&mcode);

  // subimage operation
  param.size = sizeof(mcu_instr);
  param.raw = (void*) mcu_instr;

  // dyn_param contents  dyn_param.raw = &gram;
  dyn_param.size = sizeof(terapix_gram);
  // 0: E8(1) -> 2
  mcu_instr[0].macrocode.xmin1 = imagelet_1;
  mcu_instr[0].macrocode.ymin1 = 0;
  mcu_instr[0].macrocode.xmin2 = imagelet_2;
  mcu_instr[0].macrocode.ymin2 = 0;
  // copy of operation 0 parameters
  for(i=0; i<9; i++)
    p_0[i] = pi2[i];
  gram.xoffset = x_0;
  gram.yoffset = y_0;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_0;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_instr[0].macrocode.xmin3 = x_0;
  mcu_instr[0].macrocode.ymin3 = y_0;
  mcu_instr[0].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[0].macrocode.iter2 = imagelet_size;
  mcu_instr[0].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 1: D8(1) -> 3
  mcu_instr[1].macrocode.xmin1 = imagelet_1;
  mcu_instr[1].macrocode.ymin1 = 0;
  mcu_instr[1].macrocode.xmin2 = imagelet_3;
  mcu_instr[1].macrocode.ymin2 = 0;
  mcu_instr[1].macrocode.xmin3 = x_0;
  mcu_instr[1].macrocode.ymin3 = y_0;
  mcu_instr[1].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[1].macrocode.iter2 = imagelet_size;
  mcu_instr[1].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 2: E8(2) -> 4
  mcu_instr[2].macrocode.xmin1 = imagelet_2;
  mcu_instr[2].macrocode.ymin1 = 0;
  mcu_instr[2].macrocode.xmin2 = imagelet_4;
  mcu_instr[2].macrocode.ymin2 = 0;
  mcu_instr[2].macrocode.xmin3 = x_0;
  mcu_instr[2].macrocode.ymin3 = y_0;
  mcu_instr[2].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[2].macrocode.iter2 = imagelet_size;
  mcu_instr[2].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 3: D8(3) -> 2
  mcu_instr[3].macrocode.xmin1 = imagelet_3;
  mcu_instr[3].macrocode.ymin1 = 0;
  mcu_instr[3].macrocode.xmin2 = imagelet_2;
  mcu_instr[3].macrocode.ymin2 = 0;
  mcu_instr[3].macrocode.xmin3 = x_0;
  mcu_instr[3].macrocode.ymin3 = y_0;
  mcu_instr[3].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[3].macrocode.iter2 = imagelet_size;
  mcu_instr[3].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 4: E8(4) -> 3
  mcu_instr[4].macrocode.xmin1 = imagelet_4;
  mcu_instr[4].macrocode.ymin1 = 0;
  mcu_instr[4].macrocode.xmin2 = imagelet_3;
  mcu_instr[4].macrocode.ymin2 = 0;
  mcu_instr[4].macrocode.xmin3 = x_0;
  mcu_instr[4].macrocode.ymin3 = y_0;
  mcu_instr[4].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[4].macrocode.iter2 = imagelet_size;
  mcu_instr[4].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 5: D8(2) -> 4
  mcu_instr[5].macrocode.xmin1 = imagelet_2;
  mcu_instr[5].macrocode.ymin1 = 0;
  mcu_instr[5].macrocode.xmin2 = imagelet_4;
  mcu_instr[5].macrocode.ymin2 = 0;
  mcu_instr[5].macrocode.xmin3 = x_0;
  mcu_instr[5].macrocode.ymin3 = y_0;
  mcu_instr[5].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[5].macrocode.iter2 = imagelet_size;
  mcu_instr[5].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 6: E8(3) -> 2
  mcu_instr[6].macrocode.xmin1 = imagelet_3;
  mcu_instr[6].macrocode.ymin1 = 0;
  mcu_instr[6].macrocode.xmin2 = imagelet_2;
  mcu_instr[6].macrocode.ymin2 = 0;
  mcu_instr[6].macrocode.xmin3 = x_0;
  mcu_instr[6].macrocode.ymin3 = y_0;
  mcu_instr[6].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[6].macrocode.iter2 = imagelet_size;
  mcu_instr[6].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 7: D8(4) -> 3
  mcu_instr[7].macrocode.xmin1 = imagelet_4;
  mcu_instr[7].macrocode.ymin1 = 0;
  mcu_instr[7].macrocode.xmin2 = imagelet_3;
  mcu_instr[7].macrocode.ymin2 = 0;
  mcu_instr[7].macrocode.xmin3 = x_0;
  mcu_instr[7].macrocode.ymin3 = y_0;
  mcu_instr[7].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[7].macrocode.iter2 = imagelet_size;
  mcu_instr[7].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 8: E8(2) -> 4
  mcu_instr[8].macrocode.xmin1 = imagelet_2;
  mcu_instr[8].macrocode.ymin1 = 0;
  mcu_instr[8].macrocode.xmin2 = imagelet_4;
  mcu_instr[8].macrocode.ymin2 = 0;
  mcu_instr[8].macrocode.xmin3 = x_0;
  mcu_instr[8].macrocode.ymin3 = y_0;
  mcu_instr[8].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[8].macrocode.iter2 = imagelet_size;
  mcu_instr[8].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 9: D8(3) -> 2
  mcu_instr[9].macrocode.xmin1 = imagelet_3;
  mcu_instr[9].macrocode.ymin1 = 0;
  mcu_instr[9].macrocode.xmin2 = imagelet_2;
  mcu_instr[9].macrocode.ymin2 = 0;
  mcu_instr[9].macrocode.xmin3 = x_0;
  mcu_instr[9].macrocode.ymin3 = y_0;
  mcu_instr[9].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[9].macrocode.iter2 = imagelet_size;
  mcu_instr[9].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 10: E8(4) -> 3
  mcu_instr[10].macrocode.xmin1 = imagelet_4;
  mcu_instr[10].macrocode.ymin1 = 0;
  mcu_instr[10].macrocode.xmin2 = imagelet_3;
  mcu_instr[10].macrocode.ymin2 = 0;
  mcu_instr[10].macrocode.xmin3 = x_0;
  mcu_instr[10].macrocode.ymin3 = y_0;
  mcu_instr[10].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[10].macrocode.iter2 = imagelet_size;
  mcu_instr[10].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 11: D8(2) -> 4
  mcu_instr[11].macrocode.xmin1 = imagelet_2;
  mcu_instr[11].macrocode.ymin1 = 0;
  mcu_instr[11].macrocode.xmin2 = imagelet_4;
  mcu_instr[11].macrocode.ymin2 = 0;
  mcu_instr[11].macrocode.xmin3 = x_0;
  mcu_instr[11].macrocode.ymin3 = y_0;
  mcu_instr[11].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[11].macrocode.iter2 = imagelet_size;
  mcu_instr[11].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 12: E8(3) -> 2
  mcu_instr[12].macrocode.xmin1 = imagelet_3;
  mcu_instr[12].macrocode.ymin1 = 0;
  mcu_instr[12].macrocode.xmin2 = imagelet_2;
  mcu_instr[12].macrocode.ymin2 = 0;
  mcu_instr[12].macrocode.xmin3 = x_0;
  mcu_instr[12].macrocode.ymin3 = y_0;
  mcu_instr[12].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[12].macrocode.iter2 = imagelet_size;
  mcu_instr[12].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 13: D8(4) -> 3
  mcu_instr[13].macrocode.xmin1 = imagelet_4;
  mcu_instr[13].macrocode.ymin1 = 0;
  mcu_instr[13].macrocode.xmin2 = imagelet_3;
  mcu_instr[13].macrocode.ymin2 = 0;
  mcu_instr[13].macrocode.xmin3 = x_0;
  mcu_instr[13].macrocode.ymin3 = y_0;
  mcu_instr[13].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[13].macrocode.iter2 = imagelet_size;
  mcu_instr[13].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 14: E8(2) -> 4
  mcu_instr[14].macrocode.xmin1 = imagelet_2;
  mcu_instr[14].macrocode.ymin1 = 0;
  mcu_instr[14].macrocode.xmin2 = imagelet_4;
  mcu_instr[14].macrocode.ymin2 = 0;
  mcu_instr[14].macrocode.xmin3 = x_0;
  mcu_instr[14].macrocode.ymin3 = y_0;
  mcu_instr[14].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[14].macrocode.iter2 = imagelet_size;
  mcu_instr[14].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 15: D8(3) -> 2
  mcu_instr[15].macrocode.xmin1 = imagelet_3;
  mcu_instr[15].macrocode.ymin1 = 0;
  mcu_instr[15].macrocode.xmin2 = imagelet_2;
  mcu_instr[15].macrocode.ymin2 = 0;
  mcu_instr[15].macrocode.xmin3 = x_0;
  mcu_instr[15].macrocode.ymin3 = y_0;
  mcu_instr[15].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[15].macrocode.iter2 = imagelet_size;
  mcu_instr[15].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 16: E8(4) -> 3
  mcu_instr[16].macrocode.xmin1 = imagelet_4;
  mcu_instr[16].macrocode.ymin1 = 0;
  mcu_instr[16].macrocode.xmin2 = imagelet_3;
  mcu_instr[16].macrocode.ymin2 = 0;
  mcu_instr[16].macrocode.xmin3 = x_0;
  mcu_instr[16].macrocode.ymin3 = y_0;
  mcu_instr[16].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[16].macrocode.iter2 = imagelet_size;
  mcu_instr[16].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 17: E8(2) -> 4
  mcu_instr[17].macrocode.xmin1 = imagelet_2;
  mcu_instr[17].macrocode.ymin1 = 0;
  mcu_instr[17].macrocode.xmin2 = imagelet_4;
  mcu_instr[17].macrocode.ymin2 = 0;
  mcu_instr[17].macrocode.xmin3 = x_0;
  mcu_instr[17].macrocode.ymin3 = y_0;
  mcu_instr[17].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[17].macrocode.iter2 = imagelet_size;
  mcu_instr[17].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 18: E8(3) -> 2
  mcu_instr[18].macrocode.xmin1 = imagelet_3;
  mcu_instr[18].macrocode.ymin1 = 0;
  mcu_instr[18].macrocode.xmin2 = imagelet_2;
  mcu_instr[18].macrocode.ymin2 = 0;
  mcu_instr[18].macrocode.xmin3 = x_0;
  mcu_instr[18].macrocode.ymin3 = y_0;
  mcu_instr[18].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[18].macrocode.iter2 = imagelet_size;
  mcu_instr[18].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 19: E8(4) -> 3
  mcu_instr[19].macrocode.xmin1 = imagelet_4;
  mcu_instr[19].macrocode.ymin1 = 0;
  mcu_instr[19].macrocode.xmin2 = imagelet_3;
  mcu_instr[19].macrocode.ymin2 = 0;
  mcu_instr[19].macrocode.xmin3 = x_0;
  mcu_instr[19].macrocode.ymin3 = y_0;
  mcu_instr[19].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[19].macrocode.iter2 = imagelet_size;
  mcu_instr[19].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 20: E8(2) -> 4
  mcu_instr[20].macrocode.xmin1 = imagelet_2;
  mcu_instr[20].macrocode.ymin1 = 0;
  mcu_instr[20].macrocode.xmin2 = imagelet_4;
  mcu_instr[20].macrocode.ymin2 = 0;
  mcu_instr[20].macrocode.xmin3 = x_0;
  mcu_instr[20].macrocode.ymin3 = y_0;
  mcu_instr[20].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[20].macrocode.iter2 = imagelet_size;
  mcu_instr[20].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 21: E8(3) -> 2
  mcu_instr[21].macrocode.xmin1 = imagelet_3;
  mcu_instr[21].macrocode.ymin1 = 0;
  mcu_instr[21].macrocode.xmin2 = imagelet_2;
  mcu_instr[21].macrocode.ymin2 = 0;
  mcu_instr[21].macrocode.xmin3 = x_0;
  mcu_instr[21].macrocode.ymin3 = y_0;
  mcu_instr[21].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[21].macrocode.iter2 = imagelet_size;
  mcu_instr[21].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 22: E8(4) -> 3
  mcu_instr[22].macrocode.xmin1 = imagelet_4;
  mcu_instr[22].macrocode.ymin1 = 0;
  mcu_instr[22].macrocode.xmin2 = imagelet_3;
  mcu_instr[22].macrocode.ymin2 = 0;
  mcu_instr[22].macrocode.xmin3 = x_0;
  mcu_instr[22].macrocode.ymin3 = y_0;
  mcu_instr[22].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[22].macrocode.iter2 = imagelet_size;
  mcu_instr[22].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 23: E8(2) -> 4
  mcu_instr[23].macrocode.xmin1 = imagelet_2;
  mcu_instr[23].macrocode.ymin1 = 0;
  mcu_instr[23].macrocode.xmin2 = imagelet_4;
  mcu_instr[23].macrocode.ymin2 = 0;
  mcu_instr[23].macrocode.xmin3 = x_0;
  mcu_instr[23].macrocode.ymin3 = y_0;
  mcu_instr[23].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[23].macrocode.iter2 = imagelet_size;
  mcu_instr[23].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 24: E8(3) -> 2
  mcu_instr[24].macrocode.xmin1 = imagelet_3;
  mcu_instr[24].macrocode.ymin1 = 0;
  mcu_instr[24].macrocode.xmin2 = imagelet_2;
  mcu_instr[24].macrocode.ymin2 = 0;
  mcu_instr[24].macrocode.xmin3 = x_0;
  mcu_instr[24].macrocode.ymin3 = y_0;
  mcu_instr[24].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[24].macrocode.iter2 = imagelet_size;
  mcu_instr[24].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 25: E8(4) -> 3
  mcu_instr[25].macrocode.xmin1 = imagelet_4;
  mcu_instr[25].macrocode.ymin1 = 0;
  mcu_instr[25].macrocode.xmin2 = imagelet_3;
  mcu_instr[25].macrocode.ymin2 = 0;
  mcu_instr[25].macrocode.xmin3 = x_0;
  mcu_instr[25].macrocode.ymin3 = y_0;
  mcu_instr[25].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[25].macrocode.iter2 = imagelet_size;
  mcu_instr[25].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 26: E8(2) -> 4
  mcu_instr[26].macrocode.xmin1 = imagelet_2;
  mcu_instr[26].macrocode.ymin1 = 0;
  mcu_instr[26].macrocode.xmin2 = imagelet_4;
  mcu_instr[26].macrocode.ymin2 = 0;
  mcu_instr[26].macrocode.xmin3 = x_0;
  mcu_instr[26].macrocode.ymin3 = y_0;
  mcu_instr[26].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[26].macrocode.iter2 = imagelet_size;
  mcu_instr[26].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 27: E8(3) -> 2
  mcu_instr[27].macrocode.xmin1 = imagelet_3;
  mcu_instr[27].macrocode.ymin1 = 0;
  mcu_instr[27].macrocode.xmin2 = imagelet_2;
  mcu_instr[27].macrocode.ymin2 = 0;
  mcu_instr[27].macrocode.xmin3 = x_0;
  mcu_instr[27].macrocode.ymin3 = y_0;
  mcu_instr[27].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[27].macrocode.iter2 = imagelet_size;
  mcu_instr[27].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 28: E8(4) -> 3
  mcu_instr[28].macrocode.xmin1 = imagelet_4;
  mcu_instr[28].macrocode.ymin1 = 0;
  mcu_instr[28].macrocode.xmin2 = imagelet_3;
  mcu_instr[28].macrocode.ymin2 = 0;
  mcu_instr[28].macrocode.xmin3 = x_0;
  mcu_instr[28].macrocode.ymin3 = y_0;
  mcu_instr[28].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[28].macrocode.iter2 = imagelet_size;
  mcu_instr[28].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 29: E8(2) -> 4
  mcu_instr[29].macrocode.xmin1 = imagelet_2;
  mcu_instr[29].macrocode.ymin1 = 0;
  mcu_instr[29].macrocode.xmin2 = imagelet_4;
  mcu_instr[29].macrocode.ymin2 = 0;
  mcu_instr[29].macrocode.xmin3 = x_0;
  mcu_instr[29].macrocode.ymin3 = y_0;
  mcu_instr[29].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[29].macrocode.iter2 = imagelet_size;
  mcu_instr[29].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 30: D8(3) -> 2
  mcu_instr[30].macrocode.xmin1 = imagelet_3;
  mcu_instr[30].macrocode.ymin1 = 0;
  mcu_instr[30].macrocode.xmin2 = imagelet_2;
  mcu_instr[30].macrocode.ymin2 = 0;
  mcu_instr[30].macrocode.xmin3 = x_0;
  mcu_instr[30].macrocode.ymin3 = y_0;
  mcu_instr[30].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[30].macrocode.iter2 = imagelet_size;
  mcu_instr[30].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 31: E8(4) -> 3
  mcu_instr[31].macrocode.xmin1 = imagelet_4;
  mcu_instr[31].macrocode.ymin1 = 0;
  mcu_instr[31].macrocode.xmin2 = imagelet_3;
  mcu_instr[31].macrocode.ymin2 = 0;
  mcu_instr[31].macrocode.xmin3 = x_0;
  mcu_instr[31].macrocode.ymin3 = y_0;
  mcu_instr[31].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[31].macrocode.iter2 = imagelet_size;
  mcu_instr[31].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 32: D8(2) -> 4
  mcu_instr[32].macrocode.xmin1 = imagelet_2;
  mcu_instr[32].macrocode.ymin1 = 0;
  mcu_instr[32].macrocode.xmin2 = imagelet_4;
  mcu_instr[32].macrocode.ymin2 = 0;
  mcu_instr[32].macrocode.xmin3 = x_0;
  mcu_instr[32].macrocode.ymin3 = y_0;
  mcu_instr[32].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[32].macrocode.iter2 = imagelet_size;
  mcu_instr[32].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 33: D8(4) -> 2
  mcu_instr[33].macrocode.xmin1 = imagelet_4;
  mcu_instr[33].macrocode.ymin1 = 0;
  mcu_instr[33].macrocode.xmin2 = imagelet_2;
  mcu_instr[33].macrocode.ymin2 = 0;
  mcu_instr[33].macrocode.xmin3 = x_0;
  mcu_instr[33].macrocode.ymin3 = y_0;
  mcu_instr[33].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[33].macrocode.iter2 = imagelet_size;
  mcu_instr[33].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 34: D8(2) -> 4
  mcu_instr[34].macrocode.xmin1 = imagelet_2;
  mcu_instr[34].macrocode.ymin1 = 0;
  mcu_instr[34].macrocode.xmin2 = imagelet_4;
  mcu_instr[34].macrocode.ymin2 = 0;
  mcu_instr[34].macrocode.xmin3 = x_0;
  mcu_instr[34].macrocode.ymin3 = y_0;
  mcu_instr[34].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[34].macrocode.iter2 = imagelet_size;
  mcu_instr[34].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 35: D8(4) -> 2
  mcu_instr[35].macrocode.xmin1 = imagelet_4;
  mcu_instr[35].macrocode.ymin1 = 0;
  mcu_instr[35].macrocode.xmin2 = imagelet_2;
  mcu_instr[35].macrocode.ymin2 = 0;
  mcu_instr[35].macrocode.xmin3 = x_0;
  mcu_instr[35].macrocode.ymin3 = y_0;
  mcu_instr[35].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[35].macrocode.iter2 = imagelet_size;
  mcu_instr[35].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 36: D8(2) -> 4
  mcu_instr[36].macrocode.xmin1 = imagelet_2;
  mcu_instr[36].macrocode.ymin1 = 0;
  mcu_instr[36].macrocode.xmin2 = imagelet_4;
  mcu_instr[36].macrocode.ymin2 = 0;
  mcu_instr[36].macrocode.xmin3 = x_0;
  mcu_instr[36].macrocode.ymin3 = y_0;
  mcu_instr[36].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[36].macrocode.iter2 = imagelet_size;
  mcu_instr[36].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 37: D8(4) -> 2
  mcu_instr[37].macrocode.xmin1 = imagelet_4;
  mcu_instr[37].macrocode.ymin1 = 0;
  mcu_instr[37].macrocode.xmin2 = imagelet_2;
  mcu_instr[37].macrocode.ymin2 = 0;
  mcu_instr[37].macrocode.xmin3 = x_0;
  mcu_instr[37].macrocode.ymin3 = y_0;
  mcu_instr[37].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[37].macrocode.iter2 = imagelet_size;
  mcu_instr[37].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 38: D8(2) -> 4
  mcu_instr[38].macrocode.xmin1 = imagelet_2;
  mcu_instr[38].macrocode.ymin1 = 0;
  mcu_instr[38].macrocode.xmin2 = imagelet_4;
  mcu_instr[38].macrocode.ymin2 = 0;
  mcu_instr[38].macrocode.xmin3 = x_0;
  mcu_instr[38].macrocode.ymin3 = y_0;
  mcu_instr[38].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[38].macrocode.iter2 = imagelet_size;
  mcu_instr[38].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 39: D8(4) -> 2
  mcu_instr[39].macrocode.xmin1 = imagelet_4;
  mcu_instr[39].macrocode.ymin1 = 0;
  mcu_instr[39].macrocode.xmin2 = imagelet_2;
  mcu_instr[39].macrocode.ymin2 = 0;
  mcu_instr[39].macrocode.xmin3 = x_0;
  mcu_instr[39].macrocode.ymin3 = y_0;
  mcu_instr[39].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[39].macrocode.iter2 = imagelet_size;
  mcu_instr[39].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 40: D8(2) -> 4
  mcu_instr[40].macrocode.xmin1 = imagelet_2;
  mcu_instr[40].macrocode.ymin1 = 0;
  mcu_instr[40].macrocode.xmin2 = imagelet_4;
  mcu_instr[40].macrocode.ymin2 = 0;
  mcu_instr[40].macrocode.xmin3 = x_0;
  mcu_instr[40].macrocode.ymin3 = y_0;
  mcu_instr[40].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[40].macrocode.iter2 = imagelet_size;
  mcu_instr[40].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 41: D8(4) -> 2
  mcu_instr[41].macrocode.xmin1 = imagelet_4;
  mcu_instr[41].macrocode.ymin1 = 0;
  mcu_instr[41].macrocode.xmin2 = imagelet_2;
  mcu_instr[41].macrocode.ymin2 = 0;
  mcu_instr[41].macrocode.xmin3 = x_0;
  mcu_instr[41].macrocode.ymin3 = y_0;
  mcu_instr[41].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[41].macrocode.iter2 = imagelet_size;
  mcu_instr[41].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 42: D8(2) -> 4
  mcu_instr[42].macrocode.xmin1 = imagelet_2;
  mcu_instr[42].macrocode.ymin1 = 0;
  mcu_instr[42].macrocode.xmin2 = imagelet_4;
  mcu_instr[42].macrocode.ymin2 = 0;
  mcu_instr[42].macrocode.xmin3 = x_0;
  mcu_instr[42].macrocode.ymin3 = y_0;
  mcu_instr[42].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[42].macrocode.iter2 = imagelet_size;
  mcu_instr[42].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 43: D8(4) -> 2
  mcu_instr[43].macrocode.xmin1 = imagelet_4;
  mcu_instr[43].macrocode.ymin1 = 0;
  mcu_instr[43].macrocode.xmin2 = imagelet_2;
  mcu_instr[43].macrocode.ymin2 = 0;
  mcu_instr[43].macrocode.xmin3 = x_0;
  mcu_instr[43].macrocode.ymin3 = y_0;
  mcu_instr[43].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[43].macrocode.iter2 = imagelet_size;
  mcu_instr[43].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 44: D8(2) -> 4
  mcu_instr[44].macrocode.xmin1 = imagelet_2;
  mcu_instr[44].macrocode.ymin1 = 0;
  mcu_instr[44].macrocode.xmin2 = imagelet_4;
  mcu_instr[44].macrocode.ymin2 = 0;
  mcu_instr[44].macrocode.xmin3 = x_0;
  mcu_instr[44].macrocode.ymin3 = y_0;
  mcu_instr[44].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[44].macrocode.iter2 = imagelet_size;
  mcu_instr[44].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 45: D8(4) -> 2
  mcu_instr[45].macrocode.xmin1 = imagelet_4;
  mcu_instr[45].macrocode.ymin1 = 0;
  mcu_instr[45].macrocode.xmin2 = imagelet_2;
  mcu_instr[45].macrocode.ymin2 = 0;
  mcu_instr[45].macrocode.xmin3 = x_0;
  mcu_instr[45].macrocode.ymin3 = y_0;
  mcu_instr[45].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[45].macrocode.iter2 = imagelet_size;
  mcu_instr[45].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 46: thr(3) -> 4
  mcu_instr[46].macrocode.xmin1 = imagelet_3;
  mcu_instr[46].macrocode.ymin1 = 0;
  mcu_instr[46].macrocode.xmin2 = imagelet_4;
  mcu_instr[46].macrocode.ymin2 = 0;
  // copy of operation 46 parameters
  p_46[0] = pi3;
  p_46[1] = pi4;
  p_46[2] = pi5;
  gram.xoffset = x_46;
  gram.yoffset = y_46;
  gram.width = 3;
  gram.height = 1;
  gram.params = p_46;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_instr[46].macrocode.xmin3 = x_46;
  mcu_instr[46].macrocode.ymin3 = y_46;
  mcu_instr[46].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[46].macrocode.iter2 = imagelet_size;
  mcu_instr[46].macrocode.addrStart = TERAPIX_UCODE_THRESHOLD;
  // 47: thr(2) -> 3
  mcu_instr[47].macrocode.xmin1 = imagelet_2;
  mcu_instr[47].macrocode.ymin1 = 0;
  mcu_instr[47].macrocode.xmin2 = imagelet_3;
  mcu_instr[47].macrocode.ymin2 = 0;
  // copy of operation 47 parameters
  p_47[0] = pi6;
  p_47[1] = pi7;
  p_47[2] = pi8;
  gram.xoffset = x_47;
  gram.yoffset = y_47;
  gram.width = 3;
  gram.height = 1;
  gram.params = p_47;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_instr[47].macrocode.xmin3 = x_47;
  mcu_instr[47].macrocode.ymin3 = y_47;
  mcu_instr[47].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[47].macrocode.iter2 = imagelet_size;
  mcu_instr[47].macrocode.addrStart = TERAPIX_UCODE_THRESHOLD;
  // 48: &(3,4) -> 4
  mcu_instr[48].macrocode.xmin1 = imagelet_3;
  mcu_instr[48].macrocode.ymin1 = 0;
  mcu_instr[48].macrocode.xmin2 = imagelet_4;
  mcu_instr[48].macrocode.ymin2 = 0;
  mcu_instr[48].macrocode.xmin3 = imagelet_4;
  mcu_instr[48].macrocode.ymin3 = 0;
  mcu_instr[48].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[48].macrocode.iter2 = imagelet_size;
  mcu_instr[48].macrocode.addrStart = TERAPIX_UCODE_AND;
  // 49: E8(4) -> 3
  mcu_instr[49].macrocode.xmin1 = imagelet_4;
  mcu_instr[49].macrocode.ymin1 = 0;
  mcu_instr[49].macrocode.xmin2 = imagelet_3;
  mcu_instr[49].macrocode.ymin2 = 0;
  // copy of operation 49 parameters
  for(i=0; i<9; i++)
    p_49[i] = pi9[i];
  gram.xoffset = x_49;
  gram.yoffset = y_49;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_49;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_instr[49].macrocode.xmin3 = x_49;
  mcu_instr[49].macrocode.ymin3 = y_49;
  mcu_instr[49].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[49].macrocode.iter2 = imagelet_size;
  mcu_instr[49].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 50: E8(3) -> 4
  mcu_instr[50].macrocode.xmin1 = imagelet_3;
  mcu_instr[50].macrocode.ymin1 = 0;
  mcu_instr[50].macrocode.xmin2 = imagelet_4;
  mcu_instr[50].macrocode.ymin2 = 0;
  mcu_instr[50].macrocode.xmin3 = x_49;
  mcu_instr[50].macrocode.ymin3 = y_49;
  mcu_instr[50].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[50].macrocode.iter2 = imagelet_size;
  mcu_instr[50].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 51: E8(4) -> 3
  mcu_instr[51].macrocode.xmin1 = imagelet_4;
  mcu_instr[51].macrocode.ymin1 = 0;
  mcu_instr[51].macrocode.xmin2 = imagelet_3;
  mcu_instr[51].macrocode.ymin2 = 0;
  mcu_instr[51].macrocode.xmin3 = x_49;
  mcu_instr[51].macrocode.ymin3 = y_49;
  mcu_instr[51].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[51].macrocode.iter2 = imagelet_size;
  mcu_instr[51].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 52: E8(3) -> 4
  mcu_instr[52].macrocode.xmin1 = imagelet_3;
  mcu_instr[52].macrocode.ymin1 = 0;
  mcu_instr[52].macrocode.xmin2 = imagelet_4;
  mcu_instr[52].macrocode.ymin2 = 0;
  mcu_instr[52].macrocode.xmin3 = x_49;
  mcu_instr[52].macrocode.ymin3 = y_49;
  mcu_instr[52].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[52].macrocode.iter2 = imagelet_size;
  mcu_instr[52].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 53: D8(4) -> 3
  mcu_instr[53].macrocode.xmin1 = imagelet_4;
  mcu_instr[53].macrocode.ymin1 = 0;
  mcu_instr[53].macrocode.xmin2 = imagelet_3;
  mcu_instr[53].macrocode.ymin2 = 0;
  mcu_instr[53].macrocode.xmin3 = x_49;
  mcu_instr[53].macrocode.ymin3 = y_49;
  mcu_instr[53].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[53].macrocode.iter2 = imagelet_size;
  mcu_instr[53].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 54: D8(3) -> 4
  mcu_instr[54].macrocode.xmin1 = imagelet_3;
  mcu_instr[54].macrocode.ymin1 = 0;
  mcu_instr[54].macrocode.xmin2 = imagelet_4;
  mcu_instr[54].macrocode.ymin2 = 0;
  mcu_instr[54].macrocode.xmin3 = x_49;
  mcu_instr[54].macrocode.ymin3 = y_49;
  mcu_instr[54].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[54].macrocode.iter2 = imagelet_size;
  mcu_instr[54].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 55: D8(4) -> 3
  mcu_instr[55].macrocode.xmin1 = imagelet_4;
  mcu_instr[55].macrocode.ymin1 = 0;
  mcu_instr[55].macrocode.xmin2 = imagelet_3;
  mcu_instr[55].macrocode.ymin2 = 0;
  mcu_instr[55].macrocode.xmin3 = x_49;
  mcu_instr[55].macrocode.ymin3 = y_49;
  mcu_instr[55].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[55].macrocode.iter2 = imagelet_size;
  mcu_instr[55].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 56: D8(3) -> 4
  mcu_instr[56].macrocode.xmin1 = imagelet_3;
  mcu_instr[56].macrocode.ymin1 = 0;
  mcu_instr[56].macrocode.xmin2 = imagelet_4;
  mcu_instr[56].macrocode.ymin2 = 0;
  mcu_instr[56].macrocode.xmin3 = x_49;
  mcu_instr[56].macrocode.ymin3 = y_49;
  mcu_instr[56].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[56].macrocode.iter2 = imagelet_size;
  mcu_instr[56].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 57: E8(4) -> 3
  mcu_instr[57].macrocode.xmin1 = imagelet_4;
  mcu_instr[57].macrocode.ymin1 = 0;
  mcu_instr[57].macrocode.xmin2 = imagelet_3;
  mcu_instr[57].macrocode.ymin2 = 0;
  mcu_instr[57].macrocode.xmin3 = x_0;
  mcu_instr[57].macrocode.ymin3 = y_0;
  mcu_instr[57].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[57].macrocode.iter2 = imagelet_size;
  mcu_instr[57].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 58: E8(3) -> 4
  mcu_instr[58].macrocode.xmin1 = imagelet_3;
  mcu_instr[58].macrocode.ymin1 = 0;
  mcu_instr[58].macrocode.xmin2 = imagelet_4;
  mcu_instr[58].macrocode.ymin2 = 0;
  mcu_instr[58].macrocode.xmin3 = x_0;
  mcu_instr[58].macrocode.ymin3 = y_0;
  mcu_instr[58].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[58].macrocode.iter2 = imagelet_size;
  mcu_instr[58].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 59: E8(4) -> 3
  mcu_instr[59].macrocode.xmin1 = imagelet_4;
  mcu_instr[59].macrocode.ymin1 = 0;
  mcu_instr[59].macrocode.xmin2 = imagelet_3;
  mcu_instr[59].macrocode.ymin2 = 0;
  mcu_instr[59].macrocode.xmin3 = x_0;
  mcu_instr[59].macrocode.ymin3 = y_0;
  mcu_instr[59].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[59].macrocode.iter2 = imagelet_size;
  mcu_instr[59].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 60: E8(3) -> 4
  mcu_instr[60].macrocode.xmin1 = imagelet_3;
  mcu_instr[60].macrocode.ymin1 = 0;
  mcu_instr[60].macrocode.xmin2 = imagelet_4;
  mcu_instr[60].macrocode.ymin2 = 0;
  mcu_instr[60].macrocode.xmin3 = x_0;
  mcu_instr[60].macrocode.ymin3 = y_0;
  mcu_instr[60].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[60].macrocode.iter2 = imagelet_size;
  mcu_instr[60].macrocode.addrStart = TERAPIX_UCODE_ERODE_3_3;
  // 61: D8(4) -> 3
  mcu_instr[61].macrocode.xmin1 = imagelet_4;
  mcu_instr[61].macrocode.ymin1 = 0;
  mcu_instr[61].macrocode.xmin2 = imagelet_3;
  mcu_instr[61].macrocode.ymin2 = 0;
  mcu_instr[61].macrocode.xmin3 = x_0;
  mcu_instr[61].macrocode.ymin3 = y_0;
  mcu_instr[61].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[61].macrocode.iter2 = imagelet_size;
  mcu_instr[61].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 62: D8(3) -> 4
  mcu_instr[62].macrocode.xmin1 = imagelet_3;
  mcu_instr[62].macrocode.ymin1 = 0;
  mcu_instr[62].macrocode.xmin2 = imagelet_4;
  mcu_instr[62].macrocode.ymin2 = 0;
  mcu_instr[62].macrocode.xmin3 = x_0;
  mcu_instr[62].macrocode.ymin3 = y_0;
  mcu_instr[62].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[62].macrocode.iter2 = imagelet_size;
  mcu_instr[62].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 63: D8(4) -> 3
  mcu_instr[63].macrocode.xmin1 = imagelet_4;
  mcu_instr[63].macrocode.ymin1 = 0;
  mcu_instr[63].macrocode.xmin2 = imagelet_3;
  mcu_instr[63].macrocode.ymin2 = 0;
  mcu_instr[63].macrocode.xmin3 = x_0;
  mcu_instr[63].macrocode.ymin3 = y_0;
  mcu_instr[63].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[63].macrocode.iter2 = imagelet_size;
  mcu_instr[63].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 64: D8(3) -> 4
  mcu_instr[64].macrocode.xmin1 = imagelet_3;
  mcu_instr[64].macrocode.ymin1 = 0;
  mcu_instr[64].macrocode.xmin2 = imagelet_4;
  mcu_instr[64].macrocode.ymin2 = 0;
  mcu_instr[64].macrocode.xmin3 = x_0;
  mcu_instr[64].macrocode.ymin3 = y_0;
  mcu_instr[64].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[64].macrocode.iter2 = imagelet_size;
  mcu_instr[64].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 65: D8(4) -> 3
  mcu_instr[65].macrocode.xmin1 = imagelet_4;
  mcu_instr[65].macrocode.ymin1 = 0;
  mcu_instr[65].macrocode.xmin2 = imagelet_3;
  mcu_instr[65].macrocode.ymin2 = 0;
  // copy of operation 65 parameters
  for(i=0; i<9; i++)
    p_65[i] = pi10[i];
  gram.xoffset = x_65;
  gram.yoffset = y_65;
  gram.width = 3;
  gram.height = 3;
  gram.params = p_65;
  freia_mg_write_dynamic_param(&dyn_param);
  mcu_instr[65].macrocode.xmin3 = x_65;
  mcu_instr[65].macrocode.ymin3 = y_65;
  mcu_instr[65].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[65].macrocode.iter2 = imagelet_size;
  mcu_instr[65].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 66: D8(3) -> 4
  mcu_instr[66].macrocode.xmin1 = imagelet_3;
  mcu_instr[66].macrocode.ymin1 = 0;
  mcu_instr[66].macrocode.xmin2 = imagelet_4;
  mcu_instr[66].macrocode.ymin2 = 0;
  mcu_instr[66].macrocode.xmin3 = x_65;
  mcu_instr[66].macrocode.ymin3 = y_65;
  mcu_instr[66].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[66].macrocode.iter2 = imagelet_size;
  mcu_instr[66].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 67: D8(4) -> 3
  mcu_instr[67].macrocode.xmin1 = imagelet_4;
  mcu_instr[67].macrocode.ymin1 = 0;
  mcu_instr[67].macrocode.xmin2 = imagelet_3;
  mcu_instr[67].macrocode.ymin2 = 0;
  mcu_instr[67].macrocode.xmin3 = x_65;
  mcu_instr[67].macrocode.ymin3 = y_65;
  mcu_instr[67].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[67].macrocode.iter2 = imagelet_size;
  mcu_instr[67].macrocode.addrStart = TERAPIX_UCODE_DILATE_3_3;
  // 68: &(3,1) -> 1
  mcu_instr[68].macrocode.xmin1 = imagelet_3;
  mcu_instr[68].macrocode.ymin1 = 0;
  mcu_instr[68].macrocode.xmin2 = imagelet_1;
  mcu_instr[68].macrocode.ymin2 = 0;
  mcu_instr[68].macrocode.xmin3 = imagelet_1;
  mcu_instr[68].macrocode.ymin3 = 0;
  mcu_instr[68].macrocode.iter1 = TERAPIX_PE_NUMBER;
  mcu_instr[68].macrocode.iter2 = imagelet_size;
  mcu_instr[68].macrocode.addrStart = TERAPIX_UCODE_AND;

  // inputs:
  // - imagelet 1 is i0 for in

  // outputs:
  // - imagelet 1 is o0 for out

  // double buffer management:
  // - buffer 1/5

  // output imagelet erosion:
  //   north: 11
  //   south: 11
  //    west: 41
  //    east: 41

  ret = freia_cg_template_process_1i_1o(&param, o0, i0);


  return ret;
}


! updated function

int license_plate_copies(void)
{
   freia_dataio fdin;                                                   /*0010*/
   freia_dataio fdout;                                                  /*0011*/

   freia_data2d *in;                                                    /*0013*/
   freia_data2d *out;                                                   /*0022*/

   const  int32_t kernel1x3[9] = {0, 0, 0, 1, 1, 1, 0, 0, 0};           /*0024*/
   const  int32_t kernel3x1[9] = {0, 1, 0, 0, 1, 0, 0, 1, 0};           /*0025*/

   freia_status _return0, _return1, _return2, _return3, _return4;       /*0027*/
   freia_status ret_0;                                                  /*0029*/
   int i_0;                                                             /*0030*/
   freia_status ret_1;                                                  /*0032*/
   int i_1;                                                             /*0033*/
   freia_status ret_2;                                                  /*0035*/
   int i_2;                                                             /*0036*/
   freia_status ret_3;                                                  /*0038*/
   int i_3, i_4;                                                        /*0039*/
   
   /* open videos flow */
   freia_common_open_input(&fdin, 0);                                   /*0042*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, 8);          /*0043*/
   
   /* images creation */
   in = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);               /*0046*/
   out = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);              /*0055*/
   
   /* processing */
   freia_common_rx_image(in, &fdin);                                    /*0058*/
   
   
   
   
   
   ret_0 = 0;                                                           /*0062*/

   ret_0 |= license_plate_copies_helper_0_0(out, in, kernel1x3, 150, 255, 1, 1, 50, 1, kernel3x1, freia_morpho_kernel_8c);          /*0064*/
   ret_0 |= 0;                                                          /*0065*/
   ret_0 |= 0;                                                          /*0066*/
   ret_0 |= 0;                                                          /*0067*/
   ret_0 |= 0;                                                          /*0068*/
   ret_0 |= 0;                                                          /*0069*/
   ret_0 |= 0;                                                          /*0070*/
   ret_0 |= 0;                                                          /*0071*/
   ret_0 |= 0;                                                          /*0072*/
   ret_0 |= 0;                                                          /*0073*/
   ret_0 |= 0;                                                          /*0074*/
   ret_0 |= 0;                                                          /*0075*/
   ret_0 |= 0;                                                          /*0076*/
   ret_0 |= 0;                                                          /*0077*/
   ret_0 |= 0;                                                          /*0078*/
   ret_0 |= 0;                                                          /*0079*/
   ret_0 |= 0;                                                          /*0080*/
   ret_0 |= 0;                                                          /*0081*/
   ret_0 |= 0;                                                          /*0082*/
   ret_0 |= 0;                                                          /*0083*/
   ret_0 |= 0;                                                          /*0084*/
   ret_0 |= 0;                                                          /*0085*/
   ret_0 |= 0;                                                          /*0086*/
   ret_0 |= 0;                                                          /*0087*/
   ret_0 |= 0;                                                          /*0088*/
   ret_0 |= 0;                                                          /*0089*/
   ret_0 |= 0;                                                          /*0090*/
   ret_0 |= 0;                                                          /*0091*/
   ret_0 |= 0;                                                          /*0092*/
   ret_0 |= 0;                                                          /*0093*/
   i_0 = 15;                                                            /*0094*/

   ret_0 |= 0;                                                          /*0096*/
   ret_0 |= 0;                                                          /*0097*/
   ret_0 |= 0;                                                          /*0098*/
   ret_0 |= 0;                                                          /*0099*/
   ret_0 |= 0;                                                          /*0100*/
   ret_0 |= 0;                                                          /*0101*/
   ret_0 |= 0;                                                          /*0102*/
   ret_0 |= 0;                                                          /*0103*/
   ret_0 |= 0;                                                          /*0104*/
   ret_0 |= 0;                                                          /*0105*/
   ret_0 |= 0;                                                          /*0106*/
   ret_0 |= 0;                                                          /*0107*/
   ret_0 |= 0;                                                          /*0108*/
   ret_0 |= 0;                                                          /*0109*/
   ret_0 |= 0;                                                          /*0110*/
   ret_0 |= 0;                                                          /*0111*/
   ret_0 |= 0;                                                          /*0112*/
   ret_0 |= 0;                                                          /*0113*/
   ret_0 |= 0;                                                          /*0114*/
   ret_0 |= 0;                                                          /*0115*/
   ret_0 |= 0;                                                          /*0116*/
   ret_0 |= 0;                                                          /*0117*/
   ret_0 |= 0;                                                          /*0118*/
   ret_0 |= 0;                                                          /*0119*/
   ret_0 |= 0;                                                          /*0120*/
   ret_0 |= 0;                                                          /*0121*/
   ret_0 |= 0;                                                          /*0122*/
   ret_0 |= 0;                                                          /*0123*/
   ret_0 |= 0;                                                          /*0124*/
   ret_0 |= 0;                                                          /*0125*/
   i_0 = 15;                                                            /*0126*/

   _return1 = ret_0;                                                    /*0130*/

   ret_1 = 0;                                                           /*0134*/

   ret_1 |= 0;                                                          /*0136*/
   ret_1 |= 0;                                                          /*0137*/
   ret_1 |= 0;                                                          /*0138*/
   ret_1 |= 0;                                                          /*0139*/
   ret_1 |= 0;                                                          /*0140*/
   ret_1 |= 0;                                                          /*0141*/
   ret_1 |= 0;                                                          /*0142*/
   ret_1 |= 0;                                                          /*0143*/
   ret_1 |= 0;                                                          /*0144*/
   ret_1 |= 0;                                                          /*0145*/
   ret_1 |= 0;                                                          /*0146*/
   ret_1 |= 0;                                                          /*0147*/
   ret_1 |= 0;                                                          /*0148*/
   ret_1 |= 0;                                                          /*0149*/
   ret_1 |= 0;                                                          /*0150*/
   ret_1 |= 0;                                                          /*0151*/
   i_1 = 8;                                                             /*0152*/

   ret_1 |= 0;                                                          /*0154*/
   ret_1 |= 0;                                                          /*0155*/
   ret_1 |= 0;                                                          /*0156*/
   ret_1 |= 0;                                                          /*0157*/
   ret_1 |= 0;                                                          /*0158*/
   ret_1 |= 0;                                                          /*0159*/
   ret_1 |= 0;                                                          /*0160*/
   ret_1 |= 0;                                                          /*0161*/
   ret_1 |= 0;                                                          /*0162*/
   ret_1 |= 0;                                                          /*0163*/
   ret_1 |= 0;                                                          /*0164*/
   ret_1 |= 0;                                                          /*0165*/
   ret_1 |= 0;                                                          /*0166*/
   ret_1 |= 0;                                                          /*0167*/
   ret_1 |= 0;                                                          /*0168*/
   ret_1 |= 0;                                                          /*0169*/
   i_1 = 8;                                                             /*0170*/

   _return0 = ret_1;                                                    /*0174*/
   
   
   
   ret_2 = 0;                                                           /*0183*/

   ret_2 |= 0;                                                          /*0185*/
   ret_2 |= 0;                                                          /*0186*/
   ret_2 |= 0;                                                          /*0187*/
   ret_2 |= 0;                                                          /*0188*/
   ret_2 |= 0;                                                          /*0189*/
   ret_2 |= 0;                                                          /*0190*/
   ret_2 |= 0;                                                          /*0191*/
   ret_2 |= 0;                                                          /*0192*/
   i_2 = 4;                                                             /*0193*/

   ret_2 |= 0;                                                          /*0195*/
   ret_2 |= 0;                                                          /*0196*/
   ret_2 |= 0;                                                          /*0197*/
   ret_2 |= 0;                                                          /*0198*/
   ret_2 |= 0;                                                          /*0199*/
   ret_2 |= 0;                                                          /*0200*/
   ret_2 |= 0;                                                          /*0201*/
   ret_2 |= 0;                                                          /*0202*/
   i_2 = 4;                                                             /*0203*/

   _return2 = ret_2;                                                    /*0207*/

   ret_3 = 0;                                                           /*0211*/

   ret_3 |= 0;                                                          /*0213*/
   ret_3 |= 0;                                                          /*0214*/
   ret_3 |= 0;                                                          /*0215*/
   ret_3 |= 0;                                                          /*0216*/
   ret_3 |= 0;                                                          /*0217*/
   ret_3 |= 0;                                                          /*0218*/
   ret_3 |= 0;                                                          /*0219*/
   ret_3 |= 0;                                                          /*0220*/
   i_3 = 4;                                                             /*0221*/

   ret_3 |= 0;                                                          /*0223*/
   ret_3 |= 0;                                                          /*0224*/
   ret_3 |= 0;                                                          /*0225*/
   ret_3 |= 0;                                                          /*0226*/
   ret_3 |= 0;                                                          /*0227*/
   ret_3 |= 0;                                                          /*0228*/
   ret_3 |= 0;                                                          /*0229*/
   ret_3 |= 0;                                                          /*0230*/
   i_3 = 4;                                                             /*0231*/

   _return3 = ret_3;                                                    /*0235*/

   i_4 = 3;                                                             /*0240*/

   _return4 = 0;                                                        /*0242*/
   
   
   
   
   
   freia_common_tx_image(out, &fdout);                                  /*0245*/
   
   /* images destruction */
   freia_common_destruct_data(in);                                      /*0248*/
   freia_common_destruct_data(out);                                     /*0257*/
   
   /* close videos flow */
   freia_common_close_input(&fdin);                                     /*0260*/
   freia_common_close_output(&fdout);                                   /*0261*/

   return 0;                                                            /*0263*/
}

! cleaned up function

int license_plate_copies(void)
{
   freia_dataio fdin;                                                   /*0010*/
   freia_dataio fdout;                                                  /*0011*/

   freia_data2d *in;                                                    /*0013*/
   freia_data2d *out;                                                   /*0022*/

   const  int32_t kernel1x3[9] = {0, 0, 0, 1, 1, 1, 0, 0, 0};           /*0024*/
   const  int32_t kernel3x1[9] = {0, 1, 0, 0, 1, 0, 0, 1, 0};           /*0025*/

   freia_status _return0, _return1, _return2, _return3, _return4;       /*0027*/
   freia_status ret_0;                                                  /*0029*/
   int i_0;                                                             /*0030*/
   freia_status ret_1;                                                  /*0032*/
   int i_1;                                                             /*0033*/
   freia_status ret_2;                                                  /*0035*/
   int i_2;                                                             /*0036*/
   freia_status ret_3;                                                  /*0038*/
   int i_3, i_4;                                                        /*0039*/
   
   /* open videos flow */
   freia_common_open_input(&fdin, 0);                                   /*0042*/
   freia_common_open_output(&fdout, 0, fdin.framewidth, fdin.frameheight, 8);          /*0043*/
   
   /* images creation */
   in = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);               /*0046*/
   out = freia_common_create_data(16, fdin.framewidth, fdin.frameheight);              /*0055*/
   
   /* processing */
   freia_common_rx_image(in, &fdin);                                    /*0058*/
   
   
   
   
   
   ret_0 = 0;                                                           /*0062*/

   ret_0 |= license_plate_copies_helper_0_0(out, in, kernel1x3, 150, 255, 1, 1, 50, 1, kernel3x1, freia_morpho_kernel_8c);          /*0064*/
   i_0 = 15;                                                            /*0094*/

   i_0 = 15;                                                            /*0126*/

   _return1 = ret_0;                                                    /*0130*/

   ret_1 = 0;                                                           /*0134*/

   i_1 = 8;                                                             /*0152*/

   i_1 = 8;                                                             /*0170*/

   _return0 = ret_1;                                                    /*0174*/
   
   
   
   ret_2 = 0;                                                           /*0183*/

   i_2 = 4;                                                             /*0193*/

   i_2 = 4;                                                             /*0203*/

   _return2 = ret_2;                                                    /*0207*/

   ret_3 = 0;                                                           /*0211*/

   i_3 = 4;                                                             /*0221*/

   i_3 = 4;                                                             /*0231*/

   _return3 = ret_3;                                                    /*0235*/

   i_4 = 3;                                                             /*0240*/

   _return4 = 0;                                                        /*0242*/
   
   
   
   
   
   freia_common_tx_image(out, &fdout);                                  /*0245*/
   
   /* images destruction */
   freia_common_destruct_data(in);                                      /*0248*/
   freia_common_destruct_data(out);                                     /*0257*/
   
   /* close videos flow */
   freia_common_close_input(&fdin);                                     /*0260*/
   freia_common_close_output(&fdout);                                   /*0261*/

   return 0;                                                            /*0263*/
}
#
# FREIA COMPILATION DONE
#

