#
# AIPO
#
#
# compile generated freia_68
#

! initial function

void freia_68(freia_data2d *o0, freia_data2d *o1, const freia_data2d *in)
{
   freia_data2d *tmp = freia_common_create_data(16, 128, 128);          /*0009*/
   freia_aipo_add_const(tmp, in, 1);                                    /*0010*/
   freia_aipo_sub(o0, in, tmp);                                         /*0011*/
   freia_aipo_not(o1, in);                                              /*0012*/
   freia_common_destruct_data(tmp);                                     /*0013*/
}

! graphs

// graph for dag "dag_0" of module "freia_68" in dot format
digraph "dag_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "o0" [shape=circle];
  "o1" [shape=circle];

  // computation vertices
  "12 !" [shape=trapezium,orientation=270];
  "12 !" -> "o1";
  "11 -" [shape=trapezium,orientation=270];
  "11 -" -> "o0";
  "10 +." [shape=trapezium,orientation=270];
  "10 +." -> "11 -" [label="tmp"];
  "in" -> "12 !";
  "in" -> "11 -";
  "in" -> "10 +.";
}
// graph for dag "dag_cleaned_0" of module "freia_68" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "in" [shape=circle];

  // outputs
  "o0" [shape=circle];
  "o1" [shape=circle];

  // computation vertices
  "12 !" [shape=trapezium,orientation=270];
  "12 !" -> "o1";
  "11 -" [shape=trapezium,orientation=270];
  "11 -" -> "o0";
  "10 +." [shape=trapezium,orientation=270];
  "10 +." -> "11 -" [label="tmp"];
  "in" -> "12 !";
  "in" -> "11 -";
  "in" -> "10 +.";
}

! updated function for

void freia_68(freia_data2d *o0, freia_data2d *o1, const freia_data2d *in)
{
   freia_data2d *tmp = freia_common_create_data(16, 128, 128);          /*0009*/
   freia_aipo_add_const(tmp, in, 1);                                    /*0010*/
   freia_aipo_sub(o0, in, tmp);                                         /*0011*/
   freia_aipo_not(o1, in);                                              /*0012*/
   freia_common_destruct_data(tmp);                                     /*0013*/
}
#
# SPOC
#

! initial function

void freia_68(freia_data2d *o0, freia_data2d *o1, const freia_data2d *in)
{
   freia_data2d *tmp = freia_common_create_data(16, 128, 128);          /*0009*/
   freia_aipo_add_const(tmp, in, 1);                                    /*0010*/
   freia_aipo_sub(o0, in, tmp);                                         /*0011*/
   freia_aipo_not(o1, in);                                              /*0012*/
   freia_common_destruct_data(tmp);                                     /*0013*/
}
