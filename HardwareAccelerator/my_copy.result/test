
! initial function

freia_status my_copy(freia_data2d *o, freia_data2d *i0)
{
   return freia_aipo_copy(o, i0);                                       /*0004*/
}

! graphs

// graph for dag "dag_0" of module "my_copy" in dot format
digraph "dag_0" {
  // inputs
  "i0" [shape=circle];

  // outputs
  "o" [shape=circle];

  // computation vertices
  "4 =" [shape=circle];
  "4 =" -> "o";
  "i0" -> "4 =";
}
// graph for dag "dag_cleaned_0" of module "my_copy" in dot format
digraph "dag_cleaned_0" {
  // inputs
  "i0" [shape=circle];

  // outputs

  // computation vertices
}

! acceleration function

#include <freiaCommon.h>
#include <freiaMediumGrain.h>
#include <freiaCoarseGrain.h>
#include <spoc.h>

! updated function

freia_status my_copy(freia_data2d *o, freia_data2d *i0)
{
   freia_aipo_copy(o, i0);
   return 0;
}

