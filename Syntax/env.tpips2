# Please, detect global name conflicts at parsing
# Conflict name between common, subroutine and program

echo
echo First try: detect conflict between common and program 
echo when finding the common name
echo

shell sed /program/s/c// ${VDIR:-.}/env.f >env1.f
delete env
create env env1.f
module ENV
display PRINTED_FILE
# activate MUST_REGIONS # MUST regions
# activate PRINT_CODE_REGIONS # Statements & Regions
# display PRINTED_FILE(ENV)
close
delete env
shell rm env1.f

echo
echo Second try: detect conflict between common and subroutine
echo when finding the common name
echo

shell sed /subroutine/s/c// ${VDIR:-.}/env.f >env2.f
create env env2.f
module ENV
display PRINTED_FILE
# activate MUST_REGIONS # MUST regions
# activate PRINT_CODE_REGIONS # Statements & Regions
# display PRINTED_FILE(ENV)
close
delete env
shell rm env2.f

echo
echo Third try: create the common and detect the conflict 
echo when parsing the program
echo

shell sed /program/s/c// ${VDIR:-.}/env.f >env3.f
create env env3.f
make CALLERS[%ALL]
module FOO
display PRINTED_FILE
module ENV
activate MUST_REGIONS # MUST regions
activate PRINT_CODE_REGIONS # Statements & Regions
display PRINTED_FILE[ENV]
close
delete env
shell rm env3.f

echo
echo Fourth try: conflict between a common and a subroutine name
echo

shell sed /program/s/c// ${VDIR:-.}/env.f >env4.f
create env env4.f
module BAR
display PRINTED_FILE
module FOO
display PRINTED_FILE
close
delete env
shell rm env4.f

echo
echo Fifth try: conflict between a subroutine and a common name
echo

shell sed /program/s/c// ${VDIR:-.}/env.f >env5.f
create env env5.f
module FOO
display PRINTED_FILE
module BAR
display PRINTED_FILE
close
delete env
shell rm env5.f
quit
