
TRANSFORMERS


C  T() {}

int main()
{


//  T(x,y,z) {}

   int x, y, z;

//  T(x) {x==1}


   x = 1;

//  T(y) {x==1, y==0}

   y = 0;

//  T(z) {x==1, y==0, z==0}

   z = 0;

//  T() {x==1, y==0, z==0}


   while (x<100) {

//  T(x) {x<=50, x#init<=x, x#init<=50}

      while (x<=50) 

//  T(x) {x==x#init+1, x<=51}

         x++;

//  T(x,y) {x+y#init==x#init+y, 51<=x, x<=100, x#init<=x, 51<=x#init,
//    x#init<=99}

      while (x<=100&&x>50) {

//  T(x) {x==x#init+1, 52<=x, x<=101}

         x++;

//  T(y) {y==y#init+1, 52<=x, x<=101}

         y++;
      }

//  T(z) {x==101, y==z}


      z = y;
   }

//  T() {x==101, y==z, 2<=y, y<=50}

   
   
   if (x==101&&y==50) 

//  T() {x==101, y==50, z==50}

      printf("property  verified\n");
}

PRECONDITIONS


//  P() {}

int main()
{


//  P() {}

   int x, y, z;

//  P(x,y,z) {}


   x = 1;

//  P(x,y,z) {x==1}

   y = 0;

//  P(x,y,z) {x==1, y==0}

   z = 0;

//  P(x,y,z) {x==1, y==0, z==0}


   while (x<100) {

//  P(x,y,z) {x==1, y==0, z==0}

      while (x<=50) 

//  P(x,y,z) {y==0, z==0, 1<=x, x<=50}

         x++;

//  P(x,y,z) {x==51, y==0, z==0}

      while (x<=100&&x>50) {

//  P(x,y,z) {x==y+51, z==0, 51<=x, x<=100}

         x++;

//  P(x,y,z) {x==y+52, z==0, 52<=x, x<=101}

         y++;
      }

//  P(x,y,z) {x==101, y==50, z==0}


      z = y;
   }

//  P(x,y,z) {x==101, y==50, z==50}

   
   
   if (x==101&&y==50) 

//  P(x,y,z) {x==101, y==50, z==50}

      printf("property  verified\n");
}

AFTER DEAD CODE ELIMINATION

int main()
{

   int x, y, z;

   x = 1;
   y = 0;
   z = 0;

   while (x<100) {
      while (x<=50) 
         x++;
      while (x<=100&&x>50) {
         x++;
         y++;
      }

      z = y;
   }
   
   
   printf("property  verified\n");
   ;
}
