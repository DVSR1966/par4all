
Points-to


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int a[10];

// Points To: none

   int *p, *q;

// Points To:
// p -> undefined , EXACT
// q -> undefined , EXACT


   q = &a[0];

// Points To:
// p -> undefined , EXACT
// q -> a[0] , EXACT

   p = q+1;

// Points To:
// p -> a[1] , EXACT
// q -> a[0] , EXACT


   return 0;
}

PROPER  EFFECTS

int main()
{
   int a[10];
   int *p, *q;
//             <    is written>: q

   q = &a[0];
//             <    is read   >: q
//             <    is written>: p
   p = q+1;

   return 0;
}

Transformers with point-to


//  T(main) {main==0}

int main()
{

//  T() {}

   int a[10];

//  T(p,q) {}

   int *p, *q;

//  T(q) {&a[0]==q}


   q = &a[0];

//  T(p) {&a[0]+sizeof(int *)==p, &a[0]==q}

   p = q+1;

//  T(main) {&a[0]+sizeof(int *)==p, &a[0]==q, main==0}


   return 0;
}

Preconditions with point-to


//  P() {}

int main()
{

//  P() {}

   int a[10];

//  P() {}

   int *p, *q;

//  P(p,q) {}


   q = &a[0];

//  P(p,q) {&a[0]==q}

   p = q+1;

//  P(p,q) {&a[0]+sizeof(int *)==p, &a[0]==q}


   return 0;
}
