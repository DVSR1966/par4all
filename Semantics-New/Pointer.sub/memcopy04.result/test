
Points-to


Transformers with point-to


//  T() {}

void memcopy04(int size, char *src, char *dst)
{

//  T(i) {}

   int i;

//  T(i) {}

   if (src!=(void *) 0&&dst!=(void *) 0) {

//  T(s) {s==src}

      char *s = (char *) src;

//  T(d) {d==dst, s==src}

      char *d = (char *) dst;

//  T(d,i,s) {d#init==dst, s#init==src, 0<=i, i+1<=size}

      for(i = 0; i <= size-1; i += 1)

//  T(d,s) {0<=i, i+1<=size}

         *d++ = *s++;
   }
}

Preconditions with point-to


//  P() {}

void memcopy04(int size, char *src, char *dst)
{

//  P() {}

   int i;

//  P(i) {}

   if (src!=(void *) 0&&dst!=(void *) 0) {

//  P(i) {}

      char *s = (char *) src;

//  P(i,s) {s==src}

      char *d = (char *) dst;

//  P(d,i,s) {d==dst, s==src}

      for(i = 0; i <= size-1; i += 1)

//  P(d,i,s) {0<=i, i+1<=size}

         *d++ = *s++;
   }
}
