add {
	SIMD_ADDB: QI_REF QI_REF QI_REF,-7;
	SIMD_ADDW: HI_REF HI_REF HI_REF,-3;
	SIMD_ADDD: SI_REF SI_REF SI_REF,-1;
	SIMD_ADDPS: SF_REF SF_REF SF_REF,-3;
}

add: = REFERENCE + REFERENCE REFERENCE ;
add: = REFERENCE + REFERENCE CONSTANT ;
add: = REFERENCE + CONSTANT REFERENCE ;
#add: = REFERENCE REFERENCE : ,,0 ;

sub {
	SIMD_SUBB: QI_REF QI_REF QI_REF,-7;
	SIMD_SUBW: HI_REF HI_REF HI_REF,-3;
	SIMD_SUBD: SI_REF SI_REF SI_REF,-1;
	SIMD_SUBPS: SF_REF SF_REF SF_REF,-3;
}

sub: = REFERENCE - REFERENCE REFERENCE ;
sub: = REFERENCE - REFERENCE CONSTANT ;
sub: = REFERENCE - CONSTANT REFERENCE ;
#sub: = REFERENCE REFERENCE : ,,0 ;

mul {
	SIMD_MULB: QI_REF QI_REF QI_REF,-7;
	SIMD_MULW: HI_REF HI_REF HI_REF,-3;
	SIMD_MULD: SI_REF SI_REF SI_REF,-1;
	SIMD_MULPS: SF_REF SF_REF SF_REF,-3;
}

mul: = REFERENCE * REFERENCE REFERENCE ;
mul: = REFERENCE * CONSTANT REFERENCE ;
mul: = REFERENCE * REFERENCE CONSTANT ;
#mul: = REFERENCE REFERENCE : ,,1 ;

div {
	SIMD_DIVB: QI_REF QI_REF QI_REF,-7;
	SIMD_DIVW: HI_REF HI_REF HI_REF,-3;
	SIMD_DIVD: SI_REF SI_REF SI_REF,-1;
	SIMD_DIVPS: SF_REF SF_REF SF_REF,-3;
}

div: = REFERENCE / REFERENCE REFERENCE ;
div: = REFERENCE / CONSTANT REFERENCE ;
div: = REFERENCE / REFERENCE CONSTANT ;
#div: = REFERENCE REFERENCE : ,,1 ;

gt {
	SIMD_GTB:   SI_REF QI_REF QI_REF,-7;
	SIMD_GTW:   SI_REF HI_REF HI_REF,-3;
	SIMD_GTD:   SI_REF SI_REF SI_REF,-2;
	SIMD_GTPS:  SI_REF SF_REF SF_REF,-1;
}

gt: = REFERENCE > REFERENCE REFERENCE ;
gt: = REFERENCE > CONSTANT REFERENCE ;
gt: = REFERENCE > REFERENCE CONSTANT ;

phi {
	SIMD_PHIB:   SI_REF  QI_REF QI_REF QI_REF,-10;
	SIMD_PHIW:   SI_REF  HI_REF HI_REF HI_REF,-7;
	SIMD_PHID:   SI_REF  SI_REF SI_REF SI_REF,-5;
	SIMD_PHIPS:  SI_REF  SF_REF SF_REF SF_REF,-6;
}

phi: = REFERENCE ? REFERENCE REFERENCE REFERENCE;
phi: = REFERENCE ? REFERENCE CONSTANT REFERENCE;
phi: = REFERENCE ? CONSTANT REFERENCE REFERENCE;
