//                                                      5*n^2 + 7*n + 6 (SUMMARY)
void code(int n, int a[n])
{
//                                                                    0 (STMT)
   int i, j;
//                                                              3*n + 3 (DO)
   // low computation intensity
   for(i = 0; i <= n-1; i += 1)
//                                                                    3 (STMT)
      a[i] = 1;
//                                                      5*n^2 + 4*n + 3 (DO)
   for(i = 0; i <= n-1; i += 1)
//                                                              5*n + 4 (DO)
      for(j = 0; j <= n-1; j += 1)
//                                                                    5 (STMT)
         a[i] += j;
}
---------------------------------------
Domain:
         n  -1 >= 0
          1 >= 0

Vertices:
[ 0 ]
[ n-1 ]

Ehrhart Polynomial:
( 1 * n + 0 )

---------------------------------------
Domain:
         n  -1 >= 0
          1 >= 0

Vertices:
[ 0 ]
[ n-1 ]

Ehrhart Polynomial:
( 1 * n + 0 )

---------------------------------------
Domain:
         n  -1 >= 0
          1 >= 0

Vertices:
[ 0 ]
[ n-1 ]

Ehrhart Polynomial:
( 1 * n + 0 )

void code(int n, int a[n])
{
   int i, j;
   // low computation intensity
   for(i = 0; i <= n-1; i += 1)
      a[i] = 1;
#pragma pips intensive loop
   for(i = 0; i <= n-1; i += 1)
      for(j = 0; j <= n-1; j += 1)
         a[i] += j;
}

