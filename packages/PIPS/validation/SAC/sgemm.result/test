      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      IF (NOTA) THEN                                                    0044
         NROWA = M                                                      0045
         NCOLA = K                                                      0046
      ELSE
         NROWA = K                                                      0048
         NCOLA = M                                                      0049
      ENDIF
      IF (NOTB) THEN                                                    0051
         NROWB = K                                                      0052
      ELSE
         NROWB = N                                                      0054
      ENDIF
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSEIF (.NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(     0060
     &TRANSB, 'T')) THEN                                                0060
         INFO = 2                                                       0067
      ELSEIF (M.LT.0) THEN                                              0060
         INFO = 3                                                       0069
      ELSEIF (N.LT.0) THEN                                              0060
         INFO = 4                                                       0071
      ELSEIF (K.LT.0) THEN                                              0060
         INFO = 5                                                       0073
      ELSEIF (LDA.LT.MAX(1, NROWA)) THEN                                0060
         INFO = 8                                                       0075
      ELSEIF (LDB.LT.MAX(1, NROWB)) THEN                                0060
         INFO = 10                                                      0077
      ELSEIF (LDC.LT.MAX(1, M)) THEN                                    0060
         INFO = 13                                                      0079
      ENDIF
      IF (INFO.NE.0) GOTO 99999                                         0081
*
*     Quick return if possible.
*
      IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA.EQ.    0088
     &ONE) RETURN                                                       0088
*
*     And if  alpha.eq.zero.
*
      IF (ALPHA.EQ.ZERO) GOTO 99998                                     0094
*
*     Start the operations.
*
      IF (NOTB) THEN                                                    0113
         IF (NOTA) THEN                                                 0114
*
*           Form  C := alpha*A*B + beta*C.
*
            DO 90 J = 1, N                                              0118
               IF (BETA.EQ.ZERO) THEN                                   0119
                  DO 50 I = 1, M                                        0120
                     C(I,J) = ZERO                                      0121
50                   CONTINUE                                           0122
               ELSEIF (BETA.NE.ONE) THEN                                0119
                  DO 60 I = 1, M                                        0124
                     C(I,J) = BETA*C(I,J)                               0125
60                   CONTINUE                                           0126
               ENDIF
               DO 80 L = 1, K                                           0128
                  IF (B(L,J).NE.ZERO) THEN                              0129
                     TEMP = ALPHA*B(L,J)                                0130
                     DO 70 I = 1, M                                     0131
                        C(I,J) = C(I,J)+TEMP*A(I,L)                     0132
70                      CONTINUE                                        0133
                  ENDIF
80                CONTINUE                                              0135
90             CONTINUE                                                 0136
         ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
            DO 120 J = 1, N                                             0141
               DO 110 I = 1, M                                          0142
                  TEMP = ZERO                                           0143
                  DO 100 L = 1, K                                       0144
                     TEMP = TEMP+A(L,I)*B(L,J)                          0145
100                  CONTINUE                                           0146
                  IF (BETA.EQ.ZERO) THEN                                0147
                     C(I,J) = ALPHA*TEMP                                0148
                  ELSE
                     C(I,J) = ALPHA*TEMP+BETA*C(I,J)                    0150
                  ENDIF
110               CONTINUE                                              0152
120            CONTINUE                                                 0153
         ENDIF
      ELSEIF (NOTA) THEN                                                0113
*
*           Form  C := alpha*A*B' + beta*C
*
         DO 170 J = 1, N                                                0160
            IF (BETA.EQ.ZERO) THEN                                      0161
               DO 130 I = 1, M                                          0162
                  C(I,J) = ZERO                                         0163
130               CONTINUE                                              0164
            ELSEIF (BETA.NE.ONE) THEN                                   0161
               DO 140 I = 1, M                                          0166
                  C(I,J) = BETA*C(I,J)                                  0167
140               CONTINUE                                              0168
            ENDIF
            DO 160 L = 1, K                                             0170
               IF (B(J,L).NE.ZERO) THEN                                 0171
                  TEMP = ALPHA*B(J,L)                                   0172
                  DO 150 I = 1, M                                       0173
                     C(I,J) = C(I,J)+TEMP*A(I,L)                        0174
150                  CONTINUE                                           0175
               ENDIF
160            CONTINUE                                                 0177
170         CONTINUE                                                    0178
      ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
         DO 200 J = 1, N                                                0183
            DO 190 I = 1, M                                             0184
               TEMP = ZERO                                              0185
               DO 180 L = 1, K                                          0186
                  TEMP = TEMP+A(L,I)*B(J,L)                             0187
180               CONTINUE                                              0188
               IF (BETA.EQ.ZERO) THEN                                   0189
                  C(I,J) = ALPHA*TEMP                                   0190
               ELSE
                  C(I,J) = ALPHA*TEMP+BETA*C(I,J)                       0192
               ENDIF
190            CONTINUE                                                 0194
200         CONTINUE                                                    0195
      ENDIF
*
      RETURN
99998 CONTINUE
      IF (BETA.EQ.ZERO) THEN                                            0095
         DO 20 J = 1, N                                                 0096
            DO 10 I = 1, M                                              0097
               C(I,J) = ZERO                                            0098
10             CONTINUE                                                 0099
20          CONTINUE                                                    0100
      ELSE
         DO 40 J = 1, N                                                 0102
            DO 30 I = 1, M                                              0103
               C(I,J) = BETA*C(I,J)                                     0104
30             CONTINUE                                                 0105
40          CONTINUE                                                    0106
      ENDIF
      RETURN
99999 CONTINUE
*         CALL XERBLA( 'SGEMM ', INFO )
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      IF (NOTA) THEN                                                    0044
         NROWA = M                                                      0045
         NCOLA = K                                                      0046
      ELSE
         NROWA = K                                                      0048
         NCOLA = M                                                      0049
      ENDIF
      IF (NOTB) THEN                                                    0051
         NROWB = K                                                      0052
      ELSE
         NROWB = N                                                      0054
      ENDIF
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSEIF (.NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(     0060
     &TRANSB, 'T')) THEN                                                0060
         INFO = 2                                                       0067
      ELSEIF (M.LT.0) THEN                                              0060
         INFO = 3                                                       0069
      ELSEIF (N.LT.0) THEN                                              0060
         INFO = 4                                                       0071
      ELSEIF (K.LT.0) THEN                                              0060
         INFO = 5                                                       0073
      ELSEIF (LDA.LT.MAX(1, NROWA)) THEN                                0060
         INFO = 8                                                       0075
      ELSEIF (LDB.LT.MAX(1, NROWB)) THEN                                0060
         INFO = 10                                                      0077
      ELSEIF (LDC.LT.MAX(1, M)) THEN                                    0060
         INFO = 13                                                      0079
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     DO 10 I = 1, M                                     0097
                        C(I,J) = ZERO                                   0098
10                      CONTINUE                                        0099
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     DO 30 I = 1, M                                     0103
                        C(I,J) = BETA*C(I,J)                            0104
30                      CONTINUE                                        0105
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           DO 50 I = 1, M                               0120
                              C(I,J) = ZERO                             0121
50                            CONTINUE                                  0122
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           DO 60 I = 1, M                               0124
                              C(I,J) = BETA*C(I,J)                      0125
60                            CONTINUE                                  0126
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              DO 70 I = 1, M                            0131
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0132
70                               CONTINUE                               0133
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           DO 100 L = 1, K                              0144
                              TEMP = TEMP+A(L,I)*B(L,J)                 0145
100                           CONTINUE                                  0146
                           IF (BETA.EQ.ZERO) THEN                       0147
                              C(I,J) = ALPHA*TEMP                       0148
                           ELSE
                              C(I,J) = ALPHA*TEMP+BETA*C(I,J)           0150
                           ENDIF
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        DO 130 I = 1, M                                 0162
                           C(I,J) = ZERO                                0163
130                        CONTINUE                                     0164
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        DO 140 I = 1, M                                 0166
                           C(I,J) = BETA*C(I,J)                         0167
140                        CONTINUE                                     0168
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           DO 150 I = 1, M                              0173
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0174
150                           CONTINUE                                  0175
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        DO 180 L = 1, K                                 0186
                           TEMP = TEMP+A(L,I)*B(J,L)                    0187
180                        CONTINUE                                     0188
                        IF (BETA.EQ.ZERO) THEN                          0189
                           C(I,J) = ALPHA*TEMP                          0190
                        ELSE
                           C(I,J) = ALPHA*TEMP+BETA*C(I,J)              0192
                        ENDIF
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      IF (NOTA) THEN                                                    0044
         NROWA = M                                                      0045
         NCOLA = K                                                      0046
      ELSE
         NROWA = K                                                      0048
         NCOLA = M                                                      0049
      ENDIF
      IF (NOTB) THEN                                                    0051
         NROWB = K                                                      0052
      ELSE
         NROWB = N                                                      0054
      ENDIF
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSEIF (.NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(     0060
     &TRANSB, 'T')) THEN                                                0060
         INFO = 2                                                       0067
      ELSEIF (M.LT.0) THEN                                              0060
         INFO = 3                                                       0069
      ELSEIF (N.LT.0) THEN                                              0060
         INFO = 4                                                       0071
      ELSEIF (K.LT.0) THEN                                              0060
         INFO = 5                                                       0073
      ELSEIF (LDA.LT.MAX(1, NROWA)) THEN                                0060
         INFO = 8                                                       0075
      ELSEIF (LDB.LT.MAX(1, NROWB)) THEN                                0060
         INFO = 10                                                      0077
      ELSEIF (LDC.LT.MAX(1, M)) THEN                                    0060
         INFO = 13                                                      0079
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     DO 10 I = 1, M                                     0097
                        C(I,J) = ZERO                                   0098
10                      CONTINUE                                        0099
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     DO 30 I = 1, M                                     0103
                        C(I,J) = BETA*C(I,J)                            0104
30                      CONTINUE                                        0105
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           DO 50 I = 1, M                               0120
                              C(I,J) = ZERO                             0121
50                            CONTINUE                                  0122
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           DO 60 I = 1, M                               0124
                              C(I,J) = BETA*C(I,J)                      0125
60                            CONTINUE                                  0126
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              DO 70 I = 1, M                            0131
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0132
70                               CONTINUE                               0133
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           DO 100 L = 1, K                              0144
                              TEMP = TEMP+A(L,I)*B(L,J)                 0145
100                           CONTINUE                                  0146
                           IF (BETA.EQ.ZERO) THEN                       0147
                              C(I,J) = ALPHA*TEMP                       0148
                           ELSE
                              C(I,J) = ALPHA*TEMP+BETA*C(I,J)           0150
                           ENDIF
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        DO 130 I = 1, M                                 0162
                           C(I,J) = ZERO                                0163
130                        CONTINUE                                     0164
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        DO 140 I = 1, M                                 0166
                           C(I,J) = BETA*C(I,J)                         0167
140                        CONTINUE                                     0168
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           DO 150 I = 1, M                              0173
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0174
150                           CONTINUE                                  0175
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        DO 180 L = 1, K                                 0186
                           TEMP = TEMP+A(L,I)*B(J,L)                    0187
180                        CONTINUE                                     0188
                        IF (BETA.EQ.ZERO) THEN                          0189
                           C(I,J) = ALPHA*TEMP                          0190
                        ELSE
                           C(I,J) = ALPHA*TEMP+BETA*C(I,J)              0192
                        ENDIF
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
!$PIPS IF_TO_CONVERT
      IF (NOTA) THEN
         NROWA = M                                                      0045
         NCOLA = K                                                      0046
      ENDIF
!$omp end parallel do
!$PIPS IF_TO_CONVERT
      IF (.NOT.NOTA) THEN
         NROWA = K                                                      0048
         NCOLA = M                                                      0049
      ENDIF
!$omp end parallel do
!$PIPS IF_TO_CONVERT
      IF (NOTB) NROWB = K
!$omp end parallel do
!$PIPS IF_TO_CONVERT
      IF (.NOT.NOTB) NROWB = N
!$omp end parallel do
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSE
         L_6 = .NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(
     &   TRANSB, 'T')
!$PIPS IF_TO_CONVERT
         IF (L_6) INFO = 2
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6) L_5 = M.LT.0
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.L_5) INFO = 3
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5) L_4 = N.LT.0
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND.L_4) INFO = 4
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4) L_3 = K.LT.0
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND.L_3) INFO = 5
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3) L_2 = 
     &   LDA.LT.MAX(1, NROWA)
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.L_2
     &   ) INFO = 8
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2) L_1 = LDB.LT.MAX(1, NROWB)
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND.L_1) INFO = 10
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND..NOT.L_1) L_0 = LDC.LT.MAX(1, M)
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND..NOT.L_1.AND.L_0) INFO = 13
!$omp end parallel do
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     DO 10 I = 1, M                                     0097
                        C(I,J) = ZERO                                   0098
10                      CONTINUE                                        0099
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     DO 30 I = 1, M                                     0103
                        C(I,J) = BETA*C(I,J)                            0104
30                      CONTINUE                                        0105
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           DO 50 I = 1, M                               0120
                              C(I,J) = ZERO                             0121
50                            CONTINUE                                  0122
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           DO 60 I = 1, M                               0124
                              C(I,J) = BETA*C(I,J)                      0125
60                            CONTINUE                                  0126
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              DO 70 I = 1, M                            0131
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0132
70                               CONTINUE                               0133
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           DO 100 L = 1, K                              0144
                              TEMP = TEMP+A(L,I)*B(L,J)                 0145
100                           CONTINUE                                  0146
                           L_7 = BETA.EQ.ZERO
!$PIPS IF_TO_CONVERT
                           IF (L_7) C(I,J) = ALPHA*TEMP
!$omp end parallel do
!$PIPS IF_TO_CONVERT
                           IF (.NOT.L_7) C(I,J) = ALPHA*TEMP+BETA*C(I
     &                     ,J)
!$omp end parallel do
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        DO 130 I = 1, M                                 0162
                           C(I,J) = ZERO                                0163
130                        CONTINUE                                     0164
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        DO 140 I = 1, M                                 0166
                           C(I,J) = BETA*C(I,J)                         0167
140                        CONTINUE                                     0168
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           DO 150 I = 1, M                              0173
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0174
150                           CONTINUE                                  0175
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        DO 180 L = 1, K                                 0186
                           TEMP = TEMP+A(L,I)*B(J,L)                    0187
180                        CONTINUE                                     0188
                        L_8 = BETA.EQ.ZERO
!$PIPS IF_TO_CONVERT
                        IF (L_8) C(I,J) = ALPHA*TEMP
!$omp end parallel do
!$PIPS IF_TO_CONVERT
                        IF (.NOT.L_8) C(I,J) = ALPHA*TEMP+BETA*C(I,J)
!$omp end parallel do
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:
     &SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
!$PIPS IF_TO_CONVERT
      IF (NOTA) THEN
         NROWA = M                                                      0045
         NCOLA = K                                                      0046
      ENDIF
!$omp end parallel do
!$PIPS IF_TO_CONVERT
      IF (.NOT.NOTA) THEN
         NROWA = K                                                      0048
         NCOLA = M                                                      0049
      ENDIF
!$omp end parallel do
!$PIPS IF_TO_CONVERT
      IF (NOTB) NROWB = K
!$omp end parallel do
!$PIPS IF_TO_CONVERT
      IF (.NOT.NOTB) NROWB = N
!$omp end parallel do
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSE
         L_6 = .NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(
     &   TRANSB, 'T')
!$PIPS IF_TO_CONVERT
         IF (L_6) INFO = 2
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6) L_5 = M.LT.0
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND.L_5) INFO = 3
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5) L_4 = N.LT.0
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND.L_4) INFO = 4
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4) L_3 = K.LT.0
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND.L_3) INFO = 5
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3) L_2 = 
     &   LDA.LT.MAX(1, NROWA)
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.L_2
     &   ) INFO = 8
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2) L_1 = LDB.LT.MAX(1, NROWB)
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND.L_1) INFO = 10
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND..NOT.L_1) L_0 = LDC.LT.MAX(1, M)
!$omp end parallel do
!$PIPS IF_TO_CONVERT
         IF (.NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND..NOT.L_1.AND.L_0) INFO = 13
!$omp end parallel do
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     DO 10 I = 1, M                                     0097
                        C(I,J) = ZERO                                   0098
10                      CONTINUE                                        0099
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     DO 30 I = 1, M                                     0103
                        C(I,J) = BETA*C(I,J)                            0104
30                      CONTINUE                                        0105
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           DO 50 I = 1, M                               0120
                              C(I,J) = ZERO                             0121
50                            CONTINUE                                  0122
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           DO 60 I = 1, M                               0124
                              C(I,J) = BETA*C(I,J)                      0125
60                            CONTINUE                                  0126
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              DO 70 I = 1, M                            0131
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0132
70                               CONTINUE                               0133
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           DO 100 L = 1, K                              0144
                              TEMP = TEMP+A(L,I)*B(L,J)                 0145
100                           CONTINUE                                  0146
                           L_7 = BETA.EQ.ZERO
!$PIPS IF_TO_CONVERT
                           IF (L_7) C(I,J) = ALPHA*TEMP
!$omp end parallel do
!$PIPS IF_TO_CONVERT
                           IF (.NOT.L_7) C(I,J) = ALPHA*TEMP+BETA*C(I
     &                     ,J)
!$omp end parallel do
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        DO 130 I = 1, M                                 0162
                           C(I,J) = ZERO                                0163
130                        CONTINUE                                     0164
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        DO 140 I = 1, M                                 0166
                           C(I,J) = BETA*C(I,J)                         0167
140                        CONTINUE                                     0168
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           DO 150 I = 1, M                              0173
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0174
150                           CONTINUE                                  0175
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        DO 180 L = 1, K                                 0186
                           TEMP = TEMP+A(L,I)*B(J,L)                    0187
180                        CONTINUE                                     0188
                        L_8 = BETA.EQ.ZERO
!$PIPS IF_TO_CONVERT
                        IF (L_8) C(I,J) = ALPHA*TEMP
!$omp end parallel do
!$PIPS IF_TO_CONVERT
                        IF (.NOT.L_8) C(I,J) = ALPHA*TEMP+BETA*C(I,J)
!$omp end parallel do
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 C3, C2, C1, C0, ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:
     &SIZE), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL L_00, L_10, L_20, L_30, L_40, L_50, L_8, L_7, L_6, L_5
     &, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      NROWA = NOTA?M:NROWA
      NCOLA = NOTA?K:NCOLA
      NROWA = .NOT.NOTA?K:NROWA
      NCOLA = .NOT.NOTA?M:NCOLA
      NROWB = NOTB?K:NROWB
      NROWB = .NOT.NOTB?N:NROWB
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSE
         L_6 = .NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(
     &   TRANSB, 'T')
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_5 = .NOT.L_6?L_50:L_5
         INFO = .NOT.L_6.AND.L_5?3:INFO
         L_40 = N.LT.0
         L_4 = .NOT.L_6.AND..NOT.L_5?L_40:L_4
         INFO = .NOT.L_6.AND..NOT.L_5.AND.L_4?4:INFO
         L_30 = K.LT.0
         L_3 = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4?L_30:L_3
         INFO = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND.L_3?5:INFO
         L_20 = LDA.LT.MAX(1, NROWA)
         L_2 = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3?L_20:
     &   L_2
         INFO = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   L_2?8:INFO
         L_10 = LDB.LT.MAX(1, NROWB)
         L_1 = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2?L_10:L_1
         INFO = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND.L_1?10:INFO
         L_00 = LDC.LT.MAX(1, M)
         L_0 = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND..NOT.L_1?L_00:L_0
         INFO = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND..NOT.L_1.AND.L_0?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     DO 10 I = 1, M                                     0097
                        C(I,J) = ZERO                                   0098
10                      CONTINUE                                        0099
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     DO 30 I = 1, M                                     0103
                        C(I,J) = BETA*C(I,J)                            0104
30                      CONTINUE                                        0105
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           DO 50 I = 1, M                               0120
                              C(I,J) = ZERO                             0121
50                            CONTINUE                                  0122
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           DO 60 I = 1, M                               0124
                              C(I,J) = BETA*C(I,J)                      0125
60                            CONTINUE                                  0126
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              DO 70 I = 1, M                            0131
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0132
70                               CONTINUE                               0133
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           DO 100 L = 1, K                              0144
                              TEMP = TEMP+A(L,I)*B(L,J)                 0145
100                           CONTINUE                                  0146
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           C1 = ALPHA*TEMP+BETA*C(I,J)
                           C(I,J) = .NOT.L_7?C1:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        DO 130 I = 1, M                                 0162
                           C(I,J) = ZERO                                0163
130                        CONTINUE                                     0164
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        DO 140 I = 1, M                                 0166
                           C(I,J) = BETA*C(I,J)                         0167
140                        CONTINUE                                     0168
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           DO 150 I = 1, M                              0173
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0174
150                           CONTINUE                                  0175
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        DO 180 L = 1, K                                 0186
                           TEMP = TEMP+A(L,I)*B(J,L)                    0187
180                        CONTINUE                                     0188
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        C3 = ALPHA*TEMP+BETA*C(I,J)
                        C(I,J) = .NOT.L_8?C3:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, NROWA, 
     &NROWB
      REAL*4 C3, C2, C1, C0, ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:
     &SIZE), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL L_00, L_10, L_20, L_30, L_40, L_50, L_8, L_7, L_6, L_5
     &, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSE
         L_6 = .NOT.NOTB.AND..NOT.LSAME(TRANSB, 'C').AND..NOT.LSAME(
     &   TRANSB, 'T')
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_5 = .NOT.L_6?L_50:L_5
         INFO = .NOT.L_6.AND.L_5?3:INFO
         L_40 = N.LT.0
         L_4 = .NOT.L_6.AND..NOT.L_5?L_40:L_4
         INFO = .NOT.L_6.AND..NOT.L_5.AND.L_4?4:INFO
         L_30 = K.LT.0
         L_3 = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4?L_30:L_3
         INFO = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND.L_3?5:INFO
         L_20 = LDA.LT.MAX(1, NROWA)
         L_2 = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3?L_20:
     &   L_2
         INFO = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   L_2?8:INFO
         L_10 = LDB.LT.MAX(1, NROWB)
         L_1 = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2?L_10:L_1
         INFO = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND.L_1?10:INFO
         L_00 = LDC.LT.MAX(1, M)
         L_0 = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND..NOT.L_1?L_00:L_0
         INFO = .NOT.L_6.AND..NOT.L_5.AND..NOT.L_4.AND..NOT.L_3.AND.
     &   .NOT.L_2.AND..NOT.L_1.AND.L_0?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     DO 10 I = 1, M                                     0097
                        C(I,J) = ZERO                                   0098
10                      CONTINUE                                        0099
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     DO 30 I = 1, M                                     0103
                        C(I,J) = BETA*C(I,J)                            0104
30                      CONTINUE                                        0105
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           DO 50 I = 1, M                               0120
                              C(I,J) = ZERO                             0121
50                            CONTINUE                                  0122
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           DO 60 I = 1, M                               0124
                              C(I,J) = BETA*C(I,J)                      0125
60                            CONTINUE                                  0126
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              DO 70 I = 1, M                            0131
                                 C(I,J) = C(I,J)+TEMP*A(I,L)            0132
70                               CONTINUE                               0133
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           DO 100 L = 1, K                              0144
                              TEMP = TEMP+A(L,I)*B(L,J)                 0145
100                           CONTINUE                                  0146
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           C1 = ALPHA*TEMP+BETA*C(I,J)
                           C(I,J) = .NOT.L_7?C1:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        DO 130 I = 1, M                                 0162
                           C(I,J) = ZERO                                0163
130                        CONTINUE                                     0164
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        DO 140 I = 1, M                                 0166
                           C(I,J) = BETA*C(I,J)                         0167
140                        CONTINUE                                     0168
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           DO 150 I = 1, M                              0173
                              C(I,J) = C(I,J)+TEMP*A(I,L)               0174
150                           CONTINUE                                  0175
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        DO 180 L = 1, K                                 0186
                           TEMP = TEMP+A(L,I)*B(J,L)                    0187
180                        CONTINUE                                     0188
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        C3 = ALPHA*TEMP+BETA*C(I,J)
                        C(I,J) = .NOT.L_8?C3:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER I_2, I_1, I_0, M, N, K, LDA, LDB, LDC, I, INFO, J, L, 
     &NCOLA, NROWA, NROWB
      REAL*4 F_7, F_6, F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, 
     &ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:
     &SIZE), TEMP, ONE, ZERO
      LOGICAL L_99, L_98, L_97, L_96, L_95, L_94, L_93, L_92, L_91, 
     &L_90, L_89, L_88, L_87, L_86, L_85, L_84, L_83, L_82, L_81, 
     &L_80, L_79, L_78, L_77, L_76, L_75, L_74, L_73, L_72, L_71, 
     &L_70, L_69, L_68, L_67, L_66, L_65, L_64, L_63, L_62, L_61, 
     &L_60, L_59, L_58, L_57, L_56, L_55, L_54, L_53, L_52, L_51, 
     &L_49, L_48, L_47, L_46, L_45, L_44, L_43, L_42, L_41, L_39, 
     &L_38, L_37, L_36, L_35, L_34, L_33, L_32, L_31, L_29, L_28, 
     &L_27, L_26, L_25, L_24, L_23, L_22, L_21, L_19, L_18, L_17, 
     &L_16, L_15, L_14, L_13, L_12, L_11, L_9, L_00, L_10, L_20, L_30
     &, L_40, L_50, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA
     &, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSE
         L_9 = .NOT.NOTB
         L_11 = LSAME(TRANSB, 'C')
         L_12 = .NOT.L_11
         L_13 = L_9.AND.L_12
         L_14 = LSAME(TRANSB, 'T')
         L_15 = .NOT.L_14
         L_6 = L_13.AND.L_15
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_16 = .NOT.L_6
         L_5 = L_16?L_50:L_5
         L_17 = .NOT.L_6
         L_18 = L_17.AND.L_5
         INFO = L_18?3:INFO
         L_40 = N.LT.0
         L_19 = .NOT.L_6
         L_21 = .NOT.L_5
         L_22 = L_19.AND.L_21
         L_4 = L_22?L_40:L_4
         L_23 = .NOT.L_6
         L_24 = .NOT.L_5
         L_25 = L_24.AND.L_4
         L_26 = L_23.AND.L_25
         INFO = L_26?4:INFO
         L_30 = K.LT.0
         L_27 = .NOT.L_6
         L_28 = .NOT.L_5
         L_29 = .NOT.L_4
         L_31 = L_28.AND.L_29
         L_32 = L_27.AND.L_31
         L_3 = L_32?L_30:L_3
         L_33 = .NOT.L_6
         L_34 = .NOT.L_5
         L_35 = .NOT.L_4
         L_36 = L_35.AND.L_3
         L_37 = L_34.AND.L_36
         L_38 = L_33.AND.L_37
         INFO = L_38?5:INFO
         I_0 = MAX(1, NROWA)
         L_20 = LDA.LT.I_0
         L_39 = .NOT.L_6
         L_41 = .NOT.L_5
         L_42 = .NOT.L_4
         L_43 = .NOT.L_3
         L_44 = L_42.AND.L_43
         L_45 = L_41.AND.L_44
         L_46 = L_39.AND.L_45
         L_2 = L_46?L_20:L_2
         L_47 = .NOT.L_6
         L_48 = .NOT.L_5
         L_49 = .NOT.L_4
         L_51 = .NOT.L_3
         L_52 = L_51.AND.L_2
         L_53 = L_49.AND.L_52
         L_54 = L_48.AND.L_53
         L_55 = L_47.AND.L_54
         INFO = L_55?8:INFO
         I_1 = MAX(1, NROWB)
         L_10 = LDB.LT.I_1
         L_56 = .NOT.L_6
         L_57 = .NOT.L_5
         L_58 = .NOT.L_4
         L_59 = .NOT.L_3
         L_60 = .NOT.L_2
         L_61 = L_59.AND.L_60
         L_62 = L_58.AND.L_61
         L_63 = L_57.AND.L_62
         L_64 = L_56.AND.L_63
         L_1 = L_64?L_10:L_1
         L_65 = .NOT.L_6
         L_66 = .NOT.L_5
         L_67 = .NOT.L_4
         L_68 = .NOT.L_3
         L_69 = .NOT.L_2
         L_70 = L_69.AND.L_1
         L_71 = L_68.AND.L_70
         L_72 = L_67.AND.L_71
         L_73 = L_66.AND.L_72
         L_74 = L_65.AND.L_73
         INFO = L_74?10:INFO
         I_2 = MAX(1, M)
         L_00 = LDC.LT.I_2
         L_75 = .NOT.L_6
         L_76 = .NOT.L_5
         L_77 = .NOT.L_4
         L_78 = .NOT.L_3
         L_79 = .NOT.L_2
         L_80 = .NOT.L_1
         L_81 = L_79.AND.L_80
         L_82 = L_78.AND.L_81
         L_83 = L_77.AND.L_82
         L_84 = L_76.AND.L_83
         L_85 = L_75.AND.L_84
         L_0 = L_85?L_00:L_0
         L_86 = .NOT.L_6
         L_87 = .NOT.L_5
         L_88 = .NOT.L_4
         L_89 = .NOT.L_3
         L_90 = .NOT.L_2
         L_91 = .NOT.L_1
         L_92 = L_91.AND.L_0
         L_93 = L_90.AND.L_92
         L_94 = L_89.AND.L_93
         L_95 = L_88.AND.L_94
         L_96 = L_87.AND.L_95
         L_97 = L_86.AND.L_96
         INFO = L_97?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     DO 10 I = 1, M                                     0097
                        C(I,J) = ZERO                                   0098
10                      CONTINUE                                        0099
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     DO 30 I = 1, M                                     0103
                        C(I,J) = BETA*C(I,J)                            0104
30                      CONTINUE                                        0105
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           DO 50 I = 1, M                               0120
                              C(I,J) = ZERO                             0121
50                            CONTINUE                                  0122
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           DO 60 I = 1, M                               0124
                              C(I,J) = BETA*C(I,J)                      0125
60                            CONTINUE                                  0126
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              DO 70 I = 1, M                            0131
                                 F_0 = TEMP*A(I,L)
                                 C(I,J) = C(I,J)+F_0                    0132
70                               CONTINUE                               0133
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           DO 100 L = 1, K                              0144
                              F_1 = A(L,I)*B(L,J)
                              TEMP = TEMP+F_1                           0145
100                           CONTINUE                                  0146
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           F_2 = ALPHA*TEMP
                           F_3 = BETA*C(I,J)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J) = L_98?C1:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        DO 130 I = 1, M                                 0162
                           C(I,J) = ZERO                                0163
130                        CONTINUE                                     0164
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        DO 140 I = 1, M                                 0166
                           C(I,J) = BETA*C(I,J)                         0167
140                        CONTINUE                                     0168
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           DO 150 I = 1, M                              0173
                              F_4 = TEMP*A(I,L)
                              C(I,J) = C(I,J)+F_4                       0174
150                           CONTINUE                                  0175
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        DO 180 L = 1, K                                 0186
                           F_5 = A(L,I)*B(J,L)
                           TEMP = TEMP+F_5                              0187
180                        CONTINUE                                     0188
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        F_6 = ALPHA*TEMP
                        F_7 = BETA*C(I,J)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J) = L_99?C3:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER LU_IND9, LU_IB9, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, 
     &LU_IND7, LU_IB7, LU_NUB7, LU_IND6, LU_IB6, LU_NUB6, LU_IND5, 
     &LU_IB5, LU_NUB5, LU_IND4, LU_IB4, LU_NUB4, LU_IND3, LU_IB3, 
     &LU_NUB3, LU_IND2, LU_IB2, LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, 
     &LU_IND0, LU_IB0, LU_NUB0, I_2, I_1, I_0, M, N, K, LDA, LDB, LDC
     &, I, INFO, J, L, NCOLA, NROWA, NROWB
      REAL*4 F_7, F_6, F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, 
     &ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:
     &SIZE), TEMP, ONE, ZERO
      LOGICAL L_99, L_98, L_97, L_96, L_95, L_94, L_93, L_92, L_91, 
     &L_90, L_89, L_88, L_87, L_86, L_85, L_84, L_83, L_82, L_81, 
     &L_80, L_79, L_78, L_77, L_76, L_75, L_74, L_73, L_72, L_71, 
     &L_70, L_69, L_68, L_67, L_66, L_65, L_64, L_63, L_62, L_61, 
     &L_60, L_59, L_58, L_57, L_56, L_55, L_54, L_53, L_52, L_51, 
     &L_49, L_48, L_47, L_46, L_45, L_44, L_43, L_42, L_41, L_39, 
     &L_38, L_37, L_36, L_35, L_34, L_33, L_32, L_31, L_29, L_28, 
     &L_27, L_26, L_25, L_24, L_23, L_22, L_21, L_19, L_18, L_17, 
     &L_16, L_15, L_14, L_13, L_12, L_11, L_9, L_00, L_10, L_20, L_30
     &, L_40, L_50, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA
     &, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSE
         L_9 = .NOT.NOTB
         L_11 = LSAME(TRANSB, 'C')
         L_12 = .NOT.L_11
         L_13 = L_9.AND.L_12
         L_14 = LSAME(TRANSB, 'T')
         L_15 = .NOT.L_14
         L_6 = L_13.AND.L_15
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_16 = .NOT.L_6
         L_5 = L_16?L_50:L_5
         L_17 = .NOT.L_6
         L_18 = L_17.AND.L_5
         INFO = L_18?3:INFO
         L_40 = N.LT.0
         L_19 = .NOT.L_6
         L_21 = .NOT.L_5
         L_22 = L_19.AND.L_21
         L_4 = L_22?L_40:L_4
         L_23 = .NOT.L_6
         L_24 = .NOT.L_5
         L_25 = L_24.AND.L_4
         L_26 = L_23.AND.L_25
         INFO = L_26?4:INFO
         L_30 = K.LT.0
         L_27 = .NOT.L_6
         L_28 = .NOT.L_5
         L_29 = .NOT.L_4
         L_31 = L_28.AND.L_29
         L_32 = L_27.AND.L_31
         L_3 = L_32?L_30:L_3
         L_33 = .NOT.L_6
         L_34 = .NOT.L_5
         L_35 = .NOT.L_4
         L_36 = L_35.AND.L_3
         L_37 = L_34.AND.L_36
         L_38 = L_33.AND.L_37
         INFO = L_38?5:INFO
         I_0 = MAX(1, NROWA)
         L_20 = LDA.LT.I_0
         L_39 = .NOT.L_6
         L_41 = .NOT.L_5
         L_42 = .NOT.L_4
         L_43 = .NOT.L_3
         L_44 = L_42.AND.L_43
         L_45 = L_41.AND.L_44
         L_46 = L_39.AND.L_45
         L_2 = L_46?L_20:L_2
         L_47 = .NOT.L_6
         L_48 = .NOT.L_5
         L_49 = .NOT.L_4
         L_51 = .NOT.L_3
         L_52 = L_51.AND.L_2
         L_53 = L_49.AND.L_52
         L_54 = L_48.AND.L_53
         L_55 = L_47.AND.L_54
         INFO = L_55?8:INFO
         I_1 = MAX(1, NROWB)
         L_10 = LDB.LT.I_1
         L_56 = .NOT.L_6
         L_57 = .NOT.L_5
         L_58 = .NOT.L_4
         L_59 = .NOT.L_3
         L_60 = .NOT.L_2
         L_61 = L_59.AND.L_60
         L_62 = L_58.AND.L_61
         L_63 = L_57.AND.L_62
         L_64 = L_56.AND.L_63
         L_1 = L_64?L_10:L_1
         L_65 = .NOT.L_6
         L_66 = .NOT.L_5
         L_67 = .NOT.L_4
         L_68 = .NOT.L_3
         L_69 = .NOT.L_2
         L_70 = L_69.AND.L_1
         L_71 = L_68.AND.L_70
         L_72 = L_67.AND.L_71
         L_73 = L_66.AND.L_72
         L_74 = L_65.AND.L_73
         INFO = L_74?10:INFO
         I_2 = MAX(1, M)
         L_00 = LDC.LT.I_2
         L_75 = .NOT.L_6
         L_76 = .NOT.L_5
         L_77 = .NOT.L_4
         L_78 = .NOT.L_3
         L_79 = .NOT.L_2
         L_80 = .NOT.L_1
         L_81 = L_79.AND.L_80
         L_82 = L_78.AND.L_81
         L_83 = L_77.AND.L_82
         L_84 = L_76.AND.L_83
         L_85 = L_75.AND.L_84
         L_0 = L_85?L_00:L_0
         L_86 = .NOT.L_6
         L_87 = .NOT.L_5
         L_88 = .NOT.L_4
         L_89 = .NOT.L_3
         L_90 = .NOT.L_2
         L_91 = .NOT.L_1
         L_92 = L_91.AND.L_0
         L_93 = L_90.AND.L_92
         L_94 = L_89.AND.L_93
         L_95 = L_88.AND.L_94
         L_96 = L_87.AND.L_95
         L_97 = L_86.AND.L_96
         INFO = L_97?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     LU_NUB0 = M
                     LU_IB0 = MOD(LU_NUB0, 4)
                     DO 99999 LU_IND0 = 0, LU_IB0-1
                        C(LU_IND0+1,J) = ZERO
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB0, LU_NUB0-1, 4
c SIMD_COMMENT_0
                        C(LU_IND0+1,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+2,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+3,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+4,J) = ZERO
99998                   CONTINUE
                     I = MAX0(LU_NUB0, 0)+1
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     LU_NUB1 = M
                     LU_IB1 = MOD(LU_NUB1, 4)
                     DO 99997 LU_IND1 = 0, LU_IB1-1
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB1, LU_NUB1-1, 4
c SIMD_COMMENT_0
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
c SIMD_COMMENT_0
                        C(LU_IND1+2,J) = BETA*C(LU_IND1+2,J)
c SIMD_COMMENT_0
                        C(LU_IND1+3,J) = BETA*C(LU_IND1+3,J)
c SIMD_COMMENT_0
                        C(LU_IND1+4,J) = BETA*C(LU_IND1+4,J)
99996                   CONTINUE
                     I = MAX0(LU_NUB1, 0)+1
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           LU_NUB2 = M
                           LU_IB2 = MOD(LU_NUB2, 4)
                           DO 99995 LU_IND2 = 0, LU_IB2-1
                              C(LU_IND2+1,J) = ZERO
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB2, LU_NUB2-1, 4
c SIMD_COMMENT_0
                              C(LU_IND2+1,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+2,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+3,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+4,J) = ZERO
99994                         CONTINUE
                           I = MAX0(LU_NUB2, 0)+1
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           LU_NUB3 = M
                           LU_IB3 = MOD(LU_NUB3, 4)
                           DO 99993 LU_IND3 = 0, LU_IB3-1
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB3, LU_NUB3-1, 4
c SIMD_COMMENT_0
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
c SIMD_COMMENT_0
                              C(LU_IND3+2,J) = BETA*C(LU_IND3+2,J)
c SIMD_COMMENT_0
                              C(LU_IND3+3,J) = BETA*C(LU_IND3+3,J)
c SIMD_COMMENT_0
                              C(LU_IND3+4,J) = BETA*C(LU_IND3+4,J)
99992                         CONTINUE
                           I = MAX0(LU_NUB3, 0)+1
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              LU_NUB4 = M
                              LU_IB4 = MOD(LU_NUB4, 4)
                              DO 99991 LU_IND4 = 0, LU_IB4-1
                                 F_0 = TEMP*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB4, LU_NUB4-1, 4
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+1,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+2,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+2,J) = C(LU_IND4+2,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+3,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+3,J) = C(LU_IND4+3,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+4,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+4,J) = C(LU_IND4+4,J)+F_0
99990                            CONTINUE
                              I = MAX0(LU_NUB4, 0)+1
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           LU_NUB5 = K
                           LU_IB5 = MOD(LU_NUB5, 4)
                           DO 99989 LU_IND5 = 0, LU_IB5-1
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
                              TEMP = TEMP+F_1
99989                         CONTINUE
                           DO 99988 LU_IND5 = LU_IB5, LU_NUB5-1, 4
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
c SIMD_COMMENT_1
                              TEMP = TEMP+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+2,I)*B(LU_IND5+2,J)
c SIMD_COMMENT_1
                              TEMP = TEMP+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+3,I)*B(LU_IND5+3,J)
c SIMD_COMMENT_1
                              TEMP = TEMP+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+4,I)*B(LU_IND5+4,J)
c SIMD_COMMENT_1
                              TEMP = TEMP+F_1
99988                         CONTINUE
                           L = MAX0(LU_NUB5, 0)+1
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           F_2 = ALPHA*TEMP
                           F_3 = BETA*C(I,J)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J) = L_98?C1:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        LU_NUB6 = M
                        LU_IB6 = MOD(LU_NUB6, 4)
                        DO 99987 LU_IND6 = 0, LU_IB6-1
                           C(LU_IND6+1,J) = ZERO
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB6, LU_NUB6-1, 4
c SIMD_COMMENT_0
                           C(LU_IND6+1,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+2,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+3,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+4,J) = ZERO
99986                      CONTINUE
                        I = MAX0(LU_NUB6, 0)+1
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        LU_NUB7 = M
                        LU_IB7 = MOD(LU_NUB7, 4)
                        DO 99985 LU_IND7 = 0, LU_IB7-1
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB7, LU_NUB7-1, 4
c SIMD_COMMENT_0
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
c SIMD_COMMENT_0
                           C(LU_IND7+2,J) = BETA*C(LU_IND7+2,J)
c SIMD_COMMENT_0
                           C(LU_IND7+3,J) = BETA*C(LU_IND7+3,J)
c SIMD_COMMENT_0
                           C(LU_IND7+4,J) = BETA*C(LU_IND7+4,J)
99984                      CONTINUE
                        I = MAX0(LU_NUB7, 0)+1
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           LU_NUB8 = M
                           LU_IB8 = MOD(LU_NUB8, 4)
                           DO 99983 LU_IND8 = 0, LU_IB8-1
                              F_4 = TEMP*A(LU_IND8+1,L)
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB8, LU_NUB8-1, 4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+1,L)
c SIMD_COMMENT_1
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+2,L)
c SIMD_COMMENT_1
                              C(LU_IND8+2,J) = C(LU_IND8+2,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+3,L)
c SIMD_COMMENT_1
                              C(LU_IND8+3,J) = C(LU_IND8+3,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+4,L)
c SIMD_COMMENT_1
                              C(LU_IND8+4,J) = C(LU_IND8+4,J)+F_4
99982                         CONTINUE
                           I = MAX0(LU_NUB8, 0)+1
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        LU_NUB9 = K
                        LU_IB9 = MOD(LU_NUB9, 4)
                        DO 99981 LU_IND9 = 0, LU_IB9-1
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
                           TEMP = TEMP+F_5
99981                      CONTINUE
                        DO 99980 LU_IND9 = LU_IB9, LU_NUB9-1, 4
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
c SIMD_COMMENT_1
                           TEMP = TEMP+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+2,I)*B(J,LU_IND9+2)
c SIMD_COMMENT_1
                           TEMP = TEMP+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+3,I)*B(J,LU_IND9+3)
c SIMD_COMMENT_1
                           TEMP = TEMP+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+4,I)*B(J,LU_IND9+4)
c SIMD_COMMENT_1
                           TEMP = TEMP+F_5
99980                      CONTINUE
                        L = MAX0(LU_NUB9, 0)+1
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        F_6 = ALPHA*TEMP
                        F_7 = BETA*C(I,J)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J) = L_99?C3:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER LU_IND9, LU_IB9, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, 
     &LU_IND7, LU_IB7, LU_NUB7, LU_IND6, LU_IB6, LU_NUB6, LU_IND5, 
     &LU_IB5, LU_NUB5, LU_IND4, LU_IB4, LU_NUB4, LU_IND3, LU_IB3, 
     &LU_NUB3, LU_IND2, LU_IB2, LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, 
     &LU_IND0, LU_IB0, LU_NUB0, I_2, I_1, I_0, M, N, K, LDA, LDB, LDC
     &, I, INFO, J, L, NCOLA, NROWA, NROWB
      REAL*4 RED3(0:3), RED2(0:0), RED1(0:3), RED0(0:0), F_7, F_6, 
     &F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, ALPHA, A(1:SIZE, 
     &1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE
     &, ZERO
      LOGICAL L_99, L_98, L_97, L_96, L_95, L_94, L_93, L_92, L_91, 
     &L_90, L_89, L_88, L_87, L_86, L_85, L_84, L_83, L_82, L_81, 
     &L_80, L_79, L_78, L_77, L_76, L_75, L_74, L_73, L_72, L_71, 
     &L_70, L_69, L_68, L_67, L_66, L_65, L_64, L_63, L_62, L_61, 
     &L_60, L_59, L_58, L_57, L_56, L_55, L_54, L_53, L_52, L_51, 
     &L_49, L_48, L_47, L_46, L_45, L_44, L_43, L_42, L_41, L_39, 
     &L_38, L_37, L_36, L_35, L_34, L_33, L_32, L_31, L_29, L_28, 
     &L_27, L_26, L_25, L_24, L_23, L_22, L_21, L_19, L_18, L_17, 
     &L_16, L_15, L_14, L_13, L_12, L_11, L_9, L_00, L_10, L_20, L_30
     &, L_40, L_50, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA
     &, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSE
         L_9 = .NOT.NOTB
         L_11 = LSAME(TRANSB, 'C')
         L_12 = .NOT.L_11
         L_13 = L_9.AND.L_12
         L_14 = LSAME(TRANSB, 'T')
         L_15 = .NOT.L_14
         L_6 = L_13.AND.L_15
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_16 = .NOT.L_6
         L_5 = L_16?L_50:L_5
         L_17 = .NOT.L_6
         L_18 = L_17.AND.L_5
         INFO = L_18?3:INFO
         L_40 = N.LT.0
         L_19 = .NOT.L_6
         L_21 = .NOT.L_5
         L_22 = L_19.AND.L_21
         L_4 = L_22?L_40:L_4
         L_23 = .NOT.L_6
         L_24 = .NOT.L_5
         L_25 = L_24.AND.L_4
         L_26 = L_23.AND.L_25
         INFO = L_26?4:INFO
         L_30 = K.LT.0
         L_27 = .NOT.L_6
         L_28 = .NOT.L_5
         L_29 = .NOT.L_4
         L_31 = L_28.AND.L_29
         L_32 = L_27.AND.L_31
         L_3 = L_32?L_30:L_3
         L_33 = .NOT.L_6
         L_34 = .NOT.L_5
         L_35 = .NOT.L_4
         L_36 = L_35.AND.L_3
         L_37 = L_34.AND.L_36
         L_38 = L_33.AND.L_37
         INFO = L_38?5:INFO
         I_0 = MAX(1, NROWA)
         L_20 = LDA.LT.I_0
         L_39 = .NOT.L_6
         L_41 = .NOT.L_5
         L_42 = .NOT.L_4
         L_43 = .NOT.L_3
         L_44 = L_42.AND.L_43
         L_45 = L_41.AND.L_44
         L_46 = L_39.AND.L_45
         L_2 = L_46?L_20:L_2
         L_47 = .NOT.L_6
         L_48 = .NOT.L_5
         L_49 = .NOT.L_4
         L_51 = .NOT.L_3
         L_52 = L_51.AND.L_2
         L_53 = L_49.AND.L_52
         L_54 = L_48.AND.L_53
         L_55 = L_47.AND.L_54
         INFO = L_55?8:INFO
         I_1 = MAX(1, NROWB)
         L_10 = LDB.LT.I_1
         L_56 = .NOT.L_6
         L_57 = .NOT.L_5
         L_58 = .NOT.L_4
         L_59 = .NOT.L_3
         L_60 = .NOT.L_2
         L_61 = L_59.AND.L_60
         L_62 = L_58.AND.L_61
         L_63 = L_57.AND.L_62
         L_64 = L_56.AND.L_63
         L_1 = L_64?L_10:L_1
         L_65 = .NOT.L_6
         L_66 = .NOT.L_5
         L_67 = .NOT.L_4
         L_68 = .NOT.L_3
         L_69 = .NOT.L_2
         L_70 = L_69.AND.L_1
         L_71 = L_68.AND.L_70
         L_72 = L_67.AND.L_71
         L_73 = L_66.AND.L_72
         L_74 = L_65.AND.L_73
         INFO = L_74?10:INFO
         I_2 = MAX(1, M)
         L_00 = LDC.LT.I_2
         L_75 = .NOT.L_6
         L_76 = .NOT.L_5
         L_77 = .NOT.L_4
         L_78 = .NOT.L_3
         L_79 = .NOT.L_2
         L_80 = .NOT.L_1
         L_81 = L_79.AND.L_80
         L_82 = L_78.AND.L_81
         L_83 = L_77.AND.L_82
         L_84 = L_76.AND.L_83
         L_85 = L_75.AND.L_84
         L_0 = L_85?L_00:L_0
         L_86 = .NOT.L_6
         L_87 = .NOT.L_5
         L_88 = .NOT.L_4
         L_89 = .NOT.L_3
         L_90 = .NOT.L_2
         L_91 = .NOT.L_1
         L_92 = L_91.AND.L_0
         L_93 = L_90.AND.L_92
         L_94 = L_89.AND.L_93
         L_95 = L_88.AND.L_94
         L_96 = L_87.AND.L_95
         L_97 = L_86.AND.L_96
         INFO = L_97?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     LU_NUB0 = M
                     LU_IB0 = MOD(LU_NUB0, 4)
                     DO 99999 LU_IND0 = 0, LU_IB0-1
                        C(LU_IND0+1,J) = ZERO
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB0, LU_NUB0-1, 4
c SIMD_COMMENT_0
                        C(LU_IND0+1,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+2,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+3,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+4,J) = ZERO
99998                   CONTINUE
                     I = MAX0(LU_NUB0, 0)+1
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     LU_NUB1 = M
                     LU_IB1 = MOD(LU_NUB1, 4)
                     DO 99997 LU_IND1 = 0, LU_IB1-1
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB1, LU_NUB1-1, 4
c SIMD_COMMENT_0
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
c SIMD_COMMENT_0
                        C(LU_IND1+2,J) = BETA*C(LU_IND1+2,J)
c SIMD_COMMENT_0
                        C(LU_IND1+3,J) = BETA*C(LU_IND1+3,J)
c SIMD_COMMENT_0
                        C(LU_IND1+4,J) = BETA*C(LU_IND1+4,J)
99996                   CONTINUE
                     I = MAX0(LU_NUB1, 0)+1
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           LU_NUB2 = M
                           LU_IB2 = MOD(LU_NUB2, 4)
                           DO 99995 LU_IND2 = 0, LU_IB2-1
                              C(LU_IND2+1,J) = ZERO
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB2, LU_NUB2-1, 4
c SIMD_COMMENT_0
                              C(LU_IND2+1,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+2,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+3,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+4,J) = ZERO
99994                         CONTINUE
                           I = MAX0(LU_NUB2, 0)+1
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           LU_NUB3 = M
                           LU_IB3 = MOD(LU_NUB3, 4)
                           DO 99993 LU_IND3 = 0, LU_IB3-1
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB3, LU_NUB3-1, 4
c SIMD_COMMENT_0
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
c SIMD_COMMENT_0
                              C(LU_IND3+2,J) = BETA*C(LU_IND3+2,J)
c SIMD_COMMENT_0
                              C(LU_IND3+3,J) = BETA*C(LU_IND3+3,J)
c SIMD_COMMENT_0
                              C(LU_IND3+4,J) = BETA*C(LU_IND3+4,J)
99992                         CONTINUE
                           I = MAX0(LU_NUB3, 0)+1
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              LU_NUB4 = M
                              LU_IB4 = MOD(LU_NUB4, 4)
                              DO 99991 LU_IND4 = 0, LU_IB4-1
                                 F_0 = TEMP*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB4, LU_NUB4-1, 4
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+1,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+2,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+2,J) = C(LU_IND4+2,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+3,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+3,J) = C(LU_IND4+3,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+4,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+4,J) = C(LU_IND4+4,J)+F_0
99990                            CONTINUE
                              I = MAX0(LU_NUB4, 0)+1
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           LU_NUB5 = K
                           LU_IB5 = MOD(LU_NUB5, 4)
                           RED0(0) = 0.000000
                           DO 99989 LU_IND5 = 0, LU_IB5-1
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
                              RED0(0) = RED0(0)+F_1
99989                         CONTINUE
                           TEMP = RED0(0)+TEMP
                           RED1(0) = 0.000000
                           RED1(1) = 0.000000
                           RED1(2) = 0.000000
                           RED1(3) = 0.000000
                           DO 99988 LU_IND5 = LU_IB5, LU_NUB5-1, 4
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
c SIMD_COMMENT_1
                              RED1(0) = RED1(0)+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+2,I)*B(LU_IND5+2,J)
c SIMD_COMMENT_1
                              RED1(1) = RED1(1)+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+3,I)*B(LU_IND5+3,J)
c SIMD_COMMENT_1
                              RED1(2) = RED1(2)+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+4,I)*B(LU_IND5+4,J)
c SIMD_COMMENT_1
                              RED1(3) = RED1(3)+F_1
99988                         CONTINUE
                           TEMP = RED1(3)+RED1(2)+RED1(1)+RED1(0)+
     &                     TEMP
                           L = MAX0(LU_NUB5, 0)+1
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           F_2 = ALPHA*TEMP
                           F_3 = BETA*C(I,J)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J) = L_98?C1:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        LU_NUB6 = M
                        LU_IB6 = MOD(LU_NUB6, 4)
                        DO 99987 LU_IND6 = 0, LU_IB6-1
                           C(LU_IND6+1,J) = ZERO
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB6, LU_NUB6-1, 4
c SIMD_COMMENT_0
                           C(LU_IND6+1,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+2,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+3,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+4,J) = ZERO
99986                      CONTINUE
                        I = MAX0(LU_NUB6, 0)+1
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        LU_NUB7 = M
                        LU_IB7 = MOD(LU_NUB7, 4)
                        DO 99985 LU_IND7 = 0, LU_IB7-1
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB7, LU_NUB7-1, 4
c SIMD_COMMENT_0
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
c SIMD_COMMENT_0
                           C(LU_IND7+2,J) = BETA*C(LU_IND7+2,J)
c SIMD_COMMENT_0
                           C(LU_IND7+3,J) = BETA*C(LU_IND7+3,J)
c SIMD_COMMENT_0
                           C(LU_IND7+4,J) = BETA*C(LU_IND7+4,J)
99984                      CONTINUE
                        I = MAX0(LU_NUB7, 0)+1
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           LU_NUB8 = M
                           LU_IB8 = MOD(LU_NUB8, 4)
                           DO 99983 LU_IND8 = 0, LU_IB8-1
                              F_4 = TEMP*A(LU_IND8+1,L)
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB8, LU_NUB8-1, 4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+1,L)
c SIMD_COMMENT_1
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+2,L)
c SIMD_COMMENT_1
                              C(LU_IND8+2,J) = C(LU_IND8+2,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+3,L)
c SIMD_COMMENT_1
                              C(LU_IND8+3,J) = C(LU_IND8+3,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+4,L)
c SIMD_COMMENT_1
                              C(LU_IND8+4,J) = C(LU_IND8+4,J)+F_4
99982                         CONTINUE
                           I = MAX0(LU_NUB8, 0)+1
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        LU_NUB9 = K
                        LU_IB9 = MOD(LU_NUB9, 4)
                        RED2(0) = 0.000000
                        DO 99981 LU_IND9 = 0, LU_IB9-1
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
                           RED2(0) = RED2(0)+F_5
99981                      CONTINUE
                        TEMP = RED2(0)+TEMP
                        RED3(0) = 0.000000
                        RED3(1) = 0.000000
                        RED3(2) = 0.000000
                        RED3(3) = 0.000000
                        DO 99980 LU_IND9 = LU_IB9, LU_NUB9-1, 4
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
c SIMD_COMMENT_1
                           RED3(0) = RED3(0)+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+2,I)*B(J,LU_IND9+2)
c SIMD_COMMENT_1
                           RED3(1) = RED3(1)+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+3,I)*B(J,LU_IND9+3)
c SIMD_COMMENT_1
                           RED3(2) = RED3(2)+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+4,I)*B(J,LU_IND9+4)
c SIMD_COMMENT_1
                           RED3(3) = RED3(3)+F_5
99980                      CONTINUE
                        TEMP = RED3(3)+RED3(2)+RED3(1)+RED3(0)+TEMP
                        L = MAX0(LU_NUB9, 0)+1
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        F_6 = ALPHA*TEMP
                        F_7 = BETA*C(I,J)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J) = L_99?C3:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER LU_IND9, LU_IB9, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, 
     &LU_IND7, LU_IB7, LU_NUB7, LU_IND6, LU_IB6, LU_NUB6, LU_IND5, 
     &LU_IB5, LU_NUB5, LU_IND4, LU_IB4, LU_NUB4, LU_IND3, LU_IB3, 
     &LU_NUB3, LU_IND2, LU_IB2, LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, 
     &LU_IND0, LU_IB0, LU_NUB0, I_2, I_1, I_0, M, N, K, LDA, LDB, LDC
     &, I, INFO, J, L, NCOLA, NROWA, NROWB
      REAL*4 RED3(0:3), RED2(0:0), RED1(0:3), RED0(0:0), F_7, F_6, 
     &F_5, F_4, F_3, F_2, F_1, F_0, C3, C2, C1, C0, ALPHA, A(1:SIZE, 
     &1:SIZE), B(1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE
     &, ZERO
      LOGICAL L_99, L_98, L_97, L_96, L_95, L_94, L_93, L_92, L_91, 
     &L_90, L_89, L_88, L_87, L_86, L_85, L_84, L_83, L_82, L_81, 
     &L_80, L_79, L_78, L_77, L_76, L_75, L_74, L_73, L_72, L_71, 
     &L_70, L_69, L_68, L_67, L_66, L_65, L_64, L_63, L_62, L_61, 
     &L_60, L_59, L_58, L_57, L_56, L_55, L_54, L_53, L_52, L_51, 
     &L_49, L_48, L_47, L_46, L_45, L_44, L_43, L_42, L_41, L_39, 
     &L_38, L_37, L_36, L_35, L_34, L_33, L_32, L_31, L_29, L_28, 
     &L_27, L_26, L_25, L_24, L_23, L_22, L_21, L_19, L_18, L_17, 
     &L_16, L_15, L_14, L_13, L_12, L_11, L_9, L_00, L_10, L_20, L_30
     &, L_40, L_50, L_8, L_7, L_6, L_5, L_4, L_3, L_2, L_1, L_0, NOTA
     &, NOTB
      CHARACTER TRANSA, TRANSB
      ONE = 1.0E+0                                                      0033
      ZERO = 0.0E+0                                                     0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA = LSAME(TRANSA, 'N')                                         0042
      NOTB = LSAME(TRANSB, 'N')                                         0043
      NROWA = NOTA?M:K
      NROWB = NOTB?K:N
*
*     Test the input parameters.
*
      INFO = 0                                                          0059
      IF (.NOT.NOTA.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(TRANSA   0060
     &, 'T')) THEN                                                      0060
         INFO = 1                                                       0063
      ELSE
         L_9 = .NOT.NOTB
         L_11 = LSAME(TRANSB, 'C')
         L_12 = .NOT.L_11
         L_13 = L_9.AND.L_12
         L_14 = LSAME(TRANSB, 'T')
         L_15 = .NOT.L_14
         L_6 = L_13.AND.L_15
         INFO = L_6?2:INFO
         L_50 = M.LT.0
         L_16 = .NOT.L_6
         L_5 = L_16?L_50:L_5
         L_17 = .NOT.L_6
         L_18 = L_17.AND.L_5
         INFO = L_18?3:INFO
         L_40 = N.LT.0
         L_19 = .NOT.L_6
         L_21 = .NOT.L_5
         L_22 = L_19.AND.L_21
         L_4 = L_22?L_40:L_4
         L_23 = .NOT.L_6
         L_24 = .NOT.L_5
         L_25 = L_24.AND.L_4
         L_26 = L_23.AND.L_25
         INFO = L_26?4:INFO
         L_30 = K.LT.0
         L_27 = .NOT.L_6
         L_28 = .NOT.L_5
         L_29 = .NOT.L_4
         L_31 = L_28.AND.L_29
         L_32 = L_27.AND.L_31
         L_3 = L_32?L_30:L_3
         L_33 = .NOT.L_6
         L_34 = .NOT.L_5
         L_35 = .NOT.L_4
         L_36 = L_35.AND.L_3
         L_37 = L_34.AND.L_36
         L_38 = L_33.AND.L_37
         INFO = L_38?5:INFO
         I_0 = MAX(1, NROWA)
         L_20 = LDA.LT.I_0
         L_39 = .NOT.L_6
         L_41 = .NOT.L_5
         L_42 = .NOT.L_4
         L_43 = .NOT.L_3
         L_44 = L_42.AND.L_43
         L_45 = L_41.AND.L_44
         L_46 = L_39.AND.L_45
         L_2 = L_46?L_20:L_2
         L_47 = .NOT.L_6
         L_48 = .NOT.L_5
         L_49 = .NOT.L_4
         L_51 = .NOT.L_3
         L_52 = L_51.AND.L_2
         L_53 = L_49.AND.L_52
         L_54 = L_48.AND.L_53
         L_55 = L_47.AND.L_54
         INFO = L_55?8:INFO
         I_1 = MAX(1, NROWB)
         L_10 = LDB.LT.I_1
         L_56 = .NOT.L_6
         L_57 = .NOT.L_5
         L_58 = .NOT.L_4
         L_59 = .NOT.L_3
         L_60 = .NOT.L_2
         L_61 = L_59.AND.L_60
         L_62 = L_58.AND.L_61
         L_63 = L_57.AND.L_62
         L_64 = L_56.AND.L_63
         L_1 = L_64?L_10:L_1
         L_65 = .NOT.L_6
         L_66 = .NOT.L_5
         L_67 = .NOT.L_4
         L_68 = .NOT.L_3
         L_69 = .NOT.L_2
         L_70 = L_69.AND.L_1
         L_71 = L_68.AND.L_70
         L_72 = L_67.AND.L_71
         L_73 = L_66.AND.L_72
         L_74 = L_65.AND.L_73
         INFO = L_74?10:INFO
         I_2 = MAX(1, M)
         L_00 = LDC.LT.I_2
         L_75 = .NOT.L_6
         L_76 = .NOT.L_5
         L_77 = .NOT.L_4
         L_78 = .NOT.L_3
         L_79 = .NOT.L_2
         L_80 = .NOT.L_1
         L_81 = L_79.AND.L_80
         L_82 = L_78.AND.L_81
         L_83 = L_77.AND.L_82
         L_84 = L_76.AND.L_83
         L_85 = L_75.AND.L_84
         L_0 = L_85?L_00:L_0
         L_86 = .NOT.L_6
         L_87 = .NOT.L_5
         L_88 = .NOT.L_4
         L_89 = .NOT.L_3
         L_90 = .NOT.L_2
         L_91 = .NOT.L_1
         L_92 = L_91.AND.L_0
         L_93 = L_90.AND.L_92
         L_94 = L_89.AND.L_93
         L_95 = L_88.AND.L_94
         L_96 = L_87.AND.L_95
         L_97 = L_86.AND.L_96
         INFO = L_97?13:INFO
      ENDIF
      IF (INFO.NE.0) THEN                                               0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO.OR.K.EQ.0).AND.BETA     0088
     &   .EQ.ONE) THEN                                                  0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO) THEN                                     0094
               IF (BETA.EQ.ZERO) THEN                                   0095
                  DO 20 J = 1, N                                        0096
                     LU_NUB0 = M
                     LU_IB0 = MOD(LU_NUB0, 4)
                     DO 99999 LU_IND0 = 0, LU_IB0-1
                        C(LU_IND0+1,J) = ZERO
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB0, LU_NUB0-1, 4
c SIMD_COMMENT_0
                        C(LU_IND0+1,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+2,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+3,J) = ZERO
c SIMD_COMMENT_0
                        C(LU_IND0+4,J) = ZERO
99998                   CONTINUE
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     LU_NUB1 = M
                     LU_IB1 = MOD(LU_NUB1, 4)
                     DO 99997 LU_IND1 = 0, LU_IB1-1
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB1, LU_NUB1-1, 4
c SIMD_COMMENT_0
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
c SIMD_COMMENT_0
                        C(LU_IND1+2,J) = BETA*C(LU_IND1+2,J)
c SIMD_COMMENT_0
                        C(LU_IND1+3,J) = BETA*C(LU_IND1+3,J)
c SIMD_COMMENT_0
                        C(LU_IND1+4,J) = BETA*C(LU_IND1+4,J)
99996                   CONTINUE
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB) THEN                                           0113
                  IF (NOTA) THEN                                        0114
*
*           Form  C := alpha*A*B + beta*C.
*
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO) THEN                          0119
                           LU_NUB2 = M
                           LU_IB2 = MOD(LU_NUB2, 4)
                           DO 99995 LU_IND2 = 0, LU_IB2-1
                              C(LU_IND2+1,J) = ZERO
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB2, LU_NUB2-1, 4
c SIMD_COMMENT_0
                              C(LU_IND2+1,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+2,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+3,J) = ZERO
c SIMD_COMMENT_0
                              C(LU_IND2+4,J) = ZERO
99994                         CONTINUE
                        ELSEIF (BETA.NE.ONE) THEN                       0119
                           LU_NUB3 = M
                           LU_IB3 = MOD(LU_NUB3, 4)
                           DO 99993 LU_IND3 = 0, LU_IB3-1
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB3, LU_NUB3-1, 4
c SIMD_COMMENT_0
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
c SIMD_COMMENT_0
                              C(LU_IND3+2,J) = BETA*C(LU_IND3+2,J)
c SIMD_COMMENT_0
                              C(LU_IND3+3,J) = BETA*C(LU_IND3+3,J)
c SIMD_COMMENT_0
                              C(LU_IND3+4,J) = BETA*C(LU_IND3+4,J)
99992                         CONTINUE
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO) THEN                     0129
                              TEMP = ALPHA*B(L,J)                       0130
                              LU_NUB4 = M
                              LU_IB4 = MOD(LU_NUB4, 4)
                              DO 99991 LU_IND4 = 0, LU_IB4-1
                                 F_0 = TEMP*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB4, LU_NUB4-1, 4
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+1,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+2,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+2,J) = C(LU_IND4+2,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+3,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+3,J) = C(LU_IND4+3,J)+F_0
c SIMD_COMMENT_0
                                 F_0 = TEMP*A(LU_IND4+4,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+4,J) = C(LU_IND4+4,J)+F_0
99990                            CONTINUE
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP = ZERO                                  0143
                           LU_NUB5 = K
                           LU_IB5 = MOD(LU_NUB5, 4)
                           RED0(0) = 0.000000
                           DO 99989 LU_IND5 = 0, LU_IB5-1
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
                              RED0(0) = RED0(0)+F_1
99989                         CONTINUE
                           TEMP = RED0(0)+TEMP
                           RED1(0) = 0.000000
                           RED1(1) = 0.000000
                           RED1(2) = 0.000000
                           RED1(3) = 0.000000
                           DO 99988 LU_IND5 = LU_IB5, LU_NUB5-1, 4
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
c SIMD_COMMENT_1
                              RED1(0) = RED1(0)+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+2,I)*B(LU_IND5+2,J)
c SIMD_COMMENT_1
                              RED1(1) = RED1(1)+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+3,I)*B(LU_IND5+3,J)
c SIMD_COMMENT_1
                              RED1(2) = RED1(2)+F_1
c SIMD_COMMENT_0
                              F_1 = A(LU_IND5+4,I)*B(LU_IND5+4,J)
c SIMD_COMMENT_1
                              RED1(3) = RED1(3)+F_1
99988                         CONTINUE
                           TEMP = RED1(3)+RED1(2)+RED1(1)+RED1(0)+
     &                     TEMP
                           L_7 = BETA.EQ.ZERO
                           C0 = ALPHA*TEMP
                           C(I,J) = L_7?C0:C(I,J)
                           F_2 = ALPHA*TEMP
                           F_3 = BETA*C(I,J)
                           C1 = F_2+F_3
                           L_98 = .NOT.L_7
                           C(I,J) = L_98?C1:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA) THEN                                       0113
*
*           Form  C := alpha*A*B' + beta*C
*
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO) THEN                             0161
                        LU_NUB6 = M
                        LU_IB6 = MOD(LU_NUB6, 4)
                        DO 99987 LU_IND6 = 0, LU_IB6-1
                           C(LU_IND6+1,J) = ZERO
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB6, LU_NUB6-1, 4
c SIMD_COMMENT_0
                           C(LU_IND6+1,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+2,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+3,J) = ZERO
c SIMD_COMMENT_0
                           C(LU_IND6+4,J) = ZERO
99986                      CONTINUE
                     ELSEIF (BETA.NE.ONE) THEN                          0161
                        LU_NUB7 = M
                        LU_IB7 = MOD(LU_NUB7, 4)
                        DO 99985 LU_IND7 = 0, LU_IB7-1
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB7, LU_NUB7-1, 4
c SIMD_COMMENT_0
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
c SIMD_COMMENT_0
                           C(LU_IND7+2,J) = BETA*C(LU_IND7+2,J)
c SIMD_COMMENT_0
                           C(LU_IND7+3,J) = BETA*C(LU_IND7+3,J)
c SIMD_COMMENT_0
                           C(LU_IND7+4,J) = BETA*C(LU_IND7+4,J)
99984                      CONTINUE
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO) THEN                        0171
                           TEMP = ALPHA*B(J,L)                          0172
                           LU_NUB8 = M
                           LU_IB8 = MOD(LU_NUB8, 4)
                           DO 99983 LU_IND8 = 0, LU_IB8-1
                              F_4 = TEMP*A(LU_IND8+1,L)
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB8, LU_NUB8-1, 4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+1,L)
c SIMD_COMMENT_1
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+2,L)
c SIMD_COMMENT_1
                              C(LU_IND8+2,J) = C(LU_IND8+2,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+3,L)
c SIMD_COMMENT_1
                              C(LU_IND8+3,J) = C(LU_IND8+3,J)+F_4
c SIMD_COMMENT_0
                              F_4 = TEMP*A(LU_IND8+4,L)
c SIMD_COMMENT_1
                              C(LU_IND8+4,J) = C(LU_IND8+4,J)+F_4
99982                         CONTINUE
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP = ZERO                                     0185
                        LU_NUB9 = K
                        LU_IB9 = MOD(LU_NUB9, 4)
                        RED2(0) = 0.000000
                        DO 99981 LU_IND9 = 0, LU_IB9-1
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
                           RED2(0) = RED2(0)+F_5
99981                      CONTINUE
                        TEMP = RED2(0)+TEMP
                        RED3(0) = 0.000000
                        RED3(1) = 0.000000
                        RED3(2) = 0.000000
                        RED3(3) = 0.000000
                        DO 99980 LU_IND9 = LU_IB9, LU_NUB9-1, 4
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
c SIMD_COMMENT_1
                           RED3(0) = RED3(0)+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+2,I)*B(J,LU_IND9+2)
c SIMD_COMMENT_1
                           RED3(1) = RED3(1)+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+3,I)*B(J,LU_IND9+3)
c SIMD_COMMENT_1
                           RED3(2) = RED3(2)+F_5
c SIMD_COMMENT_0
                           F_5 = A(LU_IND9+4,I)*B(J,LU_IND9+4)
c SIMD_COMMENT_1
                           RED3(3) = RED3(3)+F_5
99980                      CONTINUE
                        TEMP = RED3(3)+RED3(2)+RED3(1)+RED3(0)+TEMP
                        L_8 = BETA.EQ.ZERO
                        C2 = ALPHA*TEMP
                        C(I,J) = L_8?C2:C(I,J)
                        F_6 = ALPHA*TEMP
                        F_7 = BETA*C(I,J)
                        C3 = F_6+F_7
                        L_99 = .NOT.L_8
                        C(I,J) = L_99?C3:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER NROWA0, NROWB0, INFO7, INFO6, INFO5, INFO4, INFO3, I_00
     &, INFO2, I_10, INFO1, I_20, INFO0, LU_NUB00, LU_IB00, LU_NUB10
     &, LU_IB10, LU_NUB20, LU_IB20, LU_NUB30, LU_IB30, LU_NUB40, 
     &LU_IB40, LU_NUB50, LU_IB50, LU_NUB60, LU_IB60, LU_NUB70, 
     &LU_IB70, LU_NUB80, LU_IB80, LU_NUB90, LU_IB90, LU_IND9, LU_IB9
     &, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, LU_IND7, LU_IB7, LU_NUB7, 
     &LU_IND6, LU_IB6, LU_NUB6, LU_IND5, LU_IB5, LU_NUB5, LU_IND4, 
     &LU_IB4, LU_NUB4, LU_IND3, LU_IB3, LU_NUB3, LU_IND2, LU_IB2, 
     &LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, LU_IND0, LU_IB0, LU_NUB0, 
     &I_2, I_1, I_0, M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, 
     &NROWA, NROWB
      REAL*4 ONE0, ZERO0, TEMP7, F_04, F_03, F_02, F_01, F_00, TEMP6
     &, F_14, TEMP5, F_13, F_12, F_11, F_10, TEMP4, C00, F_20, F_30, 
     &C10, TEMP3, F_44, F_43, F_42, F_41, F_40, TEMP2, F_54, TEMP1, 
     &F_53, F_52, F_51, F_50, TEMP0, C20, F_60, F_70, C30, RED3(0:3)
     &, RED2(0:0), RED1(0:3), RED0(0:0), F_7, F_6, F_5, F_4, F_3, F_2
     &, F_1, F_0, C3, C2, C1, C0, ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE
     &, 1:SIZE), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE, ZERO
      LOGICAL NOTA0, NOTB0, L_911, L_111, L_120, L_130, L_140, L_150
     &, L_611, L_500, L_160, L_511, L_170, L_180, L_400, L_190, L_211
     &, L_220, L_411, L_230, L_240, L_250, L_260, L_300, L_270, L_280
     &, L_290, L_311, L_320, L_310, L_330, L_340, L_350, L_360, L_370
     &, L_380, L_200, L_390, L_410, L_420, L_430, L_440, L_450, L_460
     &, L_210, L_470, L_480, L_490, L_510, L_520, L_530, L_540, L_550
     &, L_100, L_560, L_570, L_580, L_590, L_600, L_610, L_620, L_630
     &, L_640, L_110, L_650, L_660, L_670, L_680, L_690, L_700, L_711
     &, L_720, L_730, L_740, L_000, L_750, L_760, L_770, L_780, L_790
     &, L_800, L_811, L_820, L_830, L_840, L_850, L_01, L_860, L_870
     &, L_880, L_890, L_900, L_910, L_920, L_930, L_940, L_950, L_960
     &, L_970, L_710, L_980, L_810, L_990, L_99, L_98, L_97, L_96, 
     &L_95, L_94, L_93, L_92, L_91, L_90, L_89, L_88, L_87, L_86, 
     &L_85, L_84, L_83, L_82, L_81, L_80, L_79, L_78, L_77, L_76, 
     &L_75, L_74, L_73, L_72, L_71, L_70, L_69, L_68, L_67, L_66, 
     &L_65, L_64, L_63, L_62, L_61, L_60, L_59, L_58, L_57, L_56, 
     &L_55, L_54, L_53, L_52, L_51, L_49, L_48, L_47, L_46, L_45, 
     &L_44, L_43, L_42, L_41, L_39, L_38, L_37, L_36, L_35, L_34, 
     &L_33, L_32, L_31, L_29, L_28, L_27, L_26, L_25, L_24, L_23, 
     &L_22, L_21, L_19, L_18, L_17, L_16, L_15, L_14, L_13, L_12, 
     &L_11, L_9, L_00, L_10, L_20, L_30, L_40, L_50, L_8, L_7, L_6, 
     &L_5, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      ONE0 = 1.0E+0                                                     0033
      ZERO0 = 0.0E+0                                                    0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA0 = LSAME(TRANSA, 'N')                                        0042
      NOTB0 = LSAME(TRANSB, 'N')                                        0043
      NROWA0 = NOTA0?M:K
      NROWB0 = NOTB0?K:N
*
*     Test the input parameters.
*
      INFO7 = 0                                                         0059
      IF (.NOT.NOTA0.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(        0060
     &TRANSA, 'T')) THEN                                                0060
         INFO = 1                                                       0063
      ELSE
         L_911 = .NOT.NOTB0
         L_111 = LSAME(TRANSB, 'C')
         L_120 = .NOT.L_111
         L_130 = L_911.AND.L_120
         L_140 = LSAME(TRANSB, 'T')
         L_150 = .NOT.L_140
         L_611 = L_130.AND.L_150
         INFO6 = L_611?2:INFO7
         L_500 = M.LT.0
         L_160 = .NOT.L_611
         L_511 = L_160?L_500:L_5
         L_170 = .NOT.L_611
         L_180 = L_170.AND.L_511
         INFO5 = L_180?3:INFO6
         L_400 = N.LT.0
         L_190 = .NOT.L_611
         L_211 = .NOT.L_511
         L_220 = L_190.AND.L_211
         L_411 = L_220?L_400:L_4
         L_230 = .NOT.L_611
         L_240 = .NOT.L_511
         L_250 = L_240.AND.L_411
         L_260 = L_230.AND.L_250
         INFO4 = L_260?4:INFO5
         L_300 = K.LT.0
         L_270 = .NOT.L_611
         L_280 = .NOT.L_511
         L_290 = .NOT.L_411
         L_311 = L_280.AND.L_290
         L_320 = L_270.AND.L_311
         L_310 = L_320?L_300:L_3
         L_330 = .NOT.L_611
         L_340 = .NOT.L_511
         L_350 = .NOT.L_411
         L_360 = L_350.AND.L_310
         L_370 = L_340.AND.L_360
         L_380 = L_330.AND.L_370
         INFO3 = L_380?5:INFO4
         I_00 = MAX(1, NROWA0)
         L_200 = LDA.LT.I_00
         L_390 = .NOT.L_611
         L_410 = .NOT.L_511
         L_420 = .NOT.L_411
         L_430 = .NOT.L_310
         L_440 = L_420.AND.L_430
         L_450 = L_410.AND.L_440
         L_460 = L_390.AND.L_450
         L_210 = L_460?L_200:L_2
         L_470 = .NOT.L_611
         L_480 = .NOT.L_511
         L_490 = .NOT.L_411
         L_510 = .NOT.L_310
         L_520 = L_510.AND.L_210
         L_530 = L_490.AND.L_520
         L_540 = L_480.AND.L_530
         L_550 = L_470.AND.L_540
         INFO2 = L_550?8:INFO3
         I_10 = MAX(1, NROWB0)
         L_100 = LDB.LT.I_10
         L_560 = .NOT.L_611
         L_570 = .NOT.L_511
         L_580 = .NOT.L_411
         L_590 = .NOT.L_310
         L_600 = .NOT.L_210
         L_610 = L_590.AND.L_600
         L_620 = L_580.AND.L_610
         L_630 = L_570.AND.L_620
         L_640 = L_560.AND.L_630
         L_110 = L_640?L_100:L_1
         L_650 = .NOT.L_611
         L_660 = .NOT.L_511
         L_670 = .NOT.L_411
         L_680 = .NOT.L_310
         L_690 = .NOT.L_210
         L_700 = L_690.AND.L_110
         L_711 = L_680.AND.L_700
         L_720 = L_670.AND.L_711
         L_730 = L_660.AND.L_720
         L_740 = L_650.AND.L_730
         INFO1 = L_740?10:INFO2
         I_20 = MAX(1, M)
         L_000 = LDC.LT.I_20
         L_750 = .NOT.L_611
         L_760 = .NOT.L_511
         L_770 = .NOT.L_411
         L_780 = .NOT.L_310
         L_790 = .NOT.L_210
         L_800 = .NOT.L_110
         L_811 = L_790.AND.L_800
         L_820 = L_780.AND.L_811
         L_830 = L_770.AND.L_820
         L_840 = L_760.AND.L_830
         L_850 = L_750.AND.L_840
         L_01 = L_850?L_000:L_0
         L_860 = .NOT.L_611
         L_870 = .NOT.L_511
         L_880 = .NOT.L_411
         L_890 = .NOT.L_310
         L_900 = .NOT.L_210
         L_910 = .NOT.L_110
         L_920 = L_910.AND.L_01
         L_930 = L_900.AND.L_920
         L_940 = L_890.AND.L_930
         L_950 = L_880.AND.L_940
         L_960 = L_870.AND.L_950
         L_970 = L_860.AND.L_960
         INFO0 = L_970?13:INFO1
      ENDIF
      IF (INFO0.NE.0) THEN                                              0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO0.OR.K.EQ.0).AND.BETA    0088
     &   .EQ.ONE0) THEN                                                 0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO0) THEN                                    0094
               IF (BETA.EQ.ZERO0) THEN                                  0095
                  DO 20 J = 1, N                                        0096
                     LU_NUB00 = M
                     LU_IB00 = MOD(LU_NUB00, 4)
                     DO 99999 LU_IND0 = 0, LU_IB00-1
                        C(LU_IND0+1,J) = ZERO0
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB00, LU_NUB00-1, 4
c SIMD_COMMENT_0
                        C(LU_IND0+1,J) = ZERO0
c SIMD_COMMENT_0
                        C(LU_IND0+2,J) = ZERO0
c SIMD_COMMENT_0
                        C(LU_IND0+3,J) = ZERO0
c SIMD_COMMENT_0
                        C(LU_IND0+4,J) = ZERO0
99998                   CONTINUE
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     LU_NUB10 = M
                     LU_IB10 = MOD(LU_NUB10, 4)
                     DO 99997 LU_IND1 = 0, LU_IB10-1
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB10, LU_NUB10-1, 4
c SIMD_COMMENT_0
                        C(LU_IND1+1,J) = BETA*C(LU_IND1+1,J)
c SIMD_COMMENT_0
                        C(LU_IND1+2,J) = BETA*C(LU_IND1+2,J)
c SIMD_COMMENT_0
                        C(LU_IND1+3,J) = BETA*C(LU_IND1+3,J)
c SIMD_COMMENT_0
                        C(LU_IND1+4,J) = BETA*C(LU_IND1+4,J)
99996                   CONTINUE
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB0) THEN                                          0113
                  IF (NOTA0) THEN                                       0114
*
*           Form  C := alpha*A*B + beta*C.
*
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO0) THEN                         0119
                           LU_NUB20 = M
                           LU_IB20 = MOD(LU_NUB20, 4)
                           DO 99995 LU_IND2 = 0, LU_IB20-1
                              C(LU_IND2+1,J) = ZERO0
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB20, LU_NUB20-1, 4
c SIMD_COMMENT_0
                              C(LU_IND2+1,J) = ZERO0
c SIMD_COMMENT_0
                              C(LU_IND2+2,J) = ZERO0
c SIMD_COMMENT_0
                              C(LU_IND2+3,J) = ZERO0
c SIMD_COMMENT_0
                              C(LU_IND2+4,J) = ZERO0
99994                         CONTINUE
                        ELSEIF (BETA.NE.ONE0) THEN                      0119
                           LU_NUB30 = M
                           LU_IB30 = MOD(LU_NUB30, 4)
                           DO 99993 LU_IND3 = 0, LU_IB30-1
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB30, LU_NUB30-1, 4
c SIMD_COMMENT_0
                              C(LU_IND3+1,J) = BETA*C(LU_IND3+1,J)
c SIMD_COMMENT_0
                              C(LU_IND3+2,J) = BETA*C(LU_IND3+2,J)
c SIMD_COMMENT_0
                              C(LU_IND3+3,J) = BETA*C(LU_IND3+3,J)
c SIMD_COMMENT_0
                              C(LU_IND3+4,J) = BETA*C(LU_IND3+4,J)
99992                         CONTINUE
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO0) THEN                    0129
                              TEMP7 = ALPHA*B(L,J)                      0130
                              LU_NUB40 = M
                              LU_IB40 = MOD(LU_NUB40, 4)
                              DO 99991 LU_IND4 = 0, LU_IB40-1
                                 F_04 = TEMP7*A(LU_IND4+1,L)
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_04
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB40, LU_NUB40-1
     &                        , 4
c SIMD_COMMENT_0
                                 F_03 = TEMP7*A(LU_IND4+1,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+1,J) = C(LU_IND4+1,J)+F_03
c SIMD_COMMENT_0
                                 F_02 = TEMP7*A(LU_IND4+2,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+2,J) = C(LU_IND4+2,J)+F_02
c SIMD_COMMENT_0
                                 F_01 = TEMP7*A(LU_IND4+3,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+3,J) = C(LU_IND4+3,J)+F_01
c SIMD_COMMENT_0
                                 F_00 = TEMP7*A(LU_IND4+4,L)
c SIMD_COMMENT_1
                                 C(LU_IND4+4,J) = C(LU_IND4+4,J)+F_00
99990                            CONTINUE
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP6 = ZERO0                                0143
                           LU_NUB50 = K
                           LU_IB50 = MOD(LU_NUB50, 4)
                           RED0(0) = 0.000000
                           DO 99989 LU_IND5 = 0, LU_IB50-1
                              F_14 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
                              RED0(0) = RED0(0)+F_14
99989                         CONTINUE
                           TEMP5 = RED0(0)+TEMP6
                           RED1(0) = 0.000000
                           RED1(1) = 0.000000
                           RED1(2) = 0.000000
                           RED1(3) = 0.000000
                           DO 99988 LU_IND5 = LU_IB50, LU_NUB50-1, 4
c SIMD_COMMENT_0
                              F_13 = A(LU_IND5+1,I)*B(LU_IND5+1,J)
c SIMD_COMMENT_1
                              RED1(0) = RED1(0)+F_13
c SIMD_COMMENT_0
                              F_12 = A(LU_IND5+2,I)*B(LU_IND5+2,J)
c SIMD_COMMENT_1
                              RED1(1) = RED1(1)+F_12
c SIMD_COMMENT_0
                              F_11 = A(LU_IND5+3,I)*B(LU_IND5+3,J)
c SIMD_COMMENT_1
                              RED1(2) = RED1(2)+F_11
c SIMD_COMMENT_0
                              F_10 = A(LU_IND5+4,I)*B(LU_IND5+4,J)
c SIMD_COMMENT_1
                              RED1(3) = RED1(3)+F_10
99988                         CONTINUE
                           TEMP4 = RED1(3)+RED1(2)+RED1(1)+RED1(0)+
     &                     TEMP5
                           L_710 = BETA.EQ.ZERO0
                           C00 = ALPHA*TEMP4
                           C(I,J) = L_710?C00:C(I,J)
                           F_20 = ALPHA*TEMP4
                           F_30 = BETA*C(I,J)
                           C10 = F_20+F_30
                           L_980 = .NOT.L_710
                           C(I,J) = L_980?C10:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA0) THEN                                      0113
*
*           Form  C := alpha*A*B' + beta*C
*
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO0) THEN                            0161
                        LU_NUB60 = M
                        LU_IB60 = MOD(LU_NUB60, 4)
                        DO 99987 LU_IND6 = 0, LU_IB60-1
                           C(LU_IND6+1,J) = ZERO0
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB60, LU_NUB60-1, 4
c SIMD_COMMENT_0
                           C(LU_IND6+1,J) = ZERO0
c SIMD_COMMENT_0
                           C(LU_IND6+2,J) = ZERO0
c SIMD_COMMENT_0
                           C(LU_IND6+3,J) = ZERO0
c SIMD_COMMENT_0
                           C(LU_IND6+4,J) = ZERO0
99986                      CONTINUE
                     ELSEIF (BETA.NE.ONE0) THEN                         0161
                        LU_NUB70 = M
                        LU_IB70 = MOD(LU_NUB70, 4)
                        DO 99985 LU_IND7 = 0, LU_IB70-1
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB70, LU_NUB70-1, 4
c SIMD_COMMENT_0
                           C(LU_IND7+1,J) = BETA*C(LU_IND7+1,J)
c SIMD_COMMENT_0
                           C(LU_IND7+2,J) = BETA*C(LU_IND7+2,J)
c SIMD_COMMENT_0
                           C(LU_IND7+3,J) = BETA*C(LU_IND7+3,J)
c SIMD_COMMENT_0
                           C(LU_IND7+4,J) = BETA*C(LU_IND7+4,J)
99984                      CONTINUE
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO0) THEN                       0171
                           TEMP3 = ALPHA*B(J,L)                         0172
                           LU_NUB80 = M
                           LU_IB80 = MOD(LU_NUB80, 4)
                           DO 99983 LU_IND8 = 0, LU_IB80-1
                              F_44 = TEMP3*A(LU_IND8+1,L)
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_44
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB80, LU_NUB80-1, 4
c SIMD_COMMENT_0
                              F_43 = TEMP3*A(LU_IND8+1,L)
c SIMD_COMMENT_1
                              C(LU_IND8+1,J) = C(LU_IND8+1,J)+F_43
c SIMD_COMMENT_0
                              F_42 = TEMP3*A(LU_IND8+2,L)
c SIMD_COMMENT_1
                              C(LU_IND8+2,J) = C(LU_IND8+2,J)+F_42
c SIMD_COMMENT_0
                              F_41 = TEMP3*A(LU_IND8+3,L)
c SIMD_COMMENT_1
                              C(LU_IND8+3,J) = C(LU_IND8+3,J)+F_41
c SIMD_COMMENT_0
                              F_40 = TEMP3*A(LU_IND8+4,L)
c SIMD_COMMENT_1
                              C(LU_IND8+4,J) = C(LU_IND8+4,J)+F_40
99982                         CONTINUE
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP2 = ZERO0                                   0185
                        LU_NUB90 = K
                        LU_IB90 = MOD(LU_NUB90, 4)
                        RED2(0) = 0.000000
                        DO 99981 LU_IND9 = 0, LU_IB90-1
                           F_54 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
                           RED2(0) = RED2(0)+F_54
99981                      CONTINUE
                        TEMP1 = RED2(0)+TEMP2
                        RED3(0) = 0.000000
                        RED3(1) = 0.000000
                        RED3(2) = 0.000000
                        RED3(3) = 0.000000
                        DO 99980 LU_IND9 = LU_IB90, LU_NUB90-1, 4
c SIMD_COMMENT_0
                           F_53 = A(LU_IND9+1,I)*B(J,LU_IND9+1)
c SIMD_COMMENT_1
                           RED3(0) = RED3(0)+F_53
c SIMD_COMMENT_0
                           F_52 = A(LU_IND9+2,I)*B(J,LU_IND9+2)
c SIMD_COMMENT_1
                           RED3(1) = RED3(1)+F_52
c SIMD_COMMENT_0
                           F_51 = A(LU_IND9+3,I)*B(J,LU_IND9+3)
c SIMD_COMMENT_1
                           RED3(2) = RED3(2)+F_51
c SIMD_COMMENT_0
                           F_50 = A(LU_IND9+4,I)*B(J,LU_IND9+4)
c SIMD_COMMENT_1
                           RED3(3) = RED3(3)+F_50
99980                      CONTINUE
                        TEMP0 = RED3(3)+RED3(2)+RED3(1)+RED3(0)+TEMP1
                        L_810 = BETA.EQ.ZERO0
                        C20 = ALPHA*TEMP0
                        C(I,J) = L_810?C20:C(I,J)
                        F_60 = ALPHA*TEMP0
                        F_70 = BETA*C(I,J)
                        C30 = F_60+F_70
                        L_990 = .NOT.L_810
                        C(I,J) = L_990?C30:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER NROWA0, NROWB0, INFO7, INFO6, INFO5, INFO4, INFO3, I_00
     &, INFO2, I_10, INFO1, I_20, INFO0, LU_NUB00, LU_IB00, LU_NUB10
     &, LU_IB10, LU_NUB20, LU_IB20, LU_NUB30, LU_IB30, LU_NUB40, 
     &LU_IB40, LU_NUB50, LU_IB50, LU_NUB60, LU_IB60, LU_NUB70, 
     &LU_IB70, LU_NUB80, LU_IB80, LU_NUB90, LU_IB90, LU_IND9, LU_IB9
     &, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, LU_IND7, LU_IB7, LU_NUB7, 
     &LU_IND6, LU_IB6, LU_NUB6, LU_IND5, LU_IB5, LU_NUB5, LU_IND4, 
     &LU_IB4, LU_NUB4, LU_IND3, LU_IB3, LU_NUB3, LU_IND2, LU_IB2, 
     &LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, LU_IND0, LU_IB0, LU_NUB0, 
     &I_2, I_1, I_0, M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, 
     &NROWA, NROWB
      REAL*4 aligned13(0:1), aligned12(0:1), aligned11(0:1), 
     &v4sf_vec28(0:3), v4sf_vec27(0:3), aligned10(0:3), v4sf_vec26(0:
     &3), v4sf_vec25(0:3), v4sf_vec24(0:3), v4sf_vec23(0:3), 
     &v4sf_vec22(0:3), aligned9(0:3), aligned8(0:3), v4sf_vec21(0:3)
     &, v4sf_vec20(0:3), v4sf_vec19(0:3), aligned7(0:3), v4sf_vec18(0
     &:3), v4sf_vec17(0:3), aligned6(0:1), aligned5(0:1), aligned4(0:
     &1), v4sf_vec13(0:3), v4sf_vec12(0:3), aligned3(0:3), v4sf_vec11
     &(0:3), v4sf_vec10(0:3), v4sf_vec9(0:3), v4sf_vec8(0:3), 
     &v4sf_vec7(0:3), aligned2(0:3), aligned1(0:3), v4sf_vec6(0:3), 
     &v4sf_vec5(0:3), v4sf_vec4(0:3), aligned0(0:3), v4sf_vec3(0:3), 
     &v4sf_vec2(0:3), aligned(0:3), v4sf_vec1(0:3), v4sf_vec0(0:3), 
     &ONE0, ZERO0, TEMP7, F_04, F_03, F_02, F_01, F_00, TEMP6, F_14, 
     &TEMP5, F_13, F_12, F_11, F_10, TEMP4, C00, F_20, F_30, C10, 
     &TEMP3, F_44, F_43, F_42, F_41, F_40, TEMP2, F_54, TEMP1, F_53, 
     &F_52, F_51, F_50, TEMP0, C20, F_60, F_70, C30, RED3(0:3), RED2(
     &0:0), RED1(0:3), RED0(0:0), F_7, F_6, F_5, F_4, F_3, F_2, F_1, 
     &F_0, C3, C2, C1, C0, ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE
     &), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE, ZERO
      REAL*8 v2df_vec31(0:1), v2df_vec30(0:1), v2df_vec29(0:1), 
     &v2df_vec16(0:1), v2df_vec15(0:1), v2df_vec14(0:1)
      LOGICAL NOTA0, NOTB0, L_911, L_111, L_120, L_130, L_140, L_150
     &, L_611, L_500, L_160, L_511, L_170, L_180, L_400, L_190, L_211
     &, L_220, L_411, L_230, L_240, L_250, L_260, L_300, L_270, L_280
     &, L_290, L_311, L_320, L_310, L_330, L_340, L_350, L_360, L_370
     &, L_380, L_200, L_390, L_410, L_420, L_430, L_440, L_450, L_460
     &, L_210, L_470, L_480, L_490, L_510, L_520, L_530, L_540, L_550
     &, L_100, L_560, L_570, L_580, L_590, L_600, L_610, L_620, L_630
     &, L_640, L_110, L_650, L_660, L_670, L_680, L_690, L_700, L_711
     &, L_720, L_730, L_740, L_000, L_750, L_760, L_770, L_780, L_790
     &, L_800, L_811, L_820, L_830, L_840, L_850, L_01, L_860, L_870
     &, L_880, L_890, L_900, L_910, L_920, L_930, L_940, L_950, L_960
     &, L_970, L_710, L_980, L_810, L_990, L_99, L_98, L_97, L_96, 
     &L_95, L_94, L_93, L_92, L_91, L_90, L_89, L_88, L_87, L_86, 
     &L_85, L_84, L_83, L_82, L_81, L_80, L_79, L_78, L_77, L_76, 
     &L_75, L_74, L_73, L_72, L_71, L_70, L_69, L_68, L_67, L_66, 
     &L_65, L_64, L_63, L_62, L_61, L_60, L_59, L_58, L_57, L_56, 
     &L_55, L_54, L_53, L_52, L_51, L_49, L_48, L_47, L_46, L_45, 
     &L_44, L_43, L_42, L_41, L_39, L_38, L_37, L_36, L_35, L_34, 
     &L_33, L_32, L_31, L_29, L_28, L_27, L_26, L_25, L_24, L_23, 
     &L_22, L_21, L_19, L_18, L_17, L_16, L_15, L_14, L_13, L_12, 
     &L_11, L_9, L_00, L_10, L_20, L_30, L_40, L_50, L_8, L_7, L_6, 
     &L_5, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      aligned12(1) = ALPHA
      aligned12(0) = ALPHA
      aligned7(3) = BETA
      aligned7(2) = BETA
      aligned7(1) = BETA
      aligned7(0) = BETA
      aligned5(1) = ALPHA
      aligned5(0) = ALPHA
      aligned0(3) = BETA
      aligned0(2) = BETA
      aligned0(1) = BETA
      aligned0(0) = BETA
      aligned(3) = BETA
      aligned(2) = BETA
      aligned(1) = BETA
      aligned(0) = BETA
      ONE0 = 1.0E+0                                                     0033
      ZERO0 = 0.0E+0                                                    0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA0 = LSAME(TRANSA, 'N')                                        0042
      NOTB0 = LSAME(TRANSB, 'N')                                        0043
      NROWA0 = NOTA0?M:K
      NROWB0 = NOTB0?K:N
*
*     Test the input parameters.
*
      INFO7 = 0                                                         0059
      IF (.NOT.NOTA0.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(        0060
     &TRANSA, 'T')) THEN                                                0060
         INFO = 1                                                       0063
      ELSE
         L_911 = .NOT.NOTB0
         L_111 = LSAME(TRANSB, 'C')
         L_120 = .NOT.L_111
         L_130 = L_911.AND.L_120
         L_140 = LSAME(TRANSB, 'T')
         L_150 = .NOT.L_140
         L_611 = L_130.AND.L_150
         INFO6 = L_611?2:INFO7
         L_500 = M.LT.0
         L_160 = .NOT.L_611
         L_511 = L_160?L_500:L_5
         L_170 = .NOT.L_611
         L_180 = L_170.AND.L_511
         INFO5 = L_180?3:INFO6
         L_400 = N.LT.0
         L_190 = .NOT.L_611
         L_211 = .NOT.L_511
         L_220 = L_190.AND.L_211
         L_411 = L_220?L_400:L_4
         L_230 = .NOT.L_611
         L_240 = .NOT.L_511
         L_250 = L_240.AND.L_411
         L_260 = L_230.AND.L_250
         INFO4 = L_260?4:INFO5
         L_300 = K.LT.0
         L_270 = .NOT.L_611
         L_280 = .NOT.L_511
         L_290 = .NOT.L_411
         L_311 = L_280.AND.L_290
         L_320 = L_270.AND.L_311
         L_310 = L_320?L_300:L_3
         L_330 = .NOT.L_611
         L_340 = .NOT.L_511
         L_350 = .NOT.L_411
         L_360 = L_350.AND.L_310
         L_370 = L_340.AND.L_360
         L_380 = L_330.AND.L_370
         INFO3 = L_380?5:INFO4
         I_00 = MAX(1, NROWA0)
         L_200 = LDA.LT.I_00
         L_390 = .NOT.L_611
         L_410 = .NOT.L_511
         L_420 = .NOT.L_411
         L_430 = .NOT.L_310
         L_440 = L_420.AND.L_430
         L_450 = L_410.AND.L_440
         L_460 = L_390.AND.L_450
         L_210 = L_460?L_200:L_2
         L_470 = .NOT.L_611
         L_480 = .NOT.L_511
         L_490 = .NOT.L_411
         L_510 = .NOT.L_310
         L_520 = L_510.AND.L_210
         L_530 = L_490.AND.L_520
         L_540 = L_480.AND.L_530
         L_550 = L_470.AND.L_540
         INFO2 = L_550?8:INFO3
         I_10 = MAX(1, NROWB0)
         L_100 = LDB.LT.I_10
         L_560 = .NOT.L_611
         L_570 = .NOT.L_511
         L_580 = .NOT.L_411
         L_590 = .NOT.L_310
         L_600 = .NOT.L_210
         L_610 = L_590.AND.L_600
         L_620 = L_580.AND.L_610
         L_630 = L_570.AND.L_620
         L_640 = L_560.AND.L_630
         L_110 = L_640?L_100:L_1
         L_650 = .NOT.L_611
         L_660 = .NOT.L_511
         L_670 = .NOT.L_411
         L_680 = .NOT.L_310
         L_690 = .NOT.L_210
         L_700 = L_690.AND.L_110
         L_711 = L_680.AND.L_700
         L_720 = L_670.AND.L_711
         L_730 = L_660.AND.L_720
         L_740 = L_650.AND.L_730
         INFO1 = L_740?10:INFO2
         I_20 = MAX(1, M)
         L_000 = LDC.LT.I_20
         L_750 = .NOT.L_611
         L_760 = .NOT.L_511
         L_770 = .NOT.L_411
         L_780 = .NOT.L_310
         L_790 = .NOT.L_210
         L_800 = .NOT.L_110
         L_811 = L_790.AND.L_800
         L_820 = L_780.AND.L_811
         L_830 = L_770.AND.L_820
         L_840 = L_760.AND.L_830
         L_850 = L_750.AND.L_840
         L_01 = L_850?L_000:L_0
         L_860 = .NOT.L_611
         L_870 = .NOT.L_511
         L_880 = .NOT.L_411
         L_890 = .NOT.L_310
         L_900 = .NOT.L_210
         L_910 = .NOT.L_110
         L_920 = L_910.AND.L_01
         L_930 = L_900.AND.L_920
         L_940 = L_890.AND.L_930
         L_950 = L_880.AND.L_940
         L_960 = L_870.AND.L_950
         L_970 = L_860.AND.L_960
         INFO0 = L_970?13:INFO1
      ENDIF
      IF (INFO0.NE.0) THEN                                              0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO0.OR.K.EQ.0).AND.BETA    0088
     &   .EQ.ONE0) THEN                                                 0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO0) THEN                                    0094
               IF (BETA.EQ.ZERO0) THEN                                  0095
                  DO 20 J = 1, N                                        0096
                     LU_NUB00 = M
                     LU_IB00 = MOD(LU_NUB00, 4)
                     DO 99999 LU_IND0 = 0, LU_IB00-1
                        C(1+LU_IND0,J) = ZERO0
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB00, LU_NUB00-1, 4
c SIMD_COMMENT_0
                        C(1+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(2+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(3+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(4+LU_IND0,J) = ZERO0
99998                   CONTINUE
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     LU_NUB10 = M
                     LU_IB10 = MOD(LU_NUB10, 4)
                     DO 99997 LU_IND1 = 0, LU_IB10-1
                        C(1+LU_IND1,J) = BETA*C(1+LU_IND1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB10, LU_NUB10-1, 4
                        CALL SIMD_LOAD_V4SF(v4sf_vec0, C(1+LU_IND1,J)
     &                  )
                        CALL SIMD_LOAD_V4SF(v4sf_vec1, aligned(0))
                        CALL SIMD_MULPS(v4sf_vec0, v4sf_vec1, 
     &                  v4sf_vec0)
                        CALL SIMD_SAVE_V4SF(v4sf_vec0, C(1+LU_IND1,J)
     &                  )
99996                   CONTINUE
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB0) THEN                                          0113
                  IF (NOTA0) THEN                                       0114
*
*           Form  C := alpha*A*B + beta*C.
*
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO0) THEN                         0119
                           LU_NUB20 = M
                           LU_IB20 = MOD(LU_NUB20, 4)
                           DO 99995 LU_IND2 = 0, LU_IB20-1
                              C(1+LU_IND2,J) = ZERO0
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB20, LU_NUB20-1, 4
c SIMD_COMMENT_0
                              C(1+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(2+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(3+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(4+LU_IND2,J) = ZERO0
99994                         CONTINUE
                        ELSEIF (BETA.NE.ONE0) THEN                      0119
                           LU_NUB30 = M
                           LU_IB30 = MOD(LU_NUB30, 4)
                           DO 99993 LU_IND3 = 0, LU_IB30-1
                              C(1+LU_IND3,J) = BETA*C(1+LU_IND3,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB30, LU_NUB30-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec2, C(1+
     &                        LU_IND3,J))
                              CALL SIMD_LOAD_V4SF(v4sf_vec3, aligned0
     &                        (0))
                              CALL SIMD_MULPS(v4sf_vec2, v4sf_vec3, 
     &                        v4sf_vec2)
                              CALL SIMD_SAVE_V4SF(v4sf_vec2, C(1+
     &                        LU_IND3,J))
99992                         CONTINUE
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO0) THEN                    0129
                              TEMP7 = ALPHA*B(L,J)                      0130
                              LU_NUB40 = M
                              LU_IB40 = MOD(LU_NUB40, 4)
                              DO 99991 LU_IND4 = 0, LU_IB40-1
                                 F_04 = TEMP7*A(1+LU_IND4,L)
                                 C(1+LU_IND4,J) = C(1+LU_IND4,J)+F_04
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB40, LU_NUB40-1
     &                        , 4
                                 CALL SIMD_LOAD_V4SF(v4sf_vec6, A(1+
     &                           LU_IND4,L))
                                 CALL SIMD_LOAD_V4SF(v4sf_vec5, 
     &                           aligned1(0))
                                 CALL SIMD_MULPS(v4sf_vec4, v4sf_vec5
     &                           , v4sf_vec6)
                                 CALL SIMD_SAVE_V4SF(v4sf_vec4, 
     &                           aligned2(0))
                                 CALL SIMD_LOAD_V4SF(v4sf_vec7, C(1+
     &                           LU_IND4,J))
                                 CALL SIMD_ADDPS(v4sf_vec7, v4sf_vec7
     &                           , v4sf_vec4)
                                 CALL SIMD_SAVE_V4SF(v4sf_vec7, C(1+
     &                           LU_IND4,J))
99990                            CONTINUE
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           TEMP6 = ZERO0                                0143
                           LU_NUB50 = K
                           LU_IB50 = MOD(LU_NUB50, 4)
                           RED0(0) = 0.000000
                           DO 99989 LU_IND5 = 0, LU_IB50-1
                              F_14 = A(1+LU_IND5,I)*B(1+LU_IND5,J)
                              RED0(0) = RED0(0)+F_14
99989                         CONTINUE
                           TEMP5 = RED0(0)+TEMP6
                           RED1(0) = 0.000000
                           RED1(1) = 0.000000
                           RED1(2) = 0.000000
                           RED1(3) = 0.000000
                           DO 99988 LU_IND5 = LU_IB50, LU_NUB50-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec11, B(1+
     &                        LU_IND5,J))
                              CALL SIMD_LOAD_V4SF(v4sf_vec10, A(1+
     &                        LU_IND5,I))
                              CALL SIMD_MULPS(v4sf_vec9, v4sf_vec10, 
     &                        v4sf_vec11)
                              CALL SIMD_SAVE_V4SF(v4sf_vec9, aligned3
     &                        (0))
                              CALL SIMD_LOAD_V4SF(v4sf_vec12, RED1(0)
     &                        )
                              CALL SIMD_ADDPS(v4sf_vec12, v4sf_vec12
     &                        , v4sf_vec9)
                              CALL SIMD_SAVE_V4SF(v4sf_vec12, RED1(0)
     &                        )
99988                         CONTINUE
                           aligned4(0) = RED1(3)+RED1(2)+RED1(1)+RED1
     &                     (0)+TEMP5
                           L_710 = BETA.EQ.ZERO0
                           CALL SIMD_LOAD_V2SF_TO_V2DF(v2df_vec16, 
     &                     aligned4(0))
                           CALL SIMD_LOAD_V2SF_TO_V2DF(v2df_vec15, 
     &                     aligned5(0))
                           CALL SIMD_MULPD(v2df_vec14, v2df_vec15, 
     &                     v2df_vec16)
                           CALL SIMD_SAVE_V2SF_TO_V2DF(v2df_vec14, 
     &                     aligned6(0))
                           C(I,J) = L_710?aligned6(0):C(I,J)
                           F_30 = BETA*C(I,J)
                           C10 = aligned6(1)+F_30
                           L_980 = .NOT.L_710
                           C(I,J) = L_980?C10:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA0) THEN                                      0113
*
*           Form  C := alpha*A*B' + beta*C
*
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO0) THEN                            0161
                        LU_NUB60 = M
                        LU_IB60 = MOD(LU_NUB60, 4)
                        DO 99987 LU_IND6 = 0, LU_IB60-1
                           C(1+LU_IND6,J) = ZERO0
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB60, LU_NUB60-1, 4
c SIMD_COMMENT_0
                           C(1+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(2+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(3+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(4+LU_IND6,J) = ZERO0
99986                      CONTINUE
                     ELSEIF (BETA.NE.ONE0) THEN                         0161
                        LU_NUB70 = M
                        LU_IB70 = MOD(LU_NUB70, 4)
                        DO 99985 LU_IND7 = 0, LU_IB70-1
                           C(1+LU_IND7,J) = BETA*C(1+LU_IND7,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB70, LU_NUB70-1, 4
                           CALL SIMD_LOAD_V4SF(v4sf_vec17, C(1+
     &                     LU_IND7,J))
                           CALL SIMD_LOAD_V4SF(v4sf_vec18, aligned7(0
     &                     ))
                           CALL SIMD_MULPS(v4sf_vec17, v4sf_vec18, 
     &                     v4sf_vec17)
                           CALL SIMD_SAVE_V4SF(v4sf_vec17, C(1+
     &                     LU_IND7,J))
99984                      CONTINUE
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO0) THEN                       0171
                           TEMP3 = ALPHA*B(J,L)                         0172
                           LU_NUB80 = M
                           LU_IB80 = MOD(LU_NUB80, 4)
                           DO 99983 LU_IND8 = 0, LU_IB80-1
                              F_44 = TEMP3*A(1+LU_IND8,L)
                              C(1+LU_IND8,J) = C(1+LU_IND8,J)+F_44
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB80, LU_NUB80-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec21, A(1+
     &                        LU_IND8,L))
                              CALL SIMD_LOAD_V4SF(v4sf_vec20, 
     &                        aligned8(0))
                              CALL SIMD_MULPS(v4sf_vec19, v4sf_vec20
     &                        , v4sf_vec21)
                              CALL SIMD_SAVE_V4SF(v4sf_vec19, 
     &                        aligned9(0))
                              CALL SIMD_LOAD_V4SF(v4sf_vec22, C(1+
     &                        LU_IND8,J))
                              CALL SIMD_ADDPS(v4sf_vec22, v4sf_vec22
     &                        , v4sf_vec19)
                              CALL SIMD_SAVE_V4SF(v4sf_vec22, C(1+
     &                        LU_IND8,J))
99982                         CONTINUE
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        TEMP2 = ZERO0                                   0185
                        LU_NUB90 = K
                        LU_IB90 = MOD(LU_NUB90, 4)
                        RED2(0) = 0.000000
                        DO 99981 LU_IND9 = 0, LU_IB90-1
                           F_54 = A(1+LU_IND9,I)*B(J,1+LU_IND9)
                           RED2(0) = RED2(0)+F_54
99981                      CONTINUE
                        TEMP1 = RED2(0)+TEMP2
                        RED3(0) = 0.000000
                        RED3(1) = 0.000000
                        RED3(2) = 0.000000
                        RED3(3) = 0.000000
                        DO 99980 LU_IND9 = LU_IB90, LU_NUB90-1, 4
                           CALL SIMD_LOAD_GENERIC_V4SF(v4sf_vec26, B(
     &                     J,1+LU_IND9), B(J,2+LU_IND9), B(J,3+
     &                     LU_IND9), B(J,4+LU_IND9))
                           CALL SIMD_LOAD_V4SF(v4sf_vec25, A(1+
     &                     LU_IND9,I))
                           CALL SIMD_MULPS(v4sf_vec24, v4sf_vec25, 
     &                     v4sf_vec26)
                           CALL SIMD_SAVE_V4SF(v4sf_vec24, aligned10(
     &                     0))
                           CALL SIMD_LOAD_V4SF(v4sf_vec27, RED3(0))
                           CALL SIMD_ADDPS(v4sf_vec27, v4sf_vec27, 
     &                     v4sf_vec24)
                           CALL SIMD_SAVE_V4SF(v4sf_vec27, RED3(0))
99980                      CONTINUE
                        aligned11(0) = RED3(3)+RED3(2)+RED3(1)+RED3(0
     &                  )+TEMP1
                        L_810 = BETA.EQ.ZERO0
                        CALL SIMD_LOAD_V2SF_TO_V2DF(v2df_vec31, 
     &                  aligned11(0))
                        CALL SIMD_LOAD_V2SF_TO_V2DF(v2df_vec30, 
     &                  aligned12(0))
                        CALL SIMD_MULPD(v2df_vec29, v2df_vec30, 
     &                  v2df_vec31)
                        CALL SIMD_SAVE_V2SF_TO_V2DF(v2df_vec29, 
     &                  aligned13(0))
                        C(I,J) = L_810?aligned13(0):C(I,J)
                        F_70 = BETA*C(I,J)
                        C30 = aligned13(1)+F_70
                        L_990 = .NOT.L_810
                        C(I,J) = L_990?C30:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER NROWA0, NROWB0, INFO7, INFO6, INFO5, INFO4, INFO3, I_00
     &, INFO2, I_10, INFO1, I_20, INFO0, LU_NUB00, LU_IB00, LU_NUB10
     &, LU_IB10, LU_NUB20, LU_IB20, LU_NUB30, LU_IB30, LU_NUB40, 
     &LU_IB40, LU_NUB50, LU_IB50, LU_NUB60, LU_IB60, LU_NUB70, 
     &LU_IB70, LU_NUB80, LU_IB80, LU_NUB90, LU_IB90, LU_IND9, LU_IB9
     &, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, LU_IND7, LU_IB7, LU_NUB7, 
     &LU_IND6, LU_IB6, LU_NUB6, LU_IND5, LU_IB5, LU_NUB5, LU_IND4, 
     &LU_IB4, LU_NUB4, LU_IND3, LU_IB3, LU_NUB3, LU_IND2, LU_IB2, 
     &LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, LU_IND0, LU_IB0, LU_NUB0, 
     &I_2, I_1, I_0, M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, 
     &NROWA, NROWB
      REAL*4 aligned13(0:1), aligned12(0:1), aligned11(0:1), 
     &v4sf_vec28(0:3), v4sf_vec27(0:3), aligned10(0:3), v4sf_vec26(0:
     &3), v4sf_vec25(0:3), v4sf_vec24(0:3), v4sf_vec23(0:3), 
     &v4sf_vec22(0:3), aligned9(0:3), aligned8(0:3), v4sf_vec21(0:3)
     &, v4sf_vec20(0:3), v4sf_vec19(0:3), aligned7(0:3), v4sf_vec18(0
     &:3), v4sf_vec17(0:3), aligned6(0:1), aligned5(0:1), aligned4(0:
     &1), v4sf_vec13(0:3), v4sf_vec12(0:3), aligned3(0:3), v4sf_vec11
     &(0:3), v4sf_vec10(0:3), v4sf_vec9(0:3), v4sf_vec8(0:3), 
     &v4sf_vec7(0:3), aligned2(0:3), aligned1(0:3), v4sf_vec6(0:3), 
     &v4sf_vec5(0:3), v4sf_vec4(0:3), aligned0(0:3), v4sf_vec3(0:3), 
     &v4sf_vec2(0:3), aligned(0:3), v4sf_vec1(0:3), v4sf_vec0(0:3), 
     &ONE0, ZERO0, TEMP7, F_04, F_03, F_02, F_01, F_00, TEMP6, F_14, 
     &TEMP5, F_13, F_12, F_11, F_10, TEMP4, C00, F_20, F_30, C10, 
     &TEMP3, F_44, F_43, F_42, F_41, F_40, TEMP2, F_54, TEMP1, F_53, 
     &F_52, F_51, F_50, TEMP0, C20, F_60, F_70, C30, RED3(0:3), RED2(
     &0:0), RED1(0:3), RED0(0:0), F_7, F_6, F_5, F_4, F_3, F_2, F_1, 
     &F_0, C3, C2, C1, C0, ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE
     &), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE, ZERO
      REAL*8 v2df_vec31(0:1), v2df_vec30(0:1), v2df_vec29(0:1), 
     &v2df_vec16(0:1), v2df_vec15(0:1), v2df_vec14(0:1)
      LOGICAL NOTA0, NOTB0, L_911, L_111, L_120, L_130, L_140, L_150
     &, L_611, L_500, L_160, L_511, L_170, L_180, L_400, L_190, L_211
     &, L_220, L_411, L_230, L_240, L_250, L_260, L_300, L_270, L_280
     &, L_290, L_311, L_320, L_310, L_330, L_340, L_350, L_360, L_370
     &, L_380, L_200, L_390, L_410, L_420, L_430, L_440, L_450, L_460
     &, L_210, L_470, L_480, L_490, L_510, L_520, L_530, L_540, L_550
     &, L_100, L_560, L_570, L_580, L_590, L_600, L_610, L_620, L_630
     &, L_640, L_110, L_650, L_660, L_670, L_680, L_690, L_700, L_711
     &, L_720, L_730, L_740, L_000, L_750, L_760, L_770, L_780, L_790
     &, L_800, L_811, L_820, L_830, L_840, L_850, L_01, L_860, L_870
     &, L_880, L_890, L_900, L_910, L_920, L_930, L_940, L_950, L_960
     &, L_970, L_710, L_980, L_810, L_990, L_99, L_98, L_97, L_96, 
     &L_95, L_94, L_93, L_92, L_91, L_90, L_89, L_88, L_87, L_86, 
     &L_85, L_84, L_83, L_82, L_81, L_80, L_79, L_78, L_77, L_76, 
     &L_75, L_74, L_73, L_72, L_71, L_70, L_69, L_68, L_67, L_66, 
     &L_65, L_64, L_63, L_62, L_61, L_60, L_59, L_58, L_57, L_56, 
     &L_55, L_54, L_53, L_52, L_51, L_49, L_48, L_47, L_46, L_45, 
     &L_44, L_43, L_42, L_41, L_39, L_38, L_37, L_36, L_35, L_34, 
     &L_33, L_32, L_31, L_29, L_28, L_27, L_26, L_25, L_24, L_23, 
     &L_22, L_21, L_19, L_18, L_17, L_16, L_15, L_14, L_13, L_12, 
     &L_11, L_9, L_00, L_10, L_20, L_30, L_40, L_50, L_8, L_7, L_6, 
     &L_5, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      aligned7(3) = BETA
      aligned7(2) = BETA
      aligned7(1) = BETA
      aligned7(0) = BETA
      aligned0(3) = BETA
      aligned0(2) = BETA
      aligned0(1) = BETA
      aligned0(0) = BETA
      aligned(3) = BETA
      aligned(2) = BETA
      aligned(1) = BETA
      aligned(0) = BETA
      ONE0 = 1.0E+0                                                     0033
      ZERO0 = 0.0E+0                                                    0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA0 = LSAME(TRANSA, 'N')                                        0042
      NOTB0 = LSAME(TRANSB, 'N')                                        0043
      NROWA0 = NOTA0?M:K
      NROWB0 = NOTB0?K:N
*
*     Test the input parameters.
*
      INFO7 = 0                                                         0059
      IF (.NOT.NOTA0.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(        0060
     &TRANSA, 'T')) THEN                                                0060
      ELSE
         L_911 = .NOT.NOTB0
         L_111 = LSAME(TRANSB, 'C')
         L_120 = .NOT.L_111
         L_130 = L_911.AND.L_120
         L_140 = LSAME(TRANSB, 'T')
         L_150 = .NOT.L_140
         L_611 = L_130.AND.L_150
         INFO6 = L_611?2:INFO7
         L_500 = M.LT.0
         L_160 = .NOT.L_611
         L_511 = L_160?L_500:L_5
         L_170 = .NOT.L_611
         L_180 = L_170.AND.L_511
         INFO5 = L_180?3:INFO6
         L_400 = N.LT.0
         L_190 = .NOT.L_611
         L_211 = .NOT.L_511
         L_220 = L_190.AND.L_211
         L_411 = L_220?L_400:L_4
         L_230 = .NOT.L_611
         L_240 = .NOT.L_511
         L_250 = L_240.AND.L_411
         L_260 = L_230.AND.L_250
         INFO4 = L_260?4:INFO5
         L_300 = K.LT.0
         L_270 = .NOT.L_611
         L_280 = .NOT.L_511
         L_290 = .NOT.L_411
         L_311 = L_280.AND.L_290
         L_320 = L_270.AND.L_311
         L_310 = L_320?L_300:L_3
         L_330 = .NOT.L_611
         L_340 = .NOT.L_511
         L_350 = .NOT.L_411
         L_360 = L_350.AND.L_310
         L_370 = L_340.AND.L_360
         L_380 = L_330.AND.L_370
         INFO3 = L_380?5:INFO4
         I_00 = MAX(1, NROWA0)
         L_200 = LDA.LT.I_00
         L_390 = .NOT.L_611
         L_410 = .NOT.L_511
         L_420 = .NOT.L_411
         L_430 = .NOT.L_310
         L_440 = L_420.AND.L_430
         L_450 = L_410.AND.L_440
         L_460 = L_390.AND.L_450
         L_210 = L_460?L_200:L_2
         L_470 = .NOT.L_611
         L_480 = .NOT.L_511
         L_490 = .NOT.L_411
         L_510 = .NOT.L_310
         L_520 = L_510.AND.L_210
         L_530 = L_490.AND.L_520
         L_540 = L_480.AND.L_530
         L_550 = L_470.AND.L_540
         INFO2 = L_550?8:INFO3
         I_10 = MAX(1, NROWB0)
         L_100 = LDB.LT.I_10
         L_560 = .NOT.L_611
         L_570 = .NOT.L_511
         L_580 = .NOT.L_411
         L_590 = .NOT.L_310
         L_600 = .NOT.L_210
         L_610 = L_590.AND.L_600
         L_620 = L_580.AND.L_610
         L_630 = L_570.AND.L_620
         L_640 = L_560.AND.L_630
         L_110 = L_640?L_100:L_1
         L_650 = .NOT.L_611
         L_660 = .NOT.L_511
         L_670 = .NOT.L_411
         L_680 = .NOT.L_310
         L_690 = .NOT.L_210
         L_700 = L_690.AND.L_110
         L_711 = L_680.AND.L_700
         L_720 = L_670.AND.L_711
         L_730 = L_660.AND.L_720
         L_740 = L_650.AND.L_730
         INFO1 = L_740?10:INFO2
         I_20 = MAX(1, M)
         L_000 = LDC.LT.I_20
         L_750 = .NOT.L_611
         L_760 = .NOT.L_511
         L_770 = .NOT.L_411
         L_780 = .NOT.L_310
         L_790 = .NOT.L_210
         L_800 = .NOT.L_110
         L_811 = L_790.AND.L_800
         L_820 = L_780.AND.L_811
         L_830 = L_770.AND.L_820
         L_840 = L_760.AND.L_830
         L_850 = L_750.AND.L_840
         L_01 = L_850?L_000:L_0
         L_860 = .NOT.L_611
         L_870 = .NOT.L_511
         L_880 = .NOT.L_411
         L_890 = .NOT.L_310
         L_900 = .NOT.L_210
         L_910 = .NOT.L_110
         L_920 = L_910.AND.L_01
         L_930 = L_900.AND.L_920
         L_940 = L_890.AND.L_930
         L_950 = L_880.AND.L_940
         L_960 = L_870.AND.L_950
         L_970 = L_860.AND.L_960
         INFO0 = L_970?13:INFO1
      ENDIF
      IF (INFO0.NE.0) THEN                                              0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO0.OR.K.EQ.0).AND.BETA    0088
     &   .EQ.ONE0) THEN                                                 0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO0) THEN                                    0094
               IF (BETA.EQ.ZERO0) THEN                                  0095
                  DO 20 J = 1, N                                        0096
                     LU_NUB00 = M
                     LU_IB00 = MOD(LU_NUB00, 4)
                     DO 99999 LU_IND0 = 0, LU_IB00-1
                        C(1+LU_IND0,J) = ZERO0
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB00, LU_NUB00-1, 4
c SIMD_COMMENT_0
                        C(1+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(2+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(3+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(4+LU_IND0,J) = ZERO0
99998                   CONTINUE
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N                                        0102
                     LU_NUB10 = M
                     LU_IB10 = MOD(LU_NUB10, 4)
                     DO 99997 LU_IND1 = 0, LU_IB10-1
                        C(1+LU_IND1,J) = BETA*C(1+LU_IND1,J)
99997                   CONTINUE
                     DO 99996 LU_IND1 = LU_IB10, LU_NUB10-1, 4
                        CALL SIMD_LOAD_V4SF(v4sf_vec0, C(1+LU_IND1,J)
     &                  )
                        CALL SIMD_LOAD_V4SF(v4sf_vec1, aligned(0))
                        CALL SIMD_MULPS(v4sf_vec0, v4sf_vec1, 
     &                  v4sf_vec0)
                        CALL SIMD_SAVE_V4SF(v4sf_vec0, C(1+LU_IND1,J)
     &                  )
99996                   CONTINUE
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB0) THEN                                          0113
                  IF (NOTA0) THEN                                       0114
*
*           Form  C := alpha*A*B + beta*C.
*
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N                                     0118
                        IF (BETA.EQ.ZERO0) THEN                         0119
                           LU_NUB20 = M
                           LU_IB20 = MOD(LU_NUB20, 4)
                           DO 99995 LU_IND2 = 0, LU_IB20-1
                              C(1+LU_IND2,J) = ZERO0
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB20, LU_NUB20-1, 4
c SIMD_COMMENT_0
                              C(1+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(2+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(3+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(4+LU_IND2,J) = ZERO0
99994                         CONTINUE
                        ELSEIF (BETA.NE.ONE0) THEN                      0119
                           LU_NUB30 = M
                           LU_IB30 = MOD(LU_NUB30, 4)
                           DO 99993 LU_IND3 = 0, LU_IB30-1
                              C(1+LU_IND3,J) = BETA*C(1+LU_IND3,J)
99993                         CONTINUE
                           DO 99992 LU_IND3 = LU_IB30, LU_NUB30-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec2, C(1+
     &                        LU_IND3,J))
                              CALL SIMD_LOAD_V4SF(v4sf_vec3, aligned0
     &                        (0))
                              CALL SIMD_MULPS(v4sf_vec2, v4sf_vec3, 
     &                        v4sf_vec2)
                              CALL SIMD_SAVE_V4SF(v4sf_vec2, C(1+
     &                        LU_IND3,J))
99992                         CONTINUE
                        ENDIF
                        DO 80 L = 1, K                                  0128
                           IF (B(L,J).NE.ZERO0) THEN                    0129
                              TEMP7 = ALPHA*B(L,J)                      0130
                              LU_NUB40 = M
                              LU_IB40 = MOD(LU_NUB40, 4)
                              DO 99991 LU_IND4 = 0, LU_IB40-1
                                 F_04 = TEMP7*A(1+LU_IND4,L)
                                 C(1+LU_IND4,J) = C(1+LU_IND4,J)+F_04
99991                            CONTINUE
                              DO 99990 LU_IND4 = LU_IB40, LU_NUB40-1
     &                        , 4
                                 CALL SIMD_LOAD_V4SF(v4sf_vec6, A(1+
     &                           LU_IND4,L))
                                 CALL SIMD_LOAD_V4SF(v4sf_vec5, 
     &                           aligned1(0))
                                 CALL SIMD_MULPS(v4sf_vec4, v4sf_vec5
     &                           , v4sf_vec6)
                                 CALL SIMD_LOAD_V4SF(v4sf_vec7, C(1+
     &                           LU_IND4,J))
                                 CALL SIMD_ADDPS(v4sf_vec7, v4sf_vec7
     &                           , v4sf_vec4)
                                 CALL SIMD_SAVE_V4SF(v4sf_vec7, C(1+
     &                           LU_IND4,J))
99990                            CONTINUE
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N                                    0141
                        DO 110 I = 1, M                                 0142
                           L_710 = BETA.EQ.ZERO0
                           C(I,J) = L_710?aligned6(0):C(I,J)
                           F_30 = BETA*C(I,J)
                           C10 = aligned6(1)+F_30
                           L_980 = .NOT.L_710
                           C(I,J) = L_980?C10:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA0) THEN                                      0113
*
*           Form  C := alpha*A*B' + beta*C
*
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N                                       0160
                     IF (BETA.EQ.ZERO0) THEN                            0161
                        LU_NUB60 = M
                        LU_IB60 = MOD(LU_NUB60, 4)
                        DO 99987 LU_IND6 = 0, LU_IB60-1
                           C(1+LU_IND6,J) = ZERO0
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB60, LU_NUB60-1, 4
c SIMD_COMMENT_0
                           C(1+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(2+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(3+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(4+LU_IND6,J) = ZERO0
99986                      CONTINUE
                     ELSEIF (BETA.NE.ONE0) THEN                         0161
                        LU_NUB70 = M
                        LU_IB70 = MOD(LU_NUB70, 4)
                        DO 99985 LU_IND7 = 0, LU_IB70-1
                           C(1+LU_IND7,J) = BETA*C(1+LU_IND7,J)
99985                      CONTINUE
                        DO 99984 LU_IND7 = LU_IB70, LU_NUB70-1, 4
                           CALL SIMD_LOAD_V4SF(v4sf_vec17, C(1+
     &                     LU_IND7,J))
                           CALL SIMD_LOAD_V4SF(v4sf_vec18, aligned7(0
     &                     ))
                           CALL SIMD_MULPS(v4sf_vec17, v4sf_vec18, 
     &                     v4sf_vec17)
                           CALL SIMD_SAVE_V4SF(v4sf_vec17, C(1+
     &                     LU_IND7,J))
99984                      CONTINUE
                     ENDIF
                     DO 160 L = 1, K                                    0170
                        IF (B(J,L).NE.ZERO0) THEN                       0171
                           TEMP3 = ALPHA*B(J,L)                         0172
                           LU_NUB80 = M
                           LU_IB80 = MOD(LU_NUB80, 4)
                           DO 99983 LU_IND8 = 0, LU_IB80-1
                              F_44 = TEMP3*A(1+LU_IND8,L)
                              C(1+LU_IND8,J) = C(1+LU_IND8,J)+F_44
99983                         CONTINUE
                           DO 99982 LU_IND8 = LU_IB80, LU_NUB80-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec21, A(1+
     &                        LU_IND8,L))
                              CALL SIMD_LOAD_V4SF(v4sf_vec20, 
     &                        aligned8(0))
                              CALL SIMD_MULPS(v4sf_vec19, v4sf_vec20
     &                        , v4sf_vec21)
                              CALL SIMD_LOAD_V4SF(v4sf_vec22, C(1+
     &                        LU_IND8,J))
                              CALL SIMD_ADDPS(v4sf_vec22, v4sf_vec22
     &                        , v4sf_vec19)
                              CALL SIMD_SAVE_V4SF(v4sf_vec22, C(1+
     &                        LU_IND8,J))
99982                         CONTINUE
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N                                       0183
                     DO 190 I = 1, M                                    0184
                        L_810 = BETA.EQ.ZERO0
                        C(I,J) = L_810?aligned13(0):C(I,J)
                        F_70 = BETA*C(I,J)
                        C30 = aligned13(1)+F_70
                        L_990 = .NOT.L_810
                        C(I,J) = L_990?C30:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 XERBLA
      EXTERNAL XERBLA
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER NROWA0, NROWB0, INFO7, INFO6, INFO5, INFO4, INFO3, I_00
     &, INFO2, I_10, INFO1, I_20, INFO0, LU_NUB00, LU_IB00, LU_NUB10
     &, LU_IB10, LU_NUB20, LU_IB20, LU_NUB30, LU_IB30, LU_NUB40, 
     &LU_IB40, LU_NUB50, LU_IB50, LU_NUB60, LU_IB60, LU_NUB70, 
     &LU_IB70, LU_NUB80, LU_IB80, LU_NUB90, LU_IB90, LU_IND9, LU_IB9
     &, LU_NUB9, LU_IND8, LU_IB8, LU_NUB8, LU_IND7, LU_IB7, LU_NUB7, 
     &LU_IND6, LU_IB6, LU_NUB6, LU_IND5, LU_IB5, LU_NUB5, LU_IND4, 
     &LU_IB4, LU_NUB4, LU_IND3, LU_IB3, LU_NUB3, LU_IND2, LU_IB2, 
     &LU_NUB2, LU_IND1, LU_IB1, LU_NUB1, LU_IND0, LU_IB0, LU_NUB0, 
     &I_2, I_1, I_0, M, N, K, LDA, LDB, LDC, I, INFO, J, L, NCOLA, 
     &NROWA, NROWB
      REAL*4 aligned13(0:1), aligned12(0:1), aligned11(0:1), 
     &v4sf_vec28(0:3), v4sf_vec27(0:3), aligned10(0:3), v4sf_vec26(0:
     &3), v4sf_vec25(0:3), v4sf_vec24(0:3), v4sf_vec23(0:3), 
     &v4sf_vec22(0:3), aligned9(0:3), aligned8(0:3), v4sf_vec21(0:3)
     &, v4sf_vec20(0:3), v4sf_vec19(0:3), aligned7(0:3), v4sf_vec18(0
     &:3), v4sf_vec17(0:3), aligned6(0:1), aligned5(0:1), aligned4(0:
     &1), v4sf_vec13(0:3), v4sf_vec12(0:3), aligned3(0:3), v4sf_vec11
     &(0:3), v4sf_vec10(0:3), v4sf_vec9(0:3), v4sf_vec8(0:3), 
     &v4sf_vec7(0:3), aligned2(0:3), aligned1(0:3), v4sf_vec6(0:3), 
     &v4sf_vec5(0:3), v4sf_vec4(0:3), aligned0(0:3), v4sf_vec3(0:3), 
     &v4sf_vec2(0:3), aligned(0:3), v4sf_vec1(0:3), v4sf_vec0(0:3), 
     &ONE0, ZERO0, TEMP7, F_04, F_03, F_02, F_01, F_00, TEMP6, F_14, 
     &TEMP5, F_13, F_12, F_11, F_10, TEMP4, C00, F_20, F_30, C10, 
     &TEMP3, F_44, F_43, F_42, F_41, F_40, TEMP2, F_54, TEMP1, F_53, 
     &F_52, F_51, F_50, TEMP0, C20, F_60, F_70, C30, RED3(0:3), RED2(
     &0:0), RED1(0:3), RED0(0:0), F_7, F_6, F_5, F_4, F_3, F_2, F_1, 
     &F_0, C3, C2, C1, C0, ALPHA, A(1:SIZE, 1:SIZE), B(1:SIZE, 1:SIZE
     &), BETA, C(1:SIZE, 1:SIZE), TEMP, ONE, ZERO
      REAL*8 v2df_vec31(0:1), v2df_vec30(0:1), v2df_vec29(0:1), 
     &v2df_vec16(0:1), v2df_vec15(0:1), v2df_vec14(0:1)
      LOGICAL NOTA0, NOTB0, L_911, L_111, L_120, L_130, L_140, L_150
     &, L_611, L_500, L_160, L_511, L_170, L_180, L_400, L_190, L_211
     &, L_220, L_411, L_230, L_240, L_250, L_260, L_300, L_270, L_280
     &, L_290, L_311, L_320, L_310, L_330, L_340, L_350, L_360, L_370
     &, L_380, L_200, L_390, L_410, L_420, L_430, L_440, L_450, L_460
     &, L_210, L_470, L_480, L_490, L_510, L_520, L_530, L_540, L_550
     &, L_100, L_560, L_570, L_580, L_590, L_600, L_610, L_620, L_630
     &, L_640, L_110, L_650, L_660, L_670, L_680, L_690, L_700, L_711
     &, L_720, L_730, L_740, L_000, L_750, L_760, L_770, L_780, L_790
     &, L_800, L_811, L_820, L_830, L_840, L_850, L_01, L_860, L_870
     &, L_880, L_890, L_900, L_910, L_920, L_930, L_940, L_950, L_960
     &, L_970, L_710, L_980, L_810, L_990, L_99, L_98, L_97, L_96, 
     &L_95, L_94, L_93, L_92, L_91, L_90, L_89, L_88, L_87, L_86, 
     &L_85, L_84, L_83, L_82, L_81, L_80, L_79, L_78, L_77, L_76, 
     &L_75, L_74, L_73, L_72, L_71, L_70, L_69, L_68, L_67, L_66, 
     &L_65, L_64, L_63, L_62, L_61, L_60, L_59, L_58, L_57, L_56, 
     &L_55, L_54, L_53, L_52, L_51, L_49, L_48, L_47, L_46, L_45, 
     &L_44, L_43, L_42, L_41, L_39, L_38, L_37, L_36, L_35, L_34, 
     &L_33, L_32, L_31, L_29, L_28, L_27, L_26, L_25, L_24, L_23, 
     &L_22, L_21, L_19, L_18, L_17, L_16, L_15, L_14, L_13, L_12, 
     &L_11, L_9, L_00, L_10, L_20, L_30, L_40, L_50, L_8, L_7, L_6, 
     &L_5, L_4, L_3, L_2, L_1, L_0, NOTA, NOTB
      CHARACTER TRANSA, TRANSB
      aligned7(3) = BETA
      aligned7(2) = BETA
      aligned7(1) = BETA
      aligned7(0) = BETA
      aligned0(3) = BETA
      aligned0(2) = BETA
      aligned0(1) = BETA
      aligned0(0) = BETA
      aligned(3) = BETA
      aligned(2) = BETA
      aligned(1) = BETA
      aligned(0) = BETA
      ONE0 = 1.0E+0                                                     0033
      ZERO0 = 0.0E+0                                                    0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA0 = LSAME(TRANSA, 'N')                                        0042
      NOTB0 = LSAME(TRANSB, 'N')                                        0043
      NROWA0 = NOTA0?M:K
      NROWB0 = NOTB0?K:N
*
*     Test the input parameters.
*
      INFO7 = 0                                                         0059
      IF (.NOT.NOTA0.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(        0060
     &TRANSA, 'T')) THEN                                                0060
      ELSE
         L_911 = .NOT.NOTB0
         L_111 = LSAME(TRANSB, 'C')
         L_120 = .NOT.L_111
         L_130 = L_911.AND.L_120
         L_140 = LSAME(TRANSB, 'T')
         L_150 = .NOT.L_140
         L_611 = L_130.AND.L_150
         INFO6 = L_611?2:INFO7
         L_500 = M.LT.0
         L_160 = .NOT.L_611
         L_511 = L_160?L_500:L_5
         L_170 = .NOT.L_611
         L_180 = L_170.AND.L_511
         INFO5 = L_180?3:INFO6
         L_400 = N.LT.0
         L_190 = .NOT.L_611
         L_211 = .NOT.L_511
         L_220 = L_190.AND.L_211
         L_411 = L_220?L_400:L_4
         L_230 = .NOT.L_611
         L_240 = .NOT.L_511
         L_250 = L_240.AND.L_411
         L_260 = L_230.AND.L_250
         INFO4 = L_260?4:INFO5
         L_300 = K.LT.0
         L_270 = .NOT.L_611
         L_280 = .NOT.L_511
         L_290 = .NOT.L_411
         L_311 = L_280.AND.L_290
         L_320 = L_270.AND.L_311
         L_310 = L_320?L_300:L_3
         L_330 = .NOT.L_611
         L_340 = .NOT.L_511
         L_350 = .NOT.L_411
         L_360 = L_350.AND.L_310
         L_370 = L_340.AND.L_360
         L_380 = L_330.AND.L_370
         INFO3 = L_380?5:INFO4
         I_00 = MAX(1, NROWA0)
         L_200 = LDA.LT.I_00
         L_390 = .NOT.L_611
         L_410 = .NOT.L_511
         L_420 = .NOT.L_411
         L_430 = .NOT.L_310
         L_440 = L_420.AND.L_430
         L_450 = L_410.AND.L_440
         L_460 = L_390.AND.L_450
         L_210 = L_460?L_200:L_2
         L_470 = .NOT.L_611
         L_480 = .NOT.L_511
         L_490 = .NOT.L_411
         L_510 = .NOT.L_310
         L_520 = L_510.AND.L_210
         L_530 = L_490.AND.L_520
         L_540 = L_480.AND.L_530
         L_550 = L_470.AND.L_540
         INFO2 = L_550?8:INFO3
         I_10 = MAX(1, NROWB0)
         L_100 = LDB.LT.I_10
         L_560 = .NOT.L_611
         L_570 = .NOT.L_511
         L_580 = .NOT.L_411
         L_590 = .NOT.L_310
         L_600 = .NOT.L_210
         L_610 = L_590.AND.L_600
         L_620 = L_580.AND.L_610
         L_630 = L_570.AND.L_620
         L_640 = L_560.AND.L_630
         L_110 = L_640?L_100:L_1
         L_650 = .NOT.L_611
         L_660 = .NOT.L_511
         L_670 = .NOT.L_411
         L_680 = .NOT.L_310
         L_690 = .NOT.L_210
         L_700 = L_690.AND.L_110
         L_711 = L_680.AND.L_700
         L_720 = L_670.AND.L_711
         L_730 = L_660.AND.L_720
         L_740 = L_650.AND.L_730
         INFO1 = L_740?10:INFO2
         I_20 = MAX(1, M)
         L_000 = LDC.LT.I_20
         L_750 = .NOT.L_611
         L_760 = .NOT.L_511
         L_770 = .NOT.L_411
         L_780 = .NOT.L_310
         L_790 = .NOT.L_210
         L_800 = .NOT.L_110
         L_811 = L_790.AND.L_800
         L_820 = L_780.AND.L_811
         L_830 = L_770.AND.L_820
         L_840 = L_760.AND.L_830
         L_850 = L_750.AND.L_840
         L_01 = L_850?L_000:L_0
         L_860 = .NOT.L_611
         L_870 = .NOT.L_511
         L_880 = .NOT.L_411
         L_890 = .NOT.L_310
         L_900 = .NOT.L_210
         L_910 = .NOT.L_110
         L_920 = L_910.AND.L_01
         L_930 = L_900.AND.L_920
         L_940 = L_890.AND.L_930
         L_950 = L_880.AND.L_940
         L_960 = L_870.AND.L_950
         L_970 = L_860.AND.L_960
         INFO0 = L_970?13:INFO1
      ENDIF
      IF (INFO0.NE.0) THEN                                              0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO0.OR.K.EQ.0).AND.BETA    0088
     &   .EQ.ONE0) THEN                                                 0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO0) THEN                                    0094
               IF (BETA.EQ.ZERO0) THEN                                  0095
                  DO 20 J = 1, N
                     LU_NUB00 = M
                     LU_IB00 = MOD(LU_NUB00, 4)
                     DO 99999 LU_IND0 = 0, LU_IB00-1
                        C(1+LU_IND0,J) = ZERO0
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB00, LU_NUB00-1, 4
c SIMD_COMMENT_0
                        C(1+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(2+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(3+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(4+LU_IND0,J) = ZERO0
99998                   CONTINUE
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N
                     LU_NUB10 = M
                     LU_IB10 = MOD(LU_NUB10, 4)
                     DO 99997 LU_IND1 = 0, LU_IB10-1
                        C(1+LU_IND1,J) = BETA*C(1+LU_IND1,J)
99997                   CONTINUE
                     CALL SIMD_LOAD_V4SF(v4sf_vec1, aligned(0))
                     DO 99996 LU_IND1 = LU_IB10, LU_NUB10-1, 4
                        CALL SIMD_LOAD_V4SF(v4sf_vec0, C(1+LU_IND1,J)
     &                  )
                        CALL SIMD_MULPS(v4sf_vec0, v4sf_vec1, 
     &                  v4sf_vec0)
                        CALL SIMD_SAVE_V4SF(v4sf_vec0, C(1+LU_IND1,J)
     &                  )
99996                   CONTINUE
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB0) THEN                                          0113
                  IF (NOTA0) THEN                                       0114
*
*           Form  C := alpha*A*B + beta*C.
*
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N
                        IF (BETA.EQ.ZERO0) THEN                         0119
                           LU_NUB20 = M
                           LU_IB20 = MOD(LU_NUB20, 4)
                           DO 99995 LU_IND2 = 0, LU_IB20-1
                              C(1+LU_IND2,J) = ZERO0
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB20, LU_NUB20-1, 4
c SIMD_COMMENT_0
                              C(1+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(2+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(3+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(4+LU_IND2,J) = ZERO0
99994                         CONTINUE
                        ELSEIF (BETA.NE.ONE0) THEN                      0119
                           LU_NUB30 = M
                           LU_IB30 = MOD(LU_NUB30, 4)
                           DO 99993 LU_IND3 = 0, LU_IB30-1
                              C(1+LU_IND3,J) = BETA*C(1+LU_IND3,J)
99993                         CONTINUE
                           CALL SIMD_LOAD_V4SF(v4sf_vec3, aligned0(0)
     &                     )
                           DO 99992 LU_IND3 = LU_IB30, LU_NUB30-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec2, C(1+
     &                        LU_IND3,J))
                              CALL SIMD_MULPS(v4sf_vec2, v4sf_vec3, 
     &                        v4sf_vec2)
                              CALL SIMD_SAVE_V4SF(v4sf_vec2, C(1+
     &                        LU_IND3,J))
99992                         CONTINUE
                        ENDIF
                        DO 80 L = 1, K
                           IF (B(L,J).NE.ZERO0) THEN                    0129
                              TEMP7 = ALPHA*B(L,J)                      0130
                              LU_NUB40 = M
                              LU_IB40 = MOD(LU_NUB40, 4)
                              DO 99991 LU_IND4 = 0, LU_IB40-1
                                 F_04 = TEMP7*A(1+LU_IND4,L)
                                 C(1+LU_IND4,J) = C(1+LU_IND4,J)+F_04
99991                            CONTINUE
                              CALL SIMD_LOAD_V4SF(v4sf_vec5, aligned1
     &                        (0))
                              DO 99990 LU_IND4 = LU_IB40, LU_NUB40-1
     &                        , 4
                                 CALL SIMD_LOAD_V4SF(v4sf_vec6, A(1+
     &                           LU_IND4,L))
                                 CALL SIMD_MULPS(v4sf_vec4, v4sf_vec5
     &                           , v4sf_vec6)
                                 CALL SIMD_LOAD_V4SF(v4sf_vec7, C(1+
     &                           LU_IND4,J))
                                 CALL SIMD_ADDPS(v4sf_vec7, v4sf_vec7
     &                           , v4sf_vec4)
                                 CALL SIMD_SAVE_V4SF(v4sf_vec7, C(1+
     &                           LU_IND4,J))
99990                            CONTINUE
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N
                        DO 110 I = 1, M
                           L_710 = BETA.EQ.ZERO0
                           C(I,J) = L_710?aligned6(0):C(I,J)
                           F_30 = BETA*C(I,J)
                           C10 = aligned6(1)+F_30
                           L_980 = .NOT.L_710
                           C(I,J) = L_980?C10:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA0) THEN                                      0113
*
*           Form  C := alpha*A*B' + beta*C
*
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N
                     IF (BETA.EQ.ZERO0) THEN                            0161
                        LU_NUB60 = M
                        LU_IB60 = MOD(LU_NUB60, 4)
                        DO 99987 LU_IND6 = 0, LU_IB60-1
                           C(1+LU_IND6,J) = ZERO0
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB60, LU_NUB60-1, 4
c SIMD_COMMENT_0
                           C(1+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(2+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(3+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(4+LU_IND6,J) = ZERO0
99986                      CONTINUE
                     ELSEIF (BETA.NE.ONE0) THEN                         0161
                        LU_NUB70 = M
                        LU_IB70 = MOD(LU_NUB70, 4)
                        DO 99985 LU_IND7 = 0, LU_IB70-1
                           C(1+LU_IND7,J) = BETA*C(1+LU_IND7,J)
99985                      CONTINUE
                        CALL SIMD_LOAD_V4SF(v4sf_vec18, aligned7(0))
                        DO 99984 LU_IND7 = LU_IB70, LU_NUB70-1, 4
                           CALL SIMD_LOAD_V4SF(v4sf_vec17, C(1+
     &                     LU_IND7,J))
                           CALL SIMD_MULPS(v4sf_vec17, v4sf_vec18, 
     &                     v4sf_vec17)
                           CALL SIMD_SAVE_V4SF(v4sf_vec17, C(1+
     &                     LU_IND7,J))
99984                      CONTINUE
                     ENDIF
                     DO 160 L = 1, K
                        IF (B(J,L).NE.ZERO0) THEN                       0171
                           TEMP3 = ALPHA*B(J,L)                         0172
                           LU_NUB80 = M
                           LU_IB80 = MOD(LU_NUB80, 4)
                           DO 99983 LU_IND8 = 0, LU_IB80-1
                              F_44 = TEMP3*A(1+LU_IND8,L)
                              C(1+LU_IND8,J) = C(1+LU_IND8,J)+F_44
99983                         CONTINUE
                           CALL SIMD_LOAD_V4SF(v4sf_vec20, aligned8(0
     &                     ))
                           DO 99982 LU_IND8 = LU_IB80, LU_NUB80-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec21, A(1+
     &                        LU_IND8,L))
                              CALL SIMD_MULPS(v4sf_vec19, v4sf_vec20
     &                        , v4sf_vec21)
                              CALL SIMD_LOAD_V4SF(v4sf_vec22, C(1+
     &                        LU_IND8,J))
                              CALL SIMD_ADDPS(v4sf_vec22, v4sf_vec22
     &                        , v4sf_vec19)
                              CALL SIMD_SAVE_V4SF(v4sf_vec22, C(1+
     &                        LU_IND8,J))
99982                         CONTINUE
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N
                     DO 190 I = 1, M
                        L_810 = BETA.EQ.ZERO0
                        C(I,J) = L_810?aligned13(0):C(I,J)
                        F_70 = BETA*C(I,J)
                        C30 = aligned13(1)+F_70
                        L_990 = .NOT.L_810
                        C(I,J) = L_990?C30:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
      SUBROUTINE SGEMM(TRANSA, TRANSB, M, N, K, ALPHA, A, LDA, B, LDB
     &, BETA, C, LDC)
      LOGICAL*4 LSAME
      EXTERNAL LSAME
      REAL*4 SIZE
      PARAMETER (SIZE = 10)
      INTEGER NROWA0, NROWB0, INFO7, INFO6, INFO5, INFO4, INFO3, I_00
     &, INFO2, I_10, INFO1, I_20, INFO0, LU_NUB00, LU_IB00, LU_NUB10
     &, LU_IB10, LU_NUB20, LU_IB20, LU_NUB30, LU_IB30, LU_NUB40, 
     &LU_IB40, LU_NUB60, LU_IB60, LU_NUB70, LU_IB70, LU_NUB80, 
     &LU_IB80, LU_IND8, LU_IND7, LU_IND6, LU_IND4, LU_IND3, LU_IND2, 
     &LU_IND1, LU_IND0, M, N, K, LDA, LDB, LDC, I, J, L
      REAL*4 aligned13(0:1), v4sf_vec22(0:3), aligned8(0:3), 
     &v4sf_vec21(0:3), v4sf_vec20(0:3), v4sf_vec19(0:3), aligned7(0:3
     &), v4sf_vec18(0:3), v4sf_vec17(0:3), aligned6(0:1), v4sf_vec7(0
     &:3), aligned1(0:3), v4sf_vec6(0:3), v4sf_vec5(0:3), v4sf_vec4(0
     &:3), aligned0(0:3), v4sf_vec3(0:3), v4sf_vec2(0:3), aligned(0:3
     &), v4sf_vec1(0:3), v4sf_vec0(0:3), ONE0, ZERO0, TEMP7, F_04, 
     &F_30, C10, TEMP3, F_44, F_70, C30, ALPHA, A(1:SIZE, 1:SIZE), B(
     &1:SIZE, 1:SIZE), BETA, C(1:SIZE, 1:SIZE)
      LOGICAL NOTA0, NOTB0, L_911, L_111, L_120, L_130, L_140, L_150
     &, L_611, L_500, L_160, L_511, L_170, L_180, L_400, L_190, L_211
     &, L_220, L_411, L_230, L_240, L_250, L_260, L_300, L_270, L_280
     &, L_290, L_311, L_320, L_310, L_330, L_340, L_350, L_360, L_370
     &, L_380, L_200, L_390, L_410, L_420, L_430, L_440, L_450, L_460
     &, L_210, L_470, L_480, L_490, L_510, L_520, L_530, L_540, L_550
     &, L_100, L_560, L_570, L_580, L_590, L_600, L_610, L_620, L_630
     &, L_640, L_110, L_650, L_660, L_670, L_680, L_690, L_700, L_711
     &, L_720, L_730, L_740, L_000, L_750, L_760, L_770, L_780, L_790
     &, L_800, L_811, L_820, L_830, L_840, L_850, L_01, L_860, L_870
     &, L_880, L_890, L_900, L_910, L_920, L_930, L_940, L_950, L_960
     &, L_970, L_710, L_980, L_810, L_990, L_5, L_4, L_3, L_2, L_1, 
     &L_0
      CHARACTER TRANSA, TRANSB
      aligned7(3) = BETA
      aligned7(2) = BETA
      aligned7(1) = BETA
      aligned7(0) = BETA
      aligned0(3) = BETA
      aligned0(2) = BETA
      aligned0(1) = BETA
      aligned0(0) = BETA
      aligned(3) = BETA
      aligned(2) = BETA
      aligned(1) = BETA
      aligned(0) = BETA
      ONE0 = 1.0E+0                                                     0033
      ZERO0 = 0.0E+0                                                    0034
*     ..
*     .. Executable Statements ..
*
*     Set  NOTA  and  NOTB  as  true if  A  and  B  respectively are not
*     transposed and set  NROWA, NCOLA and  NROWB  as the number of rows
*     and  columns of  A  and the  number of  rows  of  B  respectively.
*
      NOTA0 = LSAME(TRANSA, 'N')                                        0042
      NOTB0 = LSAME(TRANSB, 'N')                                        0043
      NROWA0 = NOTA0?M:K
      NROWB0 = NOTB0?K:N
*
*     Test the input parameters.
*
      INFO7 = 0                                                         0059
      IF (.NOT.NOTA0.AND..NOT.LSAME(TRANSA, 'C').AND..NOT.LSAME(        0060
     &TRANSA, 'T')) THEN                                                0060
      ELSE
         L_911 = .NOT.NOTB0
         L_111 = LSAME(TRANSB, 'C')
         L_120 = .NOT.L_111
         L_130 = L_911.AND.L_120
         L_140 = LSAME(TRANSB, 'T')
         L_150 = .NOT.L_140
         L_611 = L_130.AND.L_150
         INFO6 = L_611?2:INFO7
         L_500 = M.LT.0
         L_160 = .NOT.L_611
         L_511 = L_160?L_500:L_5
         L_170 = .NOT.L_611
         L_180 = L_170.AND.L_511
         INFO5 = L_180?3:INFO6
         L_400 = N.LT.0
         L_190 = .NOT.L_611
         L_211 = .NOT.L_511
         L_220 = L_190.AND.L_211
         L_411 = L_220?L_400:L_4
         L_230 = .NOT.L_611
         L_240 = .NOT.L_511
         L_250 = L_240.AND.L_411
         L_260 = L_230.AND.L_250
         INFO4 = L_260?4:INFO5
         L_300 = K.LT.0
         L_270 = .NOT.L_611
         L_280 = .NOT.L_511
         L_290 = .NOT.L_411
         L_311 = L_280.AND.L_290
         L_320 = L_270.AND.L_311
         L_310 = L_320?L_300:L_3
         L_330 = .NOT.L_611
         L_340 = .NOT.L_511
         L_350 = .NOT.L_411
         L_360 = L_350.AND.L_310
         L_370 = L_340.AND.L_360
         L_380 = L_330.AND.L_370
         INFO3 = L_380?5:INFO4
         I_00 = MAX(1, NROWA0)
         L_200 = LDA.LT.I_00
         L_390 = .NOT.L_611
         L_410 = .NOT.L_511
         L_420 = .NOT.L_411
         L_430 = .NOT.L_310
         L_440 = L_420.AND.L_430
         L_450 = L_410.AND.L_440
         L_460 = L_390.AND.L_450
         L_210 = L_460?L_200:L_2
         L_470 = .NOT.L_611
         L_480 = .NOT.L_511
         L_490 = .NOT.L_411
         L_510 = .NOT.L_310
         L_520 = L_510.AND.L_210
         L_530 = L_490.AND.L_520
         L_540 = L_480.AND.L_530
         L_550 = L_470.AND.L_540
         INFO2 = L_550?8:INFO3
         I_10 = MAX(1, NROWB0)
         L_100 = LDB.LT.I_10
         L_560 = .NOT.L_611
         L_570 = .NOT.L_511
         L_580 = .NOT.L_411
         L_590 = .NOT.L_310
         L_600 = .NOT.L_210
         L_610 = L_590.AND.L_600
         L_620 = L_580.AND.L_610
         L_630 = L_570.AND.L_620
         L_640 = L_560.AND.L_630
         L_110 = L_640?L_100:L_1
         L_650 = .NOT.L_611
         L_660 = .NOT.L_511
         L_670 = .NOT.L_411
         L_680 = .NOT.L_310
         L_690 = .NOT.L_210
         L_700 = L_690.AND.L_110
         L_711 = L_680.AND.L_700
         L_720 = L_670.AND.L_711
         L_730 = L_660.AND.L_720
         L_740 = L_650.AND.L_730
         INFO1 = L_740?10:INFO2
         I_20 = MAX(1, M)
         L_000 = LDC.LT.I_20
         L_750 = .NOT.L_611
         L_760 = .NOT.L_511
         L_770 = .NOT.L_411
         L_780 = .NOT.L_310
         L_790 = .NOT.L_210
         L_800 = .NOT.L_110
         L_811 = L_790.AND.L_800
         L_820 = L_780.AND.L_811
         L_830 = L_770.AND.L_820
         L_840 = L_760.AND.L_830
         L_850 = L_750.AND.L_840
         L_01 = L_850?L_000:L_0
         L_860 = .NOT.L_611
         L_870 = .NOT.L_511
         L_880 = .NOT.L_411
         L_890 = .NOT.L_310
         L_900 = .NOT.L_210
         L_910 = .NOT.L_110
         L_920 = L_910.AND.L_01
         L_930 = L_900.AND.L_920
         L_940 = L_890.AND.L_930
         L_950 = L_880.AND.L_940
         L_960 = L_870.AND.L_950
         L_970 = L_860.AND.L_960
         INFO0 = L_970?13:INFO1
      ENDIF
      IF (INFO0.NE.0) THEN                                              0081
*         CALL XERBLA( 'SGEMM ', INFO )
      ELSE
*
*     Quick return if possible.
*
         IF (M.EQ.0.OR.N.EQ.0.OR.(ALPHA.EQ.ZERO0.OR.K.EQ.0).AND.BETA    0088
     &   .EQ.ONE0) THEN                                                 0088
         ELSE
*
*     And if  alpha.eq.zero.
*
            IF (ALPHA.EQ.ZERO0) THEN                                    0094
               IF (BETA.EQ.ZERO0) THEN                                  0095
                  DO 20 J = 1, N
                     LU_NUB00 = M
                     LU_IB00 = MOD(LU_NUB00, 4)
                     DO 99999 LU_IND0 = 0, LU_IB00-1
                        C(1+LU_IND0,J) = ZERO0
99999                   CONTINUE
                     DO 99998 LU_IND0 = LU_IB00, LU_NUB00-1, 4
c SIMD_COMMENT_0
                        C(1+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(2+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(3+LU_IND0,J) = ZERO0
c SIMD_COMMENT_0
                        C(4+LU_IND0,J) = ZERO0
99998                   CONTINUE
20                   CONTINUE                                           0100
               ELSE
                  DO 40 J = 1, N
                     LU_NUB10 = M
                     LU_IB10 = MOD(LU_NUB10, 4)
                     DO 99997 LU_IND1 = 0, LU_IB10-1
                        C(1+LU_IND1,J) = BETA*C(1+LU_IND1,J)
99997                   CONTINUE
                     CALL SIMD_LOAD_V4SF(v4sf_vec1, aligned(0))
                     DO 99996 LU_IND1 = LU_IB10, LU_NUB10-1, 4
                        CALL SIMD_LOAD_V4SF(v4sf_vec0, C(1+LU_IND1,J)
     &                  )
                        CALL SIMD_MULPS(v4sf_vec0, v4sf_vec1, 
     &                  v4sf_vec0)
                        CALL SIMD_SAVE_V4SF(v4sf_vec0, C(1+LU_IND1,J)
     &                  )
99996                   CONTINUE
40                   CONTINUE                                           0106
               ENDIF
            ELSE
*
*     Start the operations.
*
               IF (NOTB0) THEN                                          0113
                  IF (NOTA0) THEN                                       0114
*
*           Form  C := alpha*A*B + beta*C.
*
*
*           Form  C := alpha*A*B + beta*C.
*
                     DO 90 J = 1, N
                        IF (BETA.EQ.ZERO0) THEN                         0119
                           LU_NUB20 = M
                           LU_IB20 = MOD(LU_NUB20, 4)
                           DO 99995 LU_IND2 = 0, LU_IB20-1
                              C(1+LU_IND2,J) = ZERO0
99995                         CONTINUE
                           DO 99994 LU_IND2 = LU_IB20, LU_NUB20-1, 4
c SIMD_COMMENT_0
                              C(1+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(2+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(3+LU_IND2,J) = ZERO0
c SIMD_COMMENT_0
                              C(4+LU_IND2,J) = ZERO0
99994                         CONTINUE
                        ELSEIF (BETA.NE.ONE0) THEN                      0119
                           LU_NUB30 = M
                           LU_IB30 = MOD(LU_NUB30, 4)
                           DO 99993 LU_IND3 = 0, LU_IB30-1
                              C(1+LU_IND3,J) = BETA*C(1+LU_IND3,J)
99993                         CONTINUE
                           CALL SIMD_LOAD_V4SF(v4sf_vec3, aligned0(0)
     &                     )
                           DO 99992 LU_IND3 = LU_IB30, LU_NUB30-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec2, C(1+
     &                        LU_IND3,J))
                              CALL SIMD_MULPS(v4sf_vec2, v4sf_vec3, 
     &                        v4sf_vec2)
                              CALL SIMD_SAVE_V4SF(v4sf_vec2, C(1+
     &                        LU_IND3,J))
99992                         CONTINUE
                        ENDIF
                        DO 80 L = 1, K
                           IF (B(L,J).NE.ZERO0) THEN                    0129
                              TEMP7 = ALPHA*B(L,J)                      0130
                              LU_NUB40 = M
                              LU_IB40 = MOD(LU_NUB40, 4)
                              DO 99991 LU_IND4 = 0, LU_IB40-1
                                 F_04 = TEMP7*A(1+LU_IND4,L)
                                 C(1+LU_IND4,J) = C(1+LU_IND4,J)+F_04
99991                            CONTINUE
                              CALL SIMD_LOAD_V4SF(v4sf_vec5, aligned1
     &                        (0))
                              DO 99990 LU_IND4 = LU_IB40, LU_NUB40-1
     &                        , 4
                                 CALL SIMD_LOAD_V4SF(v4sf_vec6, A(1+
     &                           LU_IND4,L))
                                 CALL SIMD_MULPS(v4sf_vec4, v4sf_vec5
     &                           , v4sf_vec6)
                                 CALL SIMD_LOAD_V4SF(v4sf_vec7, C(1+
     &                           LU_IND4,J))
                                 CALL SIMD_ADDPS(v4sf_vec7, v4sf_vec7
     &                           , v4sf_vec4)
                                 CALL SIMD_SAVE_V4SF(v4sf_vec7, C(1+
     &                           LU_IND4,J))
99990                            CONTINUE
                           ENDIF
80                         CONTINUE                                     0135
90                      CONTINUE                                        0136
                  ELSE
*
*           Form  C := alpha*A'*B + beta*C
*
*
*           Form  C := alpha*A'*B + beta*C
*
                     DO 120 J = 1, N
                        DO 110 I = 1, M
                           L_710 = BETA.EQ.ZERO0
                           C(I,J) = L_710?aligned6(0):C(I,J)
                           F_30 = BETA*C(I,J)
                           C10 = aligned6(1)+F_30
                           L_980 = .NOT.L_710
                           C(I,J) = L_980?C10:C(I,J)
110                        CONTINUE                                     0152
120                     CONTINUE                                        0153
                  ENDIF
               ELSEIF (NOTA0) THEN                                      0113
*
*           Form  C := alpha*A*B' + beta*C
*
*
*           Form  C := alpha*A*B' + beta*C
*
                  DO 170 J = 1, N
                     IF (BETA.EQ.ZERO0) THEN                            0161
                        LU_NUB60 = M
                        LU_IB60 = MOD(LU_NUB60, 4)
                        DO 99987 LU_IND6 = 0, LU_IB60-1
                           C(1+LU_IND6,J) = ZERO0
99987                      CONTINUE
                        DO 99986 LU_IND6 = LU_IB60, LU_NUB60-1, 4
c SIMD_COMMENT_0
                           C(1+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(2+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(3+LU_IND6,J) = ZERO0
c SIMD_COMMENT_0
                           C(4+LU_IND6,J) = ZERO0
99986                      CONTINUE
                     ELSEIF (BETA.NE.ONE0) THEN                         0161
                        LU_NUB70 = M
                        LU_IB70 = MOD(LU_NUB70, 4)
                        DO 99985 LU_IND7 = 0, LU_IB70-1
                           C(1+LU_IND7,J) = BETA*C(1+LU_IND7,J)
99985                      CONTINUE
                        CALL SIMD_LOAD_V4SF(v4sf_vec18, aligned7(0))
                        DO 99984 LU_IND7 = LU_IB70, LU_NUB70-1, 4
                           CALL SIMD_LOAD_V4SF(v4sf_vec17, C(1+
     &                     LU_IND7,J))
                           CALL SIMD_MULPS(v4sf_vec17, v4sf_vec18, 
     &                     v4sf_vec17)
                           CALL SIMD_SAVE_V4SF(v4sf_vec17, C(1+
     &                     LU_IND7,J))
99984                      CONTINUE
                     ENDIF
                     DO 160 L = 1, K
                        IF (B(J,L).NE.ZERO0) THEN                       0171
                           TEMP3 = ALPHA*B(J,L)                         0172
                           LU_NUB80 = M
                           LU_IB80 = MOD(LU_NUB80, 4)
                           DO 99983 LU_IND8 = 0, LU_IB80-1
                              F_44 = TEMP3*A(1+LU_IND8,L)
                              C(1+LU_IND8,J) = C(1+LU_IND8,J)+F_44
99983                         CONTINUE
                           CALL SIMD_LOAD_V4SF(v4sf_vec20, aligned8(0
     &                     ))
                           DO 99982 LU_IND8 = LU_IB80, LU_NUB80-1, 4
                              CALL SIMD_LOAD_V4SF(v4sf_vec21, A(1+
     &                        LU_IND8,L))
                              CALL SIMD_MULPS(v4sf_vec19, v4sf_vec20
     &                        , v4sf_vec21)
                              CALL SIMD_LOAD_V4SF(v4sf_vec22, C(1+
     &                        LU_IND8,J))
                              CALL SIMD_ADDPS(v4sf_vec22, v4sf_vec22
     &                        , v4sf_vec19)
                              CALL SIMD_SAVE_V4SF(v4sf_vec22, C(1+
     &                        LU_IND8,J))
99982                         CONTINUE
                        ENDIF
160                     CONTINUE                                        0177
170                  CONTINUE                                           0178
               ELSE
*
*           Form  C := alpha*A'*B' + beta*C
*
*
*           Form  C := alpha*A'*B' + beta*C
*
                  DO 200 J = 1, N
                     DO 190 I = 1, M
                        L_810 = BETA.EQ.ZERO0
                        C(I,J) = L_810?aligned13(0):C(I,J)
                        F_70 = BETA*C(I,J)
                        C30 = aligned13(1)+F_70
                        L_990 = .NOT.L_810
                        C(I,J) = L_990?C30:C(I,J)
190                     CONTINUE                                        0194
200                  CONTINUE                                           0195
               ENDIF
*
            ENDIF
         ENDIF
      ENDIF
*
*     End of SGEMM .
*
      END
nsucc = 2 
Result = if (info != 0) {

succ1 must be reached by GOTO
No endif
Result = if (info != 0) {
 goto ;
}

Result before = if (info != 0) {
 goto ;
}

Result after = if (info != 0) {
 goto ;
}

nsucc = 2 
Result = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {

succ1 must be reached by GOTO
No endif
Result = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}

Result before = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}

Result after = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}

nsucc = 2 
Result = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}
if (alpha == zero) {

succ1 must be reached by GOTO
No endif
Result = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}
if (alpha == zero) {
 goto ;
}

Result before = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}
if (alpha == zero) {
 goto ;
}

Result after = if (info != 0) {
 goto ;
}
if (((m == 0) || (n == 0)) || (((alpha == zero) || (k == 0)) && (beta == one))) {
 goto 00000;
}
if (alpha == zero) {
 goto ;
}

nsucc = 1 
nsucc = 1 
nsucc = 1 
nsucc = 0 
/* C pretty print for module SGEMM. */
void
sgemm (char transa, char transb, int m, int n, int k, float alpha,
       float a[10][10], int lda, float b[10][10], int ldb, float beta,
       float c[10][10], int ldc)
{
  float aligned13[2];
  float v4sf_vec22[4];
  float aligned8[4];
  float v4sf_vec21[4];
  float v4sf_vec20[4];
  float v4sf_vec19[4];
  float aligned7[4];
  float v4sf_vec18[4];
  float v4sf_vec17[4];
  float aligned6[2];
  float v4sf_vec7[4];
  float aligned1[4];
  float v4sf_vec6[4];
  float v4sf_vec5[4];
  float v4sf_vec4[4];
  float aligned0[4];
  float v4sf_vec3[4];
  float v4sf_vec2[4];
  float aligned[4];
  float v4sf_vec1[4];
  float v4sf_vec0[4];
  float one0;
  float zero0;
  int nota0;
  int notb0;
  int nrowa0;
  int nrowb0;
  int info7;
  int l_911;
  int l_111;
  int l_120;
  int l_130;
  int l_140;
  int l_150;
  int l_611;
  int info6;
  int l_500;
  int l_160;
  int l_511;
  int l_170;
  int l_180;
  int info5;
  int l_400;
  int l_190;
  int l_211;
  int l_220;
  int l_411;
  int l_230;
  int l_240;
  int l_250;
  int l_260;
  int info4;
  int l_300;
  int l_270;
  int l_280;
  int l_290;
  int l_311;
  int l_320;
  int l_310;
  int l_330;
  int l_340;
  int l_350;
  int l_360;
  int l_370;
  int l_380;
  int info3;
  int i_00;
  int l_200;
  int l_390;
  int l_410;
  int l_420;
  int l_430;
  int l_440;
  int l_450;
  int l_460;
  int l_210;
  int l_470;
  int l_480;
  int l_490;
  int l_510;
  int l_520;
  int l_530;
  int l_540;
  int l_550;
  int info2;
  int i_10;
  int l_100;
  int l_560;
  int l_570;
  int l_580;
  int l_590;
  int l_600;
  int l_610;
  int l_620;
  int l_630;
  int l_640;
  int l_110;
  int l_650;
  int l_660;
  int l_670;
  int l_680;
  int l_690;
  int l_700;
  int l_711;
  int l_720;
  int l_730;
  int l_740;
  int info1;
  int i_20;
  int l_000;
  int l_750;
  int l_760;
  int l_770;
  int l_780;
  int l_790;
  int l_800;
  int l_811;
  int l_820;
  int l_830;
  int l_840;
  int l_850;
  int l_01;
  int l_860;
  int l_870;
  int l_880;
  int l_890;
  int l_900;
  int l_910;
  int l_920;
  int l_930;
  int l_940;
  int l_950;
  int l_960;
  int l_970;
  int info0;
  int lu_nub00;
  int lu_ib00;
  int lu_nub10;
  int lu_ib10;
  int lu_nub20;
  int lu_ib20;
  int lu_nub30;
  int lu_ib30;
  float temp7;
  int lu_nub40;
  int lu_ib40;
  float f_04;
  int l_710;
  float f_30;
  float c10;
  int l_980;
  int lu_nub60;
  int lu_ib60;
  int lu_nub70;
  int lu_ib70;
  float temp3;
  int lu_nub80;
  int lu_ib80;
  float f_44;
  int l_810;
  float f_70;
  float c30;
  int l_990;
  int lu_ind8;
  int lu_ind7;
  int lu_ind6;
  int lu_ind4;
  int lu_ind3;
  int lu_ind2;
  int lu_ind1;
  int lu_ind0;
  int l_5;
  int l_4;
  int l_3;
  int l_2;
  int l_1;
  int l_0;
  static const float size = 10;
  int i;
  int j;
  int l;

  aligned7[3] = beta;
  aligned7[2] = beta;
  aligned7[1] = beta;
  aligned7[0] = beta;
  aligned0[3] = beta;
  aligned0[2] = beta;
  aligned0[1] = beta;
  aligned0[0] = beta;
  aligned[3] = beta;
  aligned[2] = beta;
  aligned[1] = beta;
  aligned[0] = beta;
  one0 = 1.0e+0;
  zero0 = 0.0e+0;
  nota0 = lsame (transa, 'n');
  notb0 = lsame (transb, 'n');
  nrowa0 = __c - conditional__ (nota0, m, k);
  nrowb0 = __c - conditional__ (notb0, k, n);
  info7 = 0;
  if ((!nota0 && !lsame (transa, 'c')) && !lsame (transa, 't'))
    {
    }
  else
    {
      l_911 = !notb0;
      l_111 = lsame (transb, 'c');
      l_120 = !l_111;
      l_130 = (l_911 && l_120);
      l_140 = lsame (transb, 't');
      l_150 = !l_140;
      l_611 = (l_130 && l_150);
      info6 = __c - conditional__ (l_611, 2, info7);
      l_500 = (m < 0);
      l_160 = !l_611;
      l_511 = __c - conditional__ (l_160, l_500, l_5);
      l_170 = !l_611;
      l_180 = (l_170 && l_511);
      info5 = __c - conditional__ (l_180, 3, info6);
      l_400 = (n < 0);
      l_190 = !l_611;
      l_211 = !l_511;
      l_220 = (l_190 && l_211);
      l_411 = __c - conditional__ (l_220, l_400, l_4);
      l_230 = !l_611;
      l_240 = !l_511;
      l_250 = (l_240 && l_411);
      l_260 = (l_230 && l_250);
      info4 = __c - conditional__ (l_260, 4, info5);
      l_300 = (k < 0);
      l_270 = !l_611;
      l_280 = !l_511;
      l_290 = !l_411;
      l_311 = (l_280 && l_290);
      l_320 = (l_270 && l_311);
      l_310 = __c - conditional__ (l_320, l_300, l_3);
      l_330 = !l_611;
      l_340 = !l_511;
      l_350 = !l_411;
      l_360 = (l_350 && l_310);
      l_370 = (l_340 && l_360);
      l_380 = (l_330 && l_370);
      info3 = __c - conditional__ (l_380, 5, info4);
      i_00 = max (1, nrowa0);
      l_200 = (lda < i_00);
      l_390 = !l_611;
      l_410 = !l_511;
      l_420 = !l_411;
      l_430 = !l_310;
      l_440 = (l_420 && l_430);
      l_450 = (l_410 && l_440);
      l_460 = (l_390 && l_450);
      l_210 = __c - conditional__ (l_460, l_200, l_2);
      l_470 = !l_611;
      l_480 = !l_511;
      l_490 = !l_411;
      l_510 = !l_310;
      l_520 = (l_510 && l_210);
      l_530 = (l_490 && l_520);
      l_540 = (l_480 && l_530);
      l_550 = (l_470 && l_540);
      info2 = __c - conditional__ (l_550, 8, info3);
      i_10 = max (1, nrowb0);
      l_100 = (ldb < i_10);
      l_560 = !l_611;
      l_570 = !l_511;
      l_580 = !l_411;
      l_590 = !l_310;
      l_600 = !l_210;
      l_610 = (l_590 && l_600);
      l_620 = (l_580 && l_610);
      l_630 = (l_570 && l_620);
      l_640 = (l_560 && l_630);
      l_110 = __c - conditional__ (l_640, l_100, l_1);
      l_650 = !l_611;
      l_660 = !l_511;
      l_670 = !l_411;
      l_680 = !l_310;
      l_690 = !l_210;
      l_700 = (l_690 && l_110);
      l_711 = (l_680 && l_700);
      l_720 = (l_670 && l_711);
      l_730 = (l_660 && l_720);
      l_740 = (l_650 && l_730);
      info1 = __c - conditional__ (l_740, 10, info2);
      i_20 = max (1, m);
      l_000 = (ldc < i_20);
      l_750 = !l_611;
      l_760 = !l_511;
      l_770 = !l_411;
      l_780 = !l_310;
      l_790 = !l_210;
      l_800 = !l_110;
      l_811 = (l_790 && l_800);
      l_820 = (l_780 && l_811);
      l_830 = (l_770 && l_820);
      l_840 = (l_760 && l_830);
      l_850 = (l_750 && l_840);
      l_01 = __c - conditional__ (l_850, l_000, l_0);
      l_860 = !l_611;
      l_870 = !l_511;
      l_880 = !l_411;
      l_890 = !l_310;
      l_900 = !l_210;
      l_910 = !l_110;
      l_920 = (l_910 && l_01);
      l_930 = (l_900 && l_920);
      l_940 = (l_890 && l_930);
      l_950 = (l_880 && l_940);
      l_960 = (l_870 && l_950);
      l_970 = (l_860 && l_960);
      info0 = __c - conditional__ (l_970, 13, info1);
    }
  if (info0 != 0)
    {
      ;
    }
  else
    {
      if (((m == 0) || (n == 0))
	  || (((alpha == zero0) || (k == 0)) && (beta == one0)))
	{
	}
      else
	{
	  if (alpha == zero0)
	    {
	      if (beta == zero0)
		{
		  for (j = 1; j <= n; j++)
		    {
		      lu_nub00 = m;
		      lu_ib00 = mod (lu_nub00, 4);
		      for (lu_ind0 = 0; lu_ind0 <= lu_ib00 - 1; lu_ind0++)
			{
			  c[j - 1][(1 + lu_ind0) - 1] = zero0;
			  continue;
			}
		      for (lu_ind0 = lu_ib00; lu_ind0 <= lu_nub00 - 1;
			   lu_ind0 += 4)
			{
			  c[j - 1][(1 + lu_ind0) - 1] = zero0;
			  c[j - 1][(2 + lu_ind0) - 1] = zero0;
			  c[j - 1][(3 + lu_ind0) - 1] = zero0;
			  c[j - 1][(4 + lu_ind0) - 1] = zero0;
			  continue;
			}
		      continue;
		    }
		}
	      else
		{
		  for (j = 1; j <= n; j++)
		    {
		      lu_nub10 = m;
		      lu_ib10 = mod (lu_nub10, 4);
		      for (lu_ind1 = 0; lu_ind1 <= lu_ib10 - 1; lu_ind1++)
			{
			  c[j - 1][(1 + lu_ind1) - 1] =
			    (beta * c[j - 1][(1 + lu_ind1) - 1]);
			  continue;
			}
		      simd_load_v4sf (v4sf_vec1, aligned[0]);
		      for (lu_ind1 = lu_ib10; lu_ind1 <= lu_nub10 - 1;
			   lu_ind1 += 4)
			{
			  simd_load_v4sf (v4sf_vec0,
					  c[j - 1][(1 + lu_ind1) - 1]);
			  simd_mulps (v4sf_vec0, v4sf_vec1, v4sf_vec0);
			  simd_save_v4sf (v4sf_vec0,
					  c[j - 1][(1 + lu_ind1) - 1]);
			  continue;
			}
		      continue;
		    }
		}
	    }
	  else
	    {
	      if (notb0)
		{
		  if (nota0)
		    {
		      for (j = 1; j <= n; j++)
			{
			  if (beta == zero0)
			    {
			      lu_nub20 = m;
			      lu_ib20 = mod (lu_nub20, 4);
			      for (lu_ind2 = 0; lu_ind2 <= lu_ib20 - 1;
				   lu_ind2++)
				{
				  c[j - 1][(1 + lu_ind2) - 1] = zero0;
				  continue;
				}
			      for (lu_ind2 = lu_ib20; lu_ind2 <= lu_nub20 - 1;
				   lu_ind2 += 4)
				{
				  c[j - 1][(1 + lu_ind2) - 1] = zero0;
				  c[j - 1][(2 + lu_ind2) - 1] = zero0;
				  c[j - 1][(3 + lu_ind2) - 1] = zero0;
				  c[j - 1][(4 + lu_ind2) - 1] = zero0;
				  continue;
				}
			    }
			  else
			    {
			      if (beta != one0)
				{
				  lu_nub30 = m;
				  lu_ib30 = mod (lu_nub30, 4);
				  for (lu_ind3 = 0; lu_ind3 <= lu_ib30 - 1;
				       lu_ind3++)
				    {
				      c[j - 1][(1 + lu_ind3) - 1] =
					(beta * c[j - 1][(1 + lu_ind3) - 1]);
				      continue;
				    }
				  simd_load_v4sf (v4sf_vec3, aligned0[0]);
				  for (lu_ind3 = lu_ib30;
				       lu_ind3 <= lu_nub30 - 1; lu_ind3 += 4)
				    {
				      simd_load_v4sf (v4sf_vec2,
						      c[j - 1][(1 + lu_ind3) -
							       1]);
				      simd_mulps (v4sf_vec2, v4sf_vec3,
						  v4sf_vec2);
				      simd_save_v4sf (v4sf_vec2,
						      c[j - 1][(1 + lu_ind3) -
							       1]);
				      continue;
				    }
				}
			    }
			  for (l = 1; l <= k; l++)
			    {
			      if (b[j - 1][l - 1] != zero0)
				{
				  temp7 = (alpha * b[j - 1][l - 1]);
				  lu_nub40 = m;
				  lu_ib40 = mod (lu_nub40, 4);
				  for (lu_ind4 = 0; lu_ind4 <= lu_ib40 - 1;
				       lu_ind4++)
				    {
				      f_04 =
					(temp7 * a[l - 1][(1 + lu_ind4) - 1]);
				      c[j - 1][(1 + lu_ind4) - 1] =
					(c[j - 1][(1 + lu_ind4) - 1] + f_04);
				      continue;
				    }
				  simd_load_v4sf (v4sf_vec5, aligned1[0]);
				  for (lu_ind4 = lu_ib40;
				       lu_ind4 <= lu_nub40 - 1; lu_ind4 += 4)
				    {
				      simd_load_v4sf (v4sf_vec6,
						      a[l - 1][(1 + lu_ind4) -
							       1]);
				      simd_mulps (v4sf_vec4, v4sf_vec5,
						  v4sf_vec6);
				      simd_load_v4sf (v4sf_vec7,
						      c[j - 1][(1 + lu_ind4) -
							       1]);
				      simd_addps (v4sf_vec7, v4sf_vec7,
						  v4sf_vec4);
				      simd_save_v4sf (v4sf_vec7,
						      c[j - 1][(1 + lu_ind4) -
							       1]);
				      continue;
				    }
				}
			      continue;
			    }
			  continue;
			}
		    }
		  else
		    {
		      for (j = 1; j <= n; j++)
			{
			  for (i = 1; i <= m; i++)
			    {
			      l_710 = (beta == zero0);
			      c[j - 1][i - 1] =
				__c - conditional__ (l_710, aligned6[0],
						     c[j - 1][i - 1]);
			      f_30 = (beta * c[j - 1][i - 1]);
			      c10 = (aligned6[1] + f_30);
			      l_980 = !l_710;
			      c[j - 1][i - 1] =
				__c - conditional__ (l_980, c10,
						     c[j - 1][i - 1]);
			      continue;
			    }
			  continue;
			}
		    }
		}
	      else
		{
		  if (nota0)
		    {
		      for (j = 1; j <= n; j++)
			{
			  if (beta == zero0)
			    {
			      lu_nub60 = m;
			      lu_ib60 = mod (lu_nub60, 4);
			      for (lu_ind6 = 0; lu_ind6 <= lu_ib60 - 1;
				   lu_ind6++)
				{
				  c[j - 1][(1 + lu_ind6) - 1] = zero0;
				  continue;
				}
			      for (lu_ind6 = lu_ib60; lu_ind6 <= lu_nub60 - 1;
				   lu_ind6 += 4)
				{
				  c[j - 1][(1 + lu_ind6) - 1] = zero0;
				  c[j - 1][(2 + lu_ind6) - 1] = zero0;
				  c[j - 1][(3 + lu_ind6) - 1] = zero0;
				  c[j - 1][(4 + lu_ind6) - 1] = zero0;
				  continue;
				}
			    }
			  else
			    {
			      if (beta != one0)
				{
				  lu_nub70 = m;
				  lu_ib70 = mod (lu_nub70, 4);
				  for (lu_ind7 = 0; lu_ind7 <= lu_ib70 - 1;
				       lu_ind7++)
				    {
				      c[j - 1][(1 + lu_ind7) - 1] =
					(beta * c[j - 1][(1 + lu_ind7) - 1]);
				      continue;
				    }
				  simd_load_v4sf (v4sf_vec18, aligned7[0]);
				  for (lu_ind7 = lu_ib70;
				       lu_ind7 <= lu_nub70 - 1; lu_ind7 += 4)
				    {
				      simd_load_v4sf (v4sf_vec17,
						      c[j - 1][(1 + lu_ind7) -
							       1]);
				      simd_mulps (v4sf_vec17, v4sf_vec18,
						  v4sf_vec17);
				      simd_save_v4sf (v4sf_vec17,
						      c[j - 1][(1 + lu_ind7) -
							       1]);
				      continue;
				    }
				}
			    }
			  for (l = 1; l <= k; l++)
			    {
			      if (b[l - 1][j - 1] != zero0)
				{
				  temp3 = (alpha * b[l - 1][j - 1]);
				  lu_nub80 = m;
				  lu_ib80 = mod (lu_nub80, 4);
				  for (lu_ind8 = 0; lu_ind8 <= lu_ib80 - 1;
				       lu_ind8++)
				    {
				      f_44 =
					(temp3 * a[l - 1][(1 + lu_ind8) - 1]);
				      c[j - 1][(1 + lu_ind8) - 1] =
					(c[j - 1][(1 + lu_ind8) - 1] + f_44);
				      continue;
				    }
				  simd_load_v4sf (v4sf_vec20, aligned8[0]);
				  for (lu_ind8 = lu_ib80;
				       lu_ind8 <= lu_nub80 - 1; lu_ind8 += 4)
				    {
				      simd_load_v4sf (v4sf_vec21,
						      a[l - 1][(1 + lu_ind8) -
							       1]);
				      simd_mulps (v4sf_vec19, v4sf_vec20,
						  v4sf_vec21);
				      simd_load_v4sf (v4sf_vec22,
						      c[j - 1][(1 + lu_ind8) -
							       1]);
				      simd_addps (v4sf_vec22, v4sf_vec22,
						  v4sf_vec19);
				      simd_save_v4sf (v4sf_vec22,
						      c[j - 1][(1 + lu_ind8) -
							       1]);
				      continue;
				    }
				}
			      continue;
			    }
			  continue;
			}
		    }
		  else
		    {
		      for (j = 1; j <= n; j++)
			{
			  for (i = 1; i <= m; i++)
			    {
			      l_810 = (beta == zero0);
			      c[j - 1][i - 1] =
				__c - conditional__ (l_810, aligned13[0],
						     c[j - 1][i - 1]);
			      f_70 = (beta * c[j - 1][i - 1]);
			      c30 = (aligned13[1] + f_70);
			      l_990 = !l_810;
			      c[j - 1][i - 1] =
				__c - conditional__ (l_990, c30,
						     c[j - 1][i - 1]);
			      continue;
			    }
			  continue;
			}
		    }
		}
	      ;
	    }
	}
    }
  return;
}

