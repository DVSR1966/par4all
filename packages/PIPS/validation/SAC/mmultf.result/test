
Initial code

      SUBROUTINE MMUL(A,B,C)
      INTEGER*4 SIZE
      PARAMETER (SIZE=4)


      INTEGER*4 A(SIZE,SIZE), B(SIZE,SIZE), C(SIZE,SIZE)
      INTEGER I, J,K

      DO 10 I = 1, SIZE                                                 0009
         DO 20 J = 1, SIZE                                              0010
            C(I,J) = 0                                                  0011
            DO 30 K = 1, SIZE                                           0012
               C(I,J) = C(I,J)+A(I,K)*B(K,J)                            0013
30             CONTINUE                                                 0014
20          CONTINUE                                                    0015
10       CONTINUE                                                       0016
      END

simdized code

      SUBROUTINE MMUL(A,B,C)
      INTEGER*4 SIZE
      PARAMETER (SIZE=4)


      INTEGER*4 A(SIZE,SIZE), B(SIZE,SIZE), C(SIZE,SIZE)
      INTEGER I, J,K

99995 CONTINUE
      DO 99994 LU_IND2 = 0, 3, 2
         DO LU_IND12 = 0, 3, 2
            C(1+LU_IND2,1+LU_IND12) = 0
            DO LU_IND022 = 0, 3, 2
               CALL SIMD_LOAD_V2SI(vec20, B(1+LU_IND022,1+LU_IND12))
               CALL SIMD_LOAD_GENERIC_V2SI(vec10, A(1+LU_IND2,1+
     &         LU_IND022), A(1+LU_IND2,2+LU_IND022))
               CALL SIMD_MULD(vec00, vec10, vec20)
               CALL SIMD_STORE_V2SI(vec00, pdata0(0))
               C(1+LU_IND2,1+LU_IND12) = pdata0(0)+C(1+LU_IND2,1+
     &         LU_IND12)
               C(1+LU_IND2,1+LU_IND12) = pdata0(1)+C(1+LU_IND2,1+
     &         LU_IND12)
            ENDDO
            C(1+LU_IND2,2+LU_IND12) = 0
            DO LU_IND012 = 0, 3, 2
               CALL SIMD_LOAD_V2SI(vec50, B(1+LU_IND012,2+LU_IND12))
               CALL SIMD_LOAD_GENERIC_V2SI(vec40, A(1+LU_IND2,1+
     &         LU_IND012), A(1+LU_IND2,2+LU_IND012))
               CALL SIMD_MULD(vec30, vec40, vec50)
               CALL SIMD_STORE_V2SI(vec30, pdata1(0))
               C(1+LU_IND2,2+LU_IND12) = pdata1(0)+C(1+LU_IND2,2+
     &         LU_IND12)
               C(1+LU_IND2,2+LU_IND12) = pdata1(1)+C(1+LU_IND2,2+
     &         LU_IND12)
            ENDDO
         ENDDO
         DO LU_IND11 = 0, 3, 2
            C(2+LU_IND2,1+LU_IND11) = 0
            DO LU_IND021 = 0, 3, 2
               CALL SIMD_LOAD_V2SI(vec80, B(1+LU_IND021,1+LU_IND11))
               CALL SIMD_LOAD_GENERIC_V2SI(vec70, A(2+LU_IND2,1+
     &         LU_IND021), A(2+LU_IND2,2+LU_IND021))
               CALL SIMD_MULD(vec60, vec70, vec80)
               CALL SIMD_STORE_V2SI(vec60, pdata2(0))
               C(2+LU_IND2,1+LU_IND11) = pdata2(0)+C(2+LU_IND2,1+
     &         LU_IND11)
               C(2+LU_IND2,1+LU_IND11) = pdata2(1)+C(2+LU_IND2,1+
     &         LU_IND11)
            ENDDO
            C(2+LU_IND2,2+LU_IND11) = 0
            DO LU_IND011 = 0, 3, 2
               CALL SIMD_LOAD_V2SI(vec110, B(1+LU_IND011,2+LU_IND11))
               CALL SIMD_LOAD_GENERIC_V2SI(vec100, A(2+LU_IND2,1+
     &         LU_IND011), A(2+LU_IND2,2+LU_IND011))
               CALL SIMD_MULD(vec90, vec100, vec110)
               CALL SIMD_STORE_V2SI(vec90, pdata3(0))
               C(2+LU_IND2,2+LU_IND11) = pdata3(0)+C(2+LU_IND2,2+
     &         LU_IND11)
               C(2+LU_IND2,2+LU_IND11) = pdata3(1)+C(2+LU_IND2,2+
     &         LU_IND11)
            ENDDO
         ENDDO
99994    CONTINUE
      END
