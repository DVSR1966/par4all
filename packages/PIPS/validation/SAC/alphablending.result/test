      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER I
      REAL*4 RESULT(1:SIZE), SRC(1:SIZE), DEST(1:SIZE), ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      DO 10 I = 1, SIZE                                                 0015
         RESULT(I) = ALPHA*SRC(I)+(1-ALPHA)*DEST(I)                     0016
10       CONTINUE                                                       0017

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER I
      REAL*4 RESULT(1:SIZE), SRC(1:SIZE), DEST(1:SIZE), ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      DO 10 I = 1, SIZE                                                 0015
         RESULT(I) = ALPHA*SRC(I)+(1-ALPHA)*DEST(I)                     0016
10       CONTINUE                                                       0017

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER I
      REAL*4 RESULT(1:SIZE), SRC(1:SIZE), DEST(1:SIZE), ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      DO 10 I = 1, SIZE                                                 0015
         RESULT(I) = ALPHA*SRC(I)+(1-ALPHA)*DEST(I)                     0016
10       CONTINUE                                                       0017

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER I
      REAL*4 F_2, F_1, F_0, RESULT(1:SIZE), SRC(1:SIZE), DEST(1:SIZE)
     &, ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      DO 10 I = 1, 50000                                                0015
         F_0 = ALPHA*SRC(I)
         F_1 = 1-ALPHA
         F_2 = F_1*DEST(I)
         RESULT(I) = F_0+F_2                                            0016
10       CONTINUE                                                       0017

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER LU_IND0, LU_IB0, LU_NUB0, I
      REAL*4 F_2, F_1, F_0, RESULT(1:SIZE), SRC(1:SIZE), DEST(1:SIZE)
     &, ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      LU_NUB0 = 50000
      LU_IB0 = 0
      LU_IND0 = 0
99999 CONTINUE
      DO 99998 LU_IND0 = 0, 49999, 4
c SIMD_COMMENT_0
         F_0 = ALPHA*SRC(LU_IND0+1)
c SIMD_COMMENT_1
         F_1 = 1-ALPHA
c SIMD_COMMENT_2
         F_2 = F_1*DEST(LU_IND0+1)
c SIMD_COMMENT_3
         RESULT(LU_IND0+1) = F_0+F_2                                    0016
c SIMD_COMMENT_0
         F_0 = ALPHA*SRC(LU_IND0+2)
c SIMD_COMMENT_1
         F_1 = 1-ALPHA
c SIMD_COMMENT_2
         F_2 = F_1*DEST(LU_IND0+2)
c SIMD_COMMENT_3
         RESULT(LU_IND0+2) = F_0+F_2                                    0016
c SIMD_COMMENT_0
         F_0 = ALPHA*SRC(LU_IND0+3)
c SIMD_COMMENT_1
         F_1 = 1-ALPHA
c SIMD_COMMENT_2
         F_2 = F_1*DEST(LU_IND0+3)
c SIMD_COMMENT_3
         RESULT(LU_IND0+3) = F_0+F_2                                    0016
c SIMD_COMMENT_0
         F_0 = ALPHA*SRC(LU_IND0+4)
c SIMD_COMMENT_1
         F_1 = 1-ALPHA
c SIMD_COMMENT_2
         F_2 = F_1*DEST(LU_IND0+4)
c SIMD_COMMENT_3
         RESULT(LU_IND0+4) = F_0+F_2                                    0016
99998    CONTINUE
      I = 50001

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER LU_IND0, LU_IB0, LU_NUB0, I
      REAL*4 F_2, F_1, F_0, RESULT(1:SIZE), SRC(1:SIZE), DEST(1:SIZE)
     &, ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      LU_NUB0 = 50000
      LU_IB0 = 0
      LU_IND0 = 0
99999 CONTINUE
      DO 99998 LU_IND0 = 0, 49999, 4
c SIMD_COMMENT_0
         F_0 = ALPHA*SRC(LU_IND0+1)
c SIMD_COMMENT_1
         F_1 = 1-ALPHA
c SIMD_COMMENT_2
         F_2 = F_1*DEST(LU_IND0+1)
c SIMD_COMMENT_3
         RESULT(LU_IND0+1) = F_0+F_2                                    0016
c SIMD_COMMENT_0
         F_0 = ALPHA*SRC(LU_IND0+2)
c SIMD_COMMENT_1
         F_1 = 1-ALPHA
c SIMD_COMMENT_2
         F_2 = F_1*DEST(LU_IND0+2)
c SIMD_COMMENT_3
         RESULT(LU_IND0+2) = F_0+F_2                                    0016
c SIMD_COMMENT_0
         F_0 = ALPHA*SRC(LU_IND0+3)
c SIMD_COMMENT_1
         F_1 = 1-ALPHA
c SIMD_COMMENT_2
         F_2 = F_1*DEST(LU_IND0+3)
c SIMD_COMMENT_3
         RESULT(LU_IND0+3) = F_0+F_2                                    0016
c SIMD_COMMENT_0
         F_0 = ALPHA*SRC(LU_IND0+4)
c SIMD_COMMENT_1
         F_1 = 1-ALPHA
c SIMD_COMMENT_2
         F_2 = F_1*DEST(LU_IND0+4)
c SIMD_COMMENT_3
         RESULT(LU_IND0+4) = F_0+F_2                                    0016
99998    CONTINUE
      I = 50001

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER LU_IND0, LU_IB0, LU_NUB0, I
      REAL*4 F_03, F_13, F_23, F_02, F_12, F_22, F_01, F_11, F_21, 
     &F_00, F_10, F_20, F_2, F_1, F_0, RESULT(1:SIZE), SRC(1:SIZE), 
     &DEST(1:SIZE), ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      LU_NUB0 = 50000
      LU_IB0 = 0
      LU_IND0 = 0
99999 CONTINUE
      DO 99998 LU_IND0 = 0, 49999, 4
c SIMD_COMMENT_0
         F_03 = ALPHA*SRC(LU_IND0+1)
c SIMD_COMMENT_1
         F_13 = 1-ALPHA
c SIMD_COMMENT_2
         F_23 = F_13*DEST(LU_IND0+1)
c SIMD_COMMENT_3
         RESULT(LU_IND0+1) = F_03+F_23                                  0016
c SIMD_COMMENT_0
         F_02 = ALPHA*SRC(LU_IND0+2)
c SIMD_COMMENT_1
         F_12 = 1-ALPHA
c SIMD_COMMENT_2
         F_22 = F_12*DEST(LU_IND0+2)
c SIMD_COMMENT_3
         RESULT(LU_IND0+2) = F_02+F_22                                  0016
c SIMD_COMMENT_0
         F_01 = ALPHA*SRC(LU_IND0+3)
c SIMD_COMMENT_1
         F_11 = 1-ALPHA
c SIMD_COMMENT_2
         F_21 = F_11*DEST(LU_IND0+3)
c SIMD_COMMENT_3
         RESULT(LU_IND0+3) = F_01+F_21                                  0016
c SIMD_COMMENT_0
         F_00 = ALPHA*SRC(LU_IND0+4)
c SIMD_COMMENT_1
         F_10 = 1-ALPHA
c SIMD_COMMENT_2
         F_20 = F_10*DEST(LU_IND0+4)
c SIMD_COMMENT_3
         RESULT(LU_IND0+4) = F_00+F_20                                  0016
99998    CONTINUE
      I = 50001

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER LU_IND0, LU_IB0, LU_NUB0, I
      REAL*4 v4sf_vec23(0:3), v4sf_vec22(0:3), v4sf_vec21(0:3), 
     &v4sf_vec20(0:3), v4sf_vec19(0:3), v4sf_vec18(0:3), v4sf_vec17(0
     &:3), v4sf_vec16(0:3), v4sf_vec15(0:3), v4sf_vec14(0:3), 
     &v4sf_vec13(0:3), v4sf_vec12(0:3), v4sf_vec11(0:3), v4sf_vec10(0
     &:3), v4sf_vec9(0:3), v4sf_vec8(0:3), v4sf_vec7(0:3), v4sf_vec6(
     &0:3), v4sf_vec5(0:3), v4sf_vec4(0:3), v4sf_vec3(0:3), v4sf_vec2
     &(0:3), v4sf_vec1(0:3), v4sf_vec0(0:3), F_03, F_13, F_23, F_02, 
     &F_12, F_22, F_01, F_11, F_21, F_00, F_10, F_20, F_2, F_1, F_0, 
     &RESULT(1:SIZE), SRC(1:SIZE), DEST(1:SIZE), ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      LU_NUB0 = 50000
      LU_IB0 = 0
      LU_IND0 = 0
99999 CONTINUE
      DO 99998 LU_IND0 = 0, 49999, 4
         CALL SIMD_LOAD_V4SF(v4sf_vec2, SRC(LU_IND0+1))
         CALL SIMD_LOAD_GENERIC_V4SF(v4sf_vec1, ALPHA, ALPHA, ALPHA, 
     &   ALPHA)
         CALL SIMD_MULPS(v4sf_vec0, v4sf_vec1, v4sf_vec2)
         CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec0, F_03, F_02, F_01, 
     &   F_00)
         CALL SIMD_LOAD_CONSTANT_V4SF(v4sf_vec4, 1, 1, 1, 1)
         CALL SIMD_SUBPS(v4sf_vec3, v4sf_vec4, v4sf_vec1)
         CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec3, F_13, F_12, F_11, 
     &   F_10)
         CALL SIMD_LOAD_V4SF(v4sf_vec8, DEST(LU_IND0+1))
         CALL SIMD_MULPS(v4sf_vec6, v4sf_vec3, v4sf_vec8)
         CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec6, F_23, F_22, F_21, 
     &   F_20)
         CALL SIMD_ADDPS(v4sf_vec9, v4sf_vec0, v4sf_vec6)
         CALL SIMD_SAVE_V4SF(v4sf_vec9, RESULT(LU_IND0+1))
99998    CONTINUE
      I = 50001

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER LU_IND0, LU_IB0, LU_NUB0, I
      REAL*4 v4sf_vec23(0:3), v4sf_vec22(0:3), v4sf_vec21(0:3), 
     &v4sf_vec20(0:3), v4sf_vec19(0:3), v4sf_vec18(0:3), v4sf_vec17(0
     &:3), v4sf_vec16(0:3), v4sf_vec15(0:3), v4sf_vec14(0:3), 
     &v4sf_vec13(0:3), v4sf_vec12(0:3), v4sf_vec11(0:3), v4sf_vec10(0
     &:3), v4sf_vec9(0:3), v4sf_vec8(0:3), v4sf_vec7(0:3), v4sf_vec6(
     &0:3), v4sf_vec5(0:3), v4sf_vec4(0:3), v4sf_vec3(0:3), v4sf_vec2
     &(0:3), v4sf_vec1(0:3), v4sf_vec0(0:3), F_03, F_13, F_23, F_02, 
     &F_12, F_22, F_01, F_11, F_21, F_00, F_10, F_20, F_2, F_1, F_0, 
     &RESULT(1:SIZE), SRC(1:SIZE), DEST(1:SIZE), ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      LU_NUB0 = 50000
      LU_IB0 = 0
      LU_IND0 = 0
99999 CONTINUE
      CALL SIMD_LOAD_GENERIC_V4SF(v4sf_vec1, ALPHA, ALPHA, ALPHA, 
     &ALPHA)
      CALL SIMD_LOAD_CONSTANT_V4SF(v4sf_vec4, 1, 1, 1, 1)
      DO 99998 LU_IND0 = 0, 49999, 4
         CALL SIMD_LOAD_V4SF(v4sf_vec2, SRC(LU_IND0+1))
         CALL SIMD_MULPS(v4sf_vec0, v4sf_vec1, v4sf_vec2)
         CALL SIMD_SUBPS(v4sf_vec3, v4sf_vec4, v4sf_vec1)
         CALL SIMD_LOAD_V4SF(v4sf_vec8, DEST(LU_IND0+1))
         CALL SIMD_MULPS(v4sf_vec6, v4sf_vec3, v4sf_vec8)
         CALL SIMD_ADDPS(v4sf_vec9, v4sf_vec0, v4sf_vec6)
         CALL SIMD_SAVE_V4SF(v4sf_vec9, RESULT(LU_IND0+1))
99998    CONTINUE
      CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec0, F_03, F_02, F_01, F_00)
      CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec3, F_13, F_12, F_11, F_10)
      CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec6, F_23, F_22, F_21, F_20)
      I = 50001

      END
      SUBROUTINE ALPHABLENDING(RESULT, SRC, DEST, ALPHA)
      INTEGER*4 SIZE
      PARAMETER (SIZE = 50000)
      INTEGER LU_IND0, LU_IB0, LU_NUB0, I
      REAL*4 v4sf_vec9(0:3), v4sf_vec8(0:3), v4sf_vec6(0:3), 
     &v4sf_vec4(0:3), v4sf_vec3(0:3), v4sf_vec2(0:3), v4sf_vec1(0:3)
     &, v4sf_vec0(0:3), F_03, F_13, F_23, F_02, F_12, F_22, F_01, 
     &F_11, F_21, F_00, F_10, F_20, RESULT(1:SIZE), SRC(1:SIZE), DEST
     &(1:SIZE), ALPHA

c      INCLUDE 'ALPHABLENDING_INC2.f'

      LU_NUB0 = 50000
      LU_IB0 = 0
      LU_IND0 = 0
99999 CONTINUE
      CALL SIMD_LOAD_GENERIC_V4SF(v4sf_vec1, ALPHA, ALPHA, ALPHA, 
     &ALPHA)
      CALL SIMD_LOAD_CONSTANT_V4SF(v4sf_vec4, 1, 1, 1, 1)
      DO 99998 LU_IND0 = 0, 49999, 4
         CALL SIMD_LOAD_V4SF(v4sf_vec2, SRC(LU_IND0+1))
         CALL SIMD_MULPS(v4sf_vec0, v4sf_vec1, v4sf_vec2)
         CALL SIMD_SUBPS(v4sf_vec3, v4sf_vec4, v4sf_vec1)
         CALL SIMD_LOAD_V4SF(v4sf_vec8, DEST(LU_IND0+1))
         CALL SIMD_MULPS(v4sf_vec6, v4sf_vec3, v4sf_vec8)
         CALL SIMD_ADDPS(v4sf_vec9, v4sf_vec0, v4sf_vec6)
         CALL SIMD_SAVE_V4SF(v4sf_vec9, RESULT(LU_IND0+1))
99998    CONTINUE
      CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec0, F_03, F_02, F_01, F_00)
      CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec3, F_13, F_12, F_11, F_10)
      CALL SIMD_SAVE_GENERIC_V4SF(v4sf_vec6, F_23, F_22, F_21, F_20)
      I = 50001

      END
/* C pretty print for module ALPHABLENDING. */
#define size 50000

void
alphablending (float result[50000], float src[50000], float dest[50000],
	       float alpha)
{
  float v4sf_vec9[4];
  float v4sf_vec8[4];
  float v4sf_vec6[4];
  float v4sf_vec4[4];
  float v4sf_vec3[4];
  float v4sf_vec2[4];
  float v4sf_vec1[4];
  float v4sf_vec0[4];
  float f_03;
  float f_13;
  float f_23;
  float f_02;
  float f_12;
  float f_22;
  float f_01;
  float f_11;
  float f_21;
  float f_00;
  float f_10;
  float f_20;
  int lu_ind0;
  int lu_ib0;
  int lu_nub0;
  int i;

  lu_nub0 = 50000;
  lu_ib0 = 0;
  lu_ind0 = 0;
  ;
  simd_load_generic_v4sf (v4sf_vec1, alpha, alpha, alpha, alpha);
  simd_load_constant_v4sf (v4sf_vec4, 1, 1, 1, 1);
  for (lu_ind0 = 0; lu_ind0 <= 49999; lu_ind0 += 4)
    {
      simd_load_v4sf (v4sf_vec2, src[(lu_ind0 + 1) - 1]);
      simd_mulps (v4sf_vec0, v4sf_vec1, v4sf_vec2);
      simd_subps (v4sf_vec3, v4sf_vec4, v4sf_vec1);
      simd_load_v4sf (v4sf_vec8, dest[(lu_ind0 + 1) - 1]);
      simd_mulps (v4sf_vec6, v4sf_vec3, v4sf_vec8);
      simd_addps (v4sf_vec9, v4sf_vec0, v4sf_vec6);
      simd_save_v4sf (v4sf_vec9, result[(lu_ind0 + 1) - 1]);
      continue;
    }
  simd_save_generic_v4sf (v4sf_vec0, f_03, f_02, f_01, f_00);
  simd_save_generic_v4sf (v4sf_vec3, f_13, f_12, f_11, f_10);
  simd_save_generic_v4sf (v4sf_vec6, f_23, f_22, f_21, f_20);
  i = 50001;
  return;
}

