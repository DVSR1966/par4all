
Initial code

void pack_transposition(double a[5][5])
{
   int i, j;
   for(i = 0; i <= 3; i += 1)
      for(j = 0; j <= 1; j += 1)
         a[i][j+1] = a[i][j]+a[i][j+2];
}
void pack_transposition(double a[5][5])
{
   int i, j;
   for(i = 0; i <= 3; i += 1)
      for(j = 0; j <= 1; j += 1)
         a[i][j+1] = a[i][j]+a[i][j+2];
}
void pack_transposition(double a[5][5])
{
   int i, j;
   for(i = 0; i <= 3; i += 1)
      for(j = 0; j <= 1; j += 1)
         a[i][j+1] = a[i][j]+a[i][j+2];
}
void pack_transposition(double a[5][5])
{
   int i, j;
   for(i = 0; i <= 3; i += 1)
      for(j = 0; j <= 1; j += 1)
         a[i][j+1] = a[i][j]+a[i][j+2];
}
void pack_transposition(double a[5][5])
{
   int i, j;
   for(i = 0; i <= 3; i += 1)
      for(j = 0; j <= 1; j += 1)
         a[i][j+1] = a[i][j]+a[i][j+2];
}
void pack_transposition(double a[5][5])
{
   int i, j;
   for(i = 0; i <= 3; i += 1) {
      a[i][1] = a[i][0]+a[i][2];
      a[i][2] = a[i][1]+a[i][3];
      j = 2;
   }
   ;
}
void pack_transposition(double a[5][5])
{
   int i, j;
   //PIPS generated variable
   int LU_NUB0, LU_IB0, LU_IND0;
   LU_NUB0 = 4;
   LU_IB0 = 0;
   LU_IND0 = 0;
   for(LU_IND0 = 0; LU_IND0 <= 3; LU_IND0 += 2) {
      a[LU_IND0][1] = a[LU_IND0][0]+a[LU_IND0][2];
      a[LU_IND0][2] = a[LU_IND0][1]+a[LU_IND0][3];
      j = 2;
      a[LU_IND0+1][1] = a[LU_IND0+1][0]+a[LU_IND0+1][2];
      a[LU_IND0+1][2] = a[LU_IND0+1][1]+a[LU_IND0+1][3];
      j = 2;
   }
   i = 4;
   ;
}
void pack_transposition(double a[5][5])
{
   int i, j;
   //PIPS generated variable
   int LU_NUB0, LU_IB0, LU_IND0;
   LU_NUB0 = 4;
   LU_IB0 = 0;
   LU_IND0 = 0;
   for(LU_IND0 = 0; LU_IND0 <= 3; LU_IND0 += 2) {
      a[LU_IND0][1] = a[LU_IND0][0]+a[LU_IND0][2];
      a[LU_IND0][2] = a[LU_IND0][1]+a[LU_IND0][3];
      j = 2;
      a[LU_IND0+1][1] = a[LU_IND0+1][0]+a[LU_IND0+1][2];
      a[LU_IND0+1][2] = a[LU_IND0+1][1]+a[LU_IND0+1][3];
      j = 2;
   }
   i = 4;
   ;
}
void pack_transposition(double a[5][5])
{
   int i, j;
   //PIPS generated variable
   int LU_NUB0, LU_IB0, LU_IND0;
   LU_NUB0 = 4;
   LU_IB0 = 0;
   LU_IND0 = 0;
   for(LU_IND0 = 0; LU_IND0 <= 3; LU_IND0 += 2) {
      a[LU_IND0][1] = a[LU_IND0][0]+a[LU_IND0][2];
      a[LU_IND0][2] = a[LU_IND0][1]+a[LU_IND0][3];
      j = 2;
      a[LU_IND0+1][1] = a[LU_IND0+1][0]+a[LU_IND0+1][2];
      a[LU_IND0+1][2] = a[LU_IND0+1][1]+a[LU_IND0+1][3];
      j = 2;
   }
   i = 4;
   ;
}
void pack_transposition(double a[5][5])
{
   int i, j;
   //PIPS generated variable
   int LU_NUB0, LU_IB0, LU_IND0;
   LU_NUB0 = 4;
   LU_IB0 = 0;
   LU_IND0 = 0;
   for(LU_IND0 = 0; LU_IND0 <= 3; LU_IND0 += 2) {
      //PIPS:SAC generated v2df vector(s)
      v2df vec00, vec10, vec20, vec30, vec40, vec50;
      SIMD_LOAD_GENERIC_V2DF(vec20, a[LU_IND0][2], a[1+LU_IND0][2]);
      SIMD_LOAD_GENERIC_V2DF(vec10, a[LU_IND0][0], a[1+LU_IND0][0]);
      SIMD_ADDPD(vec00, vec10, vec20);
      SIMD_STORE_GENERIC_V2DF(vec00, &a[LU_IND0][1], &a[1+LU_IND0][1]);
      j = 2;
      SIMD_LOAD_GENERIC_V2DF(vec50, a[LU_IND0][3], a[1+LU_IND0][3]);
      SIMD_ADDPD(vec30, vec00, vec50);
      SIMD_STORE_GENERIC_V2DF(vec30, &a[LU_IND0][2], &a[1+LU_IND0][2]);
      j = 2;
   }
   i = 4;
   ;
}
void pack_transposition(double a[5][5])
{
   int i, j;
   //PIPS generated variable
   int LU_NUB0, LU_IB0, LU_IND0;
   LU_NUB0 = 4;
   LU_IB0 = 0;
   LU_IND0 = 0;
   for(LU_IND0 = 0; LU_IND0 <= 3; LU_IND0 += 2) {
      //PIPS:SAC generated v2df vector(s)
      v2df vec00, vec10, vec20, vec30, vec40, vec50;
      SIMD_LOAD_GENERIC_V2DF(vec20, a[LU_IND0][2], a[1+LU_IND0][2]);
      SIMD_LOAD_GENERIC_V2DF(vec10, a[LU_IND0][0], a[1+LU_IND0][0]);
      SIMD_ADDPD(vec00, vec10, vec20);
      SIMD_STORE_GENERIC_V2DF(vec00, &a[LU_IND0][1], &a[1+LU_IND0][1]);
      j = 2;
      SIMD_LOAD_GENERIC_V2DF(vec50, a[LU_IND0][3], a[1+LU_IND0][3]);
      SIMD_ADDPD(vec30, vec00, vec50);
      SIMD_STORE_GENERIC_V2DF(vec30, &a[LU_IND0][2], &a[1+LU_IND0][2]);
      j = 2;
   }
   i = 4;
   ;
}
void pack_transposition(double a[5][5])
{
   //PIPS generated variable
   int LU_IND0;



   for(LU_IND0 = 0; LU_IND0 <= 3; LU_IND0 += 2) {
      //PIPS:SAC generated v2df vector(s)
      v2df vec00, vec10, vec20, vec30, vec50;
      SIMD_LOAD_GENERIC_V2DF(vec20, a[LU_IND0][2], a[1+LU_IND0][2]);
      SIMD_LOAD_GENERIC_V2DF(vec10, a[LU_IND0][0], a[1+LU_IND0][0]);
      SIMD_ADDPD(vec00, vec10, vec20);
      SIMD_STORE_GENERIC_V2DF(vec00, &a[LU_IND0][1], &a[1+LU_IND0][1]);

      SIMD_LOAD_GENERIC_V2DF(vec50, a[LU_IND0][3], a[1+LU_IND0][3]);
      SIMD_ADDPD(vec30, vec00, vec50);
      SIMD_STORE_GENERIC_V2DF(vec30, &a[LU_IND0][2], &a[1+LU_IND0][2]);

   }

   ;
}

simdized code

void pack_transposition(double a[5][5])
{
   //PIPS generated variable
   int LU_IND0;



   for(LU_IND0 = 0; LU_IND0 <= 3; LU_IND0 += 2) {
      //PIPS:SAC generated v2df vector(s)
      v2df vec00, vec10, vec20, vec30, vec50;
      SIMD_LOAD_GENERIC_V2DF(vec20, a[LU_IND0][2], a[1+LU_IND0][2]);
      SIMD_LOAD_GENERIC_V2DF(vec10, a[LU_IND0][0], a[1+LU_IND0][0]);
      SIMD_ADDPD(vec00, vec10, vec20);
      SIMD_STORE_GENERIC_V2DF(vec00, &a[LU_IND0][1], &a[1+LU_IND0][1]);

      SIMD_LOAD_GENERIC_V2DF(vec50, a[LU_IND0][3], a[1+LU_IND0][3]);
      SIMD_ADDPD(vec30, vec00, vec50);
      SIMD_STORE_GENERIC_V2DF(vec30, &a[LU_IND0][2], &a[1+LU_IND0][2]);

   }

   ;
}
seq-ok
sse-ok
