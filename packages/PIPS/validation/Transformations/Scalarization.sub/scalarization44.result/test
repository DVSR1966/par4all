#
# Code after scalarization for module guard
#
int guard(int i, int n, int a[n], int b[n])
{
   //PIPS generated variable

   if (i<n) {
      register int a_0 = a[i];
      b[i] = a_0/2+a_0/3;
   }
}
#
# Code after scalarization for module main
#
int main(int argc, char **argv)
{
   int n = 100;
   int a[n], b[n];
   {
      int i;
      
      // Ensure region IN for guard
      for(i = 0; i <= n-1; i += 1)
         a[i] = i;
   }
   {
      int i;
      
      // i goes over n ! (avoid precondition optimization)
      for(i = 0; i <= n+10-1; i += 1)
         guard(i, n, a, b);
   }
   {
      int i;
      
      
      // Ensure region OUT for guard
      for(i = 0; i <= n-1; i += 1)
         printf("%d\n", b[i]);
   }
}
