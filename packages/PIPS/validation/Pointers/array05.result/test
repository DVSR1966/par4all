
PROPER POINTER EFFECTS

int main()
{
   int t[100][10][3];

   int (*p)[3];
   int *pu;

   int (*q)[10][3];
   int (*qu)[3];

   int (*r)[100][10][3];
   int (*ru)[10][3];
//             <    is written>: p
   
   
   p = &t[1][2];
//             <    is read   >: p
//             <    is written>: p[0][1]
   (*p)[1] = 0;
//             <    is read   >: p
//             <    is written>: p[1][1]
   p[1][1] = 0;
//             <    is written>: pu

   pu = &t[1][2][0];
//             <    is read   >: pu
//             <    is written>: pu[0]
   *pu = 0;
//             <    is read   >: pu
//             <    is written>: pu[2]
   pu[2] = 0;
//             <    is written>: q

   q = &t[1];
//             <    is read   >: q
//             <    is written>: q[0][2][3]
   ((*q)[2])[3] = 0;
//             <    is read   >: q
//             <    is written>: q[1][2][3]
   q[1][2][3] = 0;
//             <    is written>: qu

   qu = &t[1][0];
//             <    is read   >: qu
//             <    is written>: qu[0][1]
   (*qu)[1] = 0;
//             <    is read   >: qu
//             <    is written>: qu[1][1]
   qu[1][1] = 0;
//             <    is written>: r

   r = &t;
//             <    is read   >: r
//             <    is written>: r[0][0][0][0]
   (((*r)[0])[0])[0] = 0;
//             <    is read   >: r
//             <    is written>: r[0][1][2][3]
   (((*r)[1])[2])[3] = 0;
//             <    is written>: ru

   ru = &t[0];
//             <    is read   >: ru
//             <    is written>: ru[0][0][0]
   ((*ru)[0])[0] = 0;
//             <    is read   >: ru
//             <    is written>: ru[0][0][0]
   ru[0][0][0] = 0;
//             <    is read   >: ru
//             <    is written>: ru[1][2][1]
   ru[1][2][1] = 0;

   return 0;
}

POINTS-TO

//  {}
int main()
{
//  points to = {}
   int t[100][10][3];

//  points to = {}
   int (*p)[3];
//  {(p,*ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   int *pu;

//  {(p,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(pu,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   int (*q)[10][3];
//  {(p,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(pu,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(q,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-)}
   int (*qu)[3];

//  {(p,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(pu,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(q,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   int (*r)[100][10][3];
//  {(p,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(pu,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(q,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(r,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   int (*ru)[10][3];
//  {(p,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(pu,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(q,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(r,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-)}
   
   
   p = &t[1][2];
//  {(p,t[1][2],-Exact-);(pu,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(q,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   (*p)[1] = 0;
//  {(p,t[1][2],-Exact-);(pu,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(q,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   p[1][1] = 0;
//  {(p,t[1][2],-Exact-);(pu,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(q,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}

   pu = &t[1][2][0];
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   *pu = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   pu[2] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(qu,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}

   q = &t[1];
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(ru,*ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   ((*q)[2])[3] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(ru,*ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   q[1][2][3] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-);(ru,*ANY_MODULE*:*NOWHERE*_b0,-Exact-)}

   qu = &t[1][0];
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   (*qu)[1] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   qu[1][1] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(ru,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}

   r = &t;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,t,-Exact-);(ru,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-)}
   (((*r)[0])[0])[0] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,t,-Exact-);(ru,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-)}
   (((*r)[1])[2])[3] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,t,-Exact-);(ru,*ANY_MODULE*:*NOWHERE*_b0,
//   -Exact-)}

   ru = &t[0];
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,t,-Exact-);(ru,t[0],-Exact-)}
   ((*ru)[0])[0] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,t,-Exact-);(ru,t[0],-Exact-)}
   ru[0][0][0] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,t,-Exact-);(ru,t[0],-Exact-)}
   ru[1][2][1] = 0;
//  {(p,t[1][2],-Exact-);(pu,t[1][2][0],-Exact-);(q,t[1],-Exact-);(qu,
//   t[1][0],-Exact-);(r,t,-Exact-);(ru,t[0],-Exact-)}

   return 0;
}
