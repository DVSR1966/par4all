
Proper effects for "main"

int main()
{
   struct p_s {
      struct q_s *q;
   };
   struct q_s {
      int r;
   };
   struct p_s *p;
   struct q_s *b;
   struct q_s *u;
   struct q_s *x;
   struct q_s **z;
//             <    is written>: a
   int a = 0;
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: u _MALLOC_EFFECTS:_MALLOC_
   u = (struct q_s *) malloc(sizeof(struct q_s ));
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: b _MALLOC_EFFECTS:_MALLOC_
   b = (struct q_s *) malloc(sizeof(struct q_s ));
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: p _MALLOC_EFFECTS:_MALLOC_
   p = (struct p_s *) malloc(sizeof(struct p_s ));
//             <    is read   >: b
//             <    is written>: x
   x = b;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p x
   p->q = x;
//             <    is read   >: p
//             <    is written>: z
   z = &p->q;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: b p
   p->q = b;
//             <    is written>: z
   z = &u;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*

   p->q->r = a;
   return 0;
}

Proper Pointer effects for "main"

int main()
{
   struct p_s {
      struct q_s *q;
   };
   struct q_s {
      int r;
   };
   struct p_s *p;
   struct q_s *b;
   struct q_s *u;
   struct q_s *x;
   struct q_s **z;
//             <    is written>: a
   int a = 0;
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: u _MALLOC_EFFECTS:_MALLOC_
   u = (struct q_s *) malloc(sizeof(struct q_s ));
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: b _MALLOC_EFFECTS:_MALLOC_
   b = (struct q_s *) malloc(sizeof(struct q_s ));
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: p _MALLOC_EFFECTS:_MALLOC_
   p = (struct p_s *) malloc(sizeof(struct p_s ));
//             <    is read   >: b
//             <    is written>: x
   x = b;
//             <    is read   >: p x
//             <    is written>: p[0].q
   p->q = x;
//             <    is read   >: p
//             <    is written>: z
   z = &p->q;
//             <    is read   >: b p
//             <    is written>: p[0].q
   p->q = b;
//             <    is written>: z
   z = &u;
//             <    is read   >: a p p[0].q
//             <    is written>: p[0].q[0].r

   p->q->r = a;
   return 0;
}

POINTS TO


// Points To IN: none


// Points To OUT:
// *ANY_MODULE*:*HEAP* -> *ANY_MODULE*:*HEAP* , EXACT

int main()
{

// Points To: none

   struct p_s {
      struct q_s *q;
   };

// Points To: none

   struct q_s {
      int r;
   };

// Points To: none

   struct p_s *p;

// Points To:
// p -> *ANY_MODULE*:*NOWHERE* , EXACT

   struct q_s *b;

// Points To:
// b -> *ANY_MODULE*:*NOWHERE* , EXACT
// p -> *ANY_MODULE*:*NOWHERE* , EXACT

   struct q_s *u;

// Points To:
// b -> *ANY_MODULE*:*NOWHERE* , EXACT
// p -> *ANY_MODULE*:*NOWHERE* , EXACT
// u -> *ANY_MODULE*:*NOWHERE* , EXACT

   struct q_s *x;

// Points To:
// b -> *ANY_MODULE*:*NOWHERE* , EXACT
// p -> *ANY_MODULE*:*NOWHERE* , EXACT
// u -> *ANY_MODULE*:*NOWHERE* , EXACT
// x -> *ANY_MODULE*:*NOWHERE* , EXACT

   struct q_s **z;

// Points To:
// b -> *ANY_MODULE*:*NOWHERE* , EXACT
// p -> *ANY_MODULE*:*NOWHERE* , EXACT
// u -> *ANY_MODULE*:*NOWHERE* , EXACT
// x -> *ANY_MODULE*:*NOWHERE* , EXACT
// z -> *ANY_MODULE*:*NOWHERE* , EXACT

   int a = 0;

// Points To:
// b -> *ANY_MODULE*:*NOWHERE* , EXACT
// p -> *ANY_MODULE*:*NOWHERE* , EXACT
// u -> *ANY_MODULE*:*NOWHERE* , EXACT
// x -> *ANY_MODULE*:*NOWHERE* , EXACT
// z -> *ANY_MODULE*:*NOWHERE* , EXACT

   u = (struct q_s *) malloc(sizeof(struct q_s ));

// Points To:
// b -> *ANY_MODULE*:*NOWHERE* , EXACT
// p -> *ANY_MODULE*:*NOWHERE* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*NOWHERE* , EXACT
// z -> *ANY_MODULE*:*NOWHERE* , EXACT

   b = (struct q_s *) malloc(sizeof(struct q_s ));

// Points To:
// b -> *ANY_MODULE*:*HEAP* , EXACT
// p -> *ANY_MODULE*:*NOWHERE* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*NOWHERE* , EXACT
// z -> *ANY_MODULE*:*NOWHERE* , EXACT

   p = (struct p_s *) malloc(sizeof(struct p_s ));

// Points To:
// b -> *ANY_MODULE*:*HEAP* , EXACT
// p -> *ANY_MODULE*:*HEAP* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*NOWHERE* , EXACT
// z -> *ANY_MODULE*:*NOWHERE* , EXACT

   x = b;

// Points To:
// b -> *ANY_MODULE*:*HEAP* , EXACT
// p -> *ANY_MODULE*:*HEAP* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*HEAP* , EXACT
// z -> *ANY_MODULE*:*NOWHERE* , EXACT

   p->q = x;

// Points To:
// *ANY_MODULE*:*HEAP* -> *ANY_MODULE*:*HEAP* , EXACT
// b -> *ANY_MODULE*:*HEAP* , EXACT
// p -> *ANY_MODULE*:*HEAP* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*HEAP* , EXACT
// z -> *ANY_MODULE*:*NOWHERE* , EXACT

   z = &p->q;

// Points To:
// *ANY_MODULE*:*HEAP* -> *ANY_MODULE*:*HEAP* , EXACT
// b -> *ANY_MODULE*:*HEAP* , EXACT
// p -> *ANY_MODULE*:*HEAP* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*HEAP* , EXACT
// z -> *ANY_MODULE*:*HEAP* , EXACT

   p->q = b;

// Points To:
// *ANY_MODULE*:*HEAP* -> *ANY_MODULE*:*HEAP* , EXACT
// b -> *ANY_MODULE*:*HEAP* , EXACT
// p -> *ANY_MODULE*:*HEAP* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*HEAP* , EXACT
// z -> *ANY_MODULE*:*HEAP* , EXACT

   z = &u;

// Points To:
// *ANY_MODULE*:*HEAP* -> *ANY_MODULE*:*HEAP* , EXACT
// b -> *ANY_MODULE*:*HEAP* , EXACT
// p -> *ANY_MODULE*:*HEAP* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*HEAP* , EXACT
// z -> u , EXACT


   p->q->r = a;

// Points To:
// *ANY_MODULE*:*HEAP* -> *ANY_MODULE*:*HEAP* , EXACT
// b -> *ANY_MODULE*:*HEAP* , EXACT
// p -> *ANY_MODULE*:*HEAP* , EXACT
// u -> *ANY_MODULE*:*HEAP* , EXACT
// x -> *ANY_MODULE*:*HEAP* , EXACT
// z -> u , EXACT

   return 0;
}
