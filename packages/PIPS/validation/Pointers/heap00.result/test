
Proper effects for "main"

int main()
{
   struct p_s {                                                         /*0005*/
      struct q_s *q;
   } *p;
   struct q_s {                                                         /*0008*/
      int r;
   } **z, *x, b, u;
   int a;                                                               /*0009*/
//               <must be written>: a
   a = 1;                                                               /*0010*/
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ p
   p = (struct p_s *) malloc(sizeof(struct p_s ));                      /*0011*/
//               <must be written>: x
   x = &b;                                                              /*0012*/
//               <may be written >: *ANY_MODULE*:*ANYWHERE*
//               <must be read   >: p x
   p->q = x;                                                            /*0013*/
//               <must be read   >: p
//               <must be written>: z
   z = &p->q;                                                           /*0014*/
//               <may be written >: *ANY_MODULE*:*ANYWHERE*
//               <must be read   >: z
   *z = &u;                                                             /*0015*/
//               <may be read    >: *ANY_MODULE*:*ANYWHERE*
//               <may be written >: *ANY_MODULE*:*ANYWHERE*
   p->q->r = a;                                                         /*0016*/
   return 0;                                                            /*0017*/
}

POINTS TO for "main"

//  {}
int main()
{
//  points to = {}
   struct p_s {                                                         /*0005*/
      struct q_s *q;
   } *p;
//  points to = {}
   struct q_s {                                                         /*0008*/
      int r;
   } **z, *x, b, u;
//  points to = {}
   int a;                                                               /*0009*/
//  points to = {}
   a = 1;                                                               /*0010*/
//  points to = {}
   p = (struct p_s *) malloc(sizeof(struct p_s ));                      /*0011*/
//  {(p,*HEAP*_l_11,-Exact-)}
   x = &b;                                                              /*0012*/
//  {(p,*HEAP*_l_11,-Exact-);(x,b,-Exact-)}
   p->q = x;                                                            /*0013*/
//  {(p,*HEAP*_l_11,-Exact-);(p[0][q],b,-Exact-);(x,b,-Exact-)}
   z = &p->q;                                                           /*0014*/
//  {(p,*HEAP*_l_11,-Exact-);(p[0][q],b,-Exact-);(x,b,-Exact-);(z,
//   p[0][q],-Exact-)}
   *z = &u;                                                             /*0015*/
//  {(p,*HEAP*_l_11,-Exact-);(p[0][q],u,-Exact-);(x,b,-Exact-);(z,
//   p[0][q],-Exact-)}
   p->q->r = a;                                                         /*0016*/
//  {(p,*HEAP*_l_11,-Exact-);(p[0][q],u,-Exact-);(x,b,-Exact-);(z,
//   p[0][q],-Exact-)}
   return 0;                                                            /*0017*/
}

Proper effects using points_to

int main()
{
   struct p_s {                                                         /*0005*/
      struct q_s *q;
   } *p;
   struct q_s {                                                         /*0008*/
      int r;
   } **z, *x, b, u;
   int a;                                                               /*0009*/
//               <must be written>: a
   a = 1;                                                               /*0010*/
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ p
   p = (struct p_s *) malloc(sizeof(struct p_s ));                      /*0011*/
//               <must be written>: x
   x = &b;                                                              /*0012*/
//               <must be read   >: p x
//               <must be written>: *HEAP*_l_11[.q]
   p->q = x;                                                            /*0013*/
//               <must be read   >: p
//               <must be written>: z
   z = &p->q;                                                           /*0014*/
//               <must be read   >: z
//               <must be written>: *HEAP*_l_11[.q]
   *z = &u;                                                             /*0015*/
//               <must be read   >: *HEAP*_l_11[.q] a p
//               <must be written>: u[.r]
   p->q->r = a;                                                         /*0016*/
   return 0;                                                            /*0017*/
}
