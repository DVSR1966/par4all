int main()
{
   // BEGIN BLOCK
   int **x, **y, *z, *t;
   int i, j;
//               <must be written>: i
   i = 1;
//               <must be written>: j
   j = 2;
//               <must be written>: z

   z = &i;
//               <must be written>: t
   t = &j;
//               <must be read   >: t
//               <must be written>: z

   z = t;
//               <may be written >: *ANY_MODULE*:*ANYWHERE*
//               <must be read   >: x z
   *x = z;
//               <may be read    >: stdout[0]
//               <may be written >: stdout[0]
//               <must be read   >: stdout __IO_EFFECTS:LUNS[1] x
//               <must be written>: __IO_EFFECTS:LUNS[1]
   printf(" x = %p\n", x);
   return 0;
   // END BLOCK
}
POINTS TO
//  {}
int main()
{
//  points to = {}
   // BEGIN BLOCK
//  {(t,*ANY_MODULE*:*NOWHERE*,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,
//   -Exact-);(y,*ANY_MODULE*:*NOWHERE*,-Exact-);(z,
//   *ANY_MODULE*:*NOWHERE*,-Exact-)}
   int **x, **y, *z, *t;
//  {(t,*ANY_MODULE*:*NOWHERE*,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,
//   -Exact-);(y,*ANY_MODULE*:*NOWHERE*,-Exact-);(z,
//   *ANY_MODULE*:*NOWHERE*,-Exact-)}
   int i, j;
//  {(t,*ANY_MODULE*:*NOWHERE*,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,
//   -Exact-);(y,*ANY_MODULE*:*NOWHERE*,-Exact-);(z,
//   *ANY_MODULE*:*NOWHERE*,-Exact-)}
   i = 1;
//  {(t,*ANY_MODULE*:*NOWHERE*,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,
//   -Exact-);(y,*ANY_MODULE*:*NOWHERE*,-Exact-);(z,
//   *ANY_MODULE*:*NOWHERE*,-Exact-)}
   j = 2;
//  {(t,*ANY_MODULE*:*NOWHERE*,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,
//   -Exact-);(y,*ANY_MODULE*:*NOWHERE*,-Exact-);(z,
//   *ANY_MODULE*:*NOWHERE*,-Exact-)}

   z = &i;
//  {(t,*ANY_MODULE*:*NOWHERE*,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,
//   -Exact-);(y,*ANY_MODULE*:*NOWHERE*,-Exact-);(z,i,-Exact-)}
   t = &j;
//  {(t,j,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,-Exact-);(y,
//   *ANY_MODULE*:*NOWHERE*,-Exact-);(z,i,-Exact-)}

   z = t;
//  {(t,j,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,-Exact-);(y,
//   *ANY_MODULE*:*NOWHERE*,-Exact-);(z,j,-Exact-)}
   *x = z;
//  {(t,j,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,-Exact-);(y,
//   *ANY_MODULE*:*NOWHERE*,-Exact-);(z,j,-Exact-)}
   printf(" x = %p\n", x);
//  {(t,j,-Exact-);(x,*ANY_MODULE*:*NOWHERE*,-Exact-);(y,
//   *ANY_MODULE*:*NOWHERE*,-Exact-);(z,j,-Exact-)}
   return 0;
   // END BLOCK
}
