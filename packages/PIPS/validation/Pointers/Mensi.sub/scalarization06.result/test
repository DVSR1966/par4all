
Initial code

int main(int *x, int *y, int *t)
{
   // BEGIN BLOCK
   int i, n = 100;
   
   
   for(i = 0; i <= n-1; i += 1) {
      // BEGIN BLOCK
      t[i] = x[i];
      x[i] = y[i];
      y[i] = t[i];
      // END BLOCK
   }
   // END BLOCK
}

POINTS-TO


// Points To IN:
// t -> _t_3[0] , EXACT
// x -> _x_1[0] , EXACT
// y -> _y_2[0] , EXACT


// Points To OUT: none

int main(int *x, int *y, int *t)
{

// Points To: none

   // BEGIN BLOCK

// Points To: none

   int i, n = 100;

// Points To: none

   
   
   for(i = 0; i <= n-1; i += 1) {

// Points To:
// t -> _t_3[0] , EXACT
// x -> _x_1[0] , EXACT
// y -> _y_2[0] , EXACT

      // BEGIN BLOCK

// Points To:
// t -> _t_3[0] , EXACT
// x -> _x_1[0] , EXACT
// y -> _y_2[0] , MAY

      t[i] = x[i];

// Points To:
// t -> _t_3[0] , EXACT
// x -> _x_1[0] , EXACT
// y -> _y_2[0] , EXACT

      x[i] = y[i];

// Points To:
// t -> _t_3[0] , EXACT
// x -> _x_1[0] , EXACT
// y -> _y_2[0] , EXACT

      y[i] = t[i];
      // END BLOCK
   }
   // END BLOCK
}

PROPER  EFFECTS WITH POINTS TO

int main(int *x, int *y, int *t)
{
   // BEGIN BLOCK
//             <    is written>: n
   int i, n = 100;
//             <    is read   >: n
//             <    is written>: i
   
   
   for(i = 0; i <= n-1; i += 1) {
      // BEGIN BLOCK
//             <    is read   >: _x_1[i] i n t x
//             <    is written>: _t_3[i]
      t[i] = x[i];
//             <    is read   >: _y_2[i] i n x y
//             <    is written>: _x_1[i]
      x[i] = y[i];
//             <    is read   >: _t_3[i] i n t y
//             <    is written>: _y_2[i]
      y[i] = t[i];
      // END BLOCK
   }
   // END BLOCK
}

RW regions

int main(int *x, int *y, int *t)
{
   // BEGIN BLOCK
   int i, n = 100;
   
   
   for(i = 0; i <= n-1; i += 1) {
      // BEGIN BLOCK

//  <*ANY_MODULE*:*ANYWHERE*-R-MAY-{}>
//  <*ANY_MODULE*:*ANYWHERE*-W-MAY-{}>

      t[i] = x[i];

//  <*ANY_MODULE*:*ANYWHERE*-R-MAY-{}>
//  <*ANY_MODULE*:*ANYWHERE*-W-MAY-{}>

      x[i] = y[i];

//  <*ANY_MODULE*:*ANYWHERE*-R-MAY-{}>
//  <*ANY_MODULE*:*ANYWHERE*-W-MAY-{}>

      y[i] = t[i];
      // END BLOCK
   }
   // END BLOCK
}

Code after scalarization

int main(int *x, int *y, int *t)
{
   // BEGIN BLOCK
   int i, n = 100;
   
   
   for(i = 0; i <= n-1; i += 1) {
      // BEGIN BLOCK
      t[i] = x[i];
      x[i] = y[i];
      y[i] = t[i];
      // END BLOCK
   }
   // END BLOCK
}
