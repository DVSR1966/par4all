
PROPER  EFFECTS

rec reverse_copy(rec p)
{
//             <    is written>: r
   rec r = (void *) 0;
//             <    is read   >: p
//             <    is written>: q
   rec q = p;
//             <    is read   >: q
   while (q!=(void *) 0) {
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: t _MALLOC_EFFECTS:_MALLOC_
      rec t = (rec) malloc(sizeof(rec));
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
      t->i = q->i;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: r t
      t->n = r;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <    is written>: q
      q = q->n;
   }
//             <    is read   >: r
   return r;
}

POINTS-TO


// Points To IN:
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_1 , MAY
// _p_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1.n -> _p_1_1_1 , MAY
// _p_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1.n -> _p_1_1_1_1 , MAY
// _p_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1.n -> _p_1_1_1_1_1 , MAY
// _p_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1.n -> _p_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY


// Points To OUT:
// *HEAP*_l_28 -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_1 , MAY
// _p_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1.n -> _p_1_1_1 , MAY
// _p_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1.n -> _p_1_1_1_1 , MAY
// _p_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1.n -> _p_1_1_1_1_1 , MAY
// _p_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1.n -> _p_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// reverse_copy -> *NULL_POINTER* , EXACT

rec reverse_copy(rec p)
{

// Points To:
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY

   rec r = (void *) 0;

// Points To:
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// r -> *NULL_POINTER* , EXACT

   rec q = p;

// Points To:
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> *NULL_POINTER* , MAY
// q -> _p_1 , MAY
// r -> *NULL_POINTER* , EXACT

   while (q!=(void *) 0) {

// Points To:
// *HEAP*_l_28 -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_1 , MAY
// _p_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1.n -> _p_1_1_1 , MAY
// _p_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1.n -> _p_1_1_1_1 , MAY
// _p_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1.n -> _p_1_1_1_1_1 , MAY
// _p_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1.n -> _p_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> _p_1 , MAY
// q -> _p_1_1 , MAY
// q -> _p_1_1_1 , MAY
// q -> _p_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// r -> *NULL_POINTER* , EXACT

      rec t = (rec) malloc(sizeof(rec));

// Points To:
// *HEAP*_l_28 -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_1 , MAY
// _p_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1.n -> _p_1_1_1 , MAY
// _p_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1.n -> _p_1_1_1_1 , MAY
// _p_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1.n -> _p_1_1_1_1_1 , MAY
// _p_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1.n -> _p_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> _p_1 , MAY
// q -> _p_1_1 , MAY
// q -> _p_1_1_1 , MAY
// q -> _p_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// r -> *NULL_POINTER* , EXACT
// t -> *HEAP*_l_28 , EXACT

      t->i = q->i;

// Points To:
// *HEAP*_l_28 -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_1 , MAY
// _p_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1.n -> _p_1_1_1 , MAY
// _p_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1.n -> _p_1_1_1_1 , MAY
// _p_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1.n -> _p_1_1_1_1_1 , MAY
// _p_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1.n -> _p_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> _p_1 , MAY
// q -> _p_1_1 , MAY
// q -> _p_1_1_1 , MAY
// q -> _p_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// r -> *NULL_POINTER* , EXACT
// t -> *HEAP*_l_28 , EXACT

      t->n = r;

// Points To:
// *HEAP*_l_28 -> *NULL_POINTER* , EXACT
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_1 , MAY
// _p_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1.n -> _p_1_1_1 , MAY
// _p_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1.n -> _p_1_1_1_1 , MAY
// _p_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1.n -> _p_1_1_1_1_1 , MAY
// _p_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1.n -> _p_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> _p_1 , MAY
// q -> _p_1_1 , MAY
// q -> _p_1_1_1 , MAY
// q -> _p_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1_1 , MAY
// q -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// r -> *NULL_POINTER* , EXACT
// t -> *HEAP*_l_28 , EXACT

      q = q->n;
   }

// Points To:
// *HEAP*_l_28 -> *NULL_POINTER* , MAY
// _p_1[0].n -> *NULL_POINTER* , MAY
// _p_1[0].n -> _p_1_1 , MAY
// _p_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1.n -> _p_1_1_1 , MAY
// _p_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1.n -> _p_1_1_1_1 , MAY
// _p_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1.n -> _p_1_1_1_1_1 , MAY
// _p_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1.n -> _p_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> *NULL_POINTER* , MAY
// _p_1_1_1_1_1_1_1_1_1_1.n -> _p_1_1_1_1_1_1_1_1_1_1 , MAY
// p -> *NULL_POINTER* , MAY
// p -> _p_1 , MAY
// q -> *NULL_POINTER* , EXACT
// r -> *NULL_POINTER* , EXACT

   return r;
}
