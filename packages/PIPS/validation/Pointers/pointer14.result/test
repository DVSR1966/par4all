
POINTS TO for "foo"


// Points To IN:
// t[2][3] -> *NULL_POINTER* , MAY
// t[2][3] -> _t_1[2][3][0][0][0][0] , MAY


// Points To OUT: none

void foo(double *(*t[3][4])[5][6][7])
{

// Points To:
// t[2][3] -> *NULL_POINTER* , MAY
// t[2][3] -> _t_1[2][3][0][0][0][0] , MAY

   *(((*t[2][3])[1])[2])[3] = 2.5;

// Points To:
// t[2][3] -> _t_1[2][3][0][0][0][0] , EXACT

   return;
}

POINTS TO for pointer14


// Points To IN: none


// Points To OUT: none

void pointer14()
{

// Points To: none

   double *(*t[3][4])[5][6][7];

// Points To:
// t[*][*] -> *ANY_MODULE*:*NOWHERE* , EXACT

   double *a[5][6][7];

// Points To:
// a[*][*][*] -> *ANY_MODULE*:*NOWHERE* , EXACT
// t[*][*] -> *ANY_MODULE*:*NOWHERE* , EXACT

   double z;

// Points To:
// a[*][*][*] -> *ANY_MODULE*:*NOWHERE* , EXACT
// t[*][*] -> *ANY_MODULE*:*NOWHERE* , EXACT

   t[1][2] = &a;

// Points To:
// a[*][*][*] -> *ANY_MODULE*:*NOWHERE* , EXACT
// t[*][*] -> *ANY_MODULE*:*NOWHERE* , MAY
// t[*][*] -> a , MAY
// t[1][2] -> a , EXACT

   a[1][2][3] = &z;

// Points To:
// a[*][*][*] -> *ANY_MODULE*:*NOWHERE* , MAY
// a[*][*][*] -> z , MAY
// a[1][2][3] -> z , EXACT
// t[*][*] -> *ANY_MODULE*:*NOWHERE* , MAY
// t[*][*] -> a , MAY
// t[1][2] -> a , EXACT

   foo(t);

// Points To:
// a[*][*][*] -> *ANY_MODULE*:*NOWHERE* , MAY
// a[*][*][*] -> z , MAY
// a[1][2][3] -> z , EXACT
// t[*][*] -> *ANY_MODULE*:*NOWHERE* , MAY
// t[*][*] -> a , MAY
// t[1][2] -> a , EXACT

   return;
}
