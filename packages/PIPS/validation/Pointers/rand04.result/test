
PROPER  EFFECTS

int main(void)
{
   int i1, i2;
//             <    is written>: pi1
   int *pi1 = &i1;
//             <    is written>: pi2
   int *pi2 = &i2;
   int **pp;
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   srand(time((void *) 0));
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
   if (alea())
//             <    is written>: pp
      pp = &pi1;
   else
//             <    is written>: pp
      pp = &pi2;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: pp
   *pp = (void *) 0;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: pi1 pi2 pp stdout 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%p %p %p\n", pp, pi1, pi2);
   return 0;
}

POINTS-TO


// Points To: none

int main(void)
{

// Points To: none

   int i1, i2;

// Points To: none

   int *pi1 = &i1;

// Points To:
// pi1 -> &i1 , EXACT

   int *pi2 = &i2;

// Points To:
// pi1 -> &i1 , EXACT
// pi2 -> &i2 , EXACT

   int **pp;

// Points To:
// pi1 -> &i1 , EXACT
// pi2 -> &i2 , EXACT
// pp -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT

   srand(time((void *) 0));

// Points To:
// pi1 -> &i1 , EXACT
// pi2 -> &i2 , EXACT
// pp -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT

   if (alea())

// Points To:
// pi1 -> &i1 , EXACT
// pi2 -> &i2 , EXACT
// pp -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT

      pp = &pi1;
   else

// Points To:
// pi1 -> &i1 , EXACT
// pi2 -> &i2 , EXACT
// pp -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT

      pp = &pi2;

// Points To:
// pi1 -> &i1 , EXACT
// pi2 -> &i2 , EXACT
// pp -> &pi1 , MAY
// pp -> &pi2 , MAY

   *pp = (void *) 0;

// Points To:
// pi1 -> &*NULL_POINTER* , MAY
// pi1 -> &i1 , MAY
// pi2 -> &i2 , MAY
// pi2 -> &*NULL_POINTER* , MAY
// pp -> &pi1 , MAY
// pp -> &pi2 , MAY

   printf("%p %p %p\n", pp, pi1, pi2);

// Points To:
// pi1 -> &i1 , MAY
// pi1 -> &*NULL_POINTER* , MAY
// pi2 -> &i2 , MAY
// pi2 -> &*NULL_POINTER* , MAY
// pp -> &pi2 , MAY
// pp -> &pi1 , MAY

   return 0;
}
