
Parsed code for "call02"

void call02(int i, int j, int y[10], int *q[10], tf_t *p)
{
   /* i can be modified locally, but it won't show in the summary
        effects... which creates a problem for transformer and
        precondition computation. */
   i = j+1;
   y[i] = 0;
   p->one = 1;
   (p->two)[j] = 2.;
   *q[i] = 3;
}

Code for "call02"

void call02(int i, int j, int y[10], int *q[10], tf_t *p)
{
   /* i can be modified locally, but it won't show in the summary
        effects... which creates a problem for transformer and
        precondition computation. */
   i = j+1;
   y[i] = 0;
   p->one = 1;
   (p->two)[j] = 2.;
   *q[i] = 3;
}

Proper effects for "call02"

void call02(int i, int j, int y[10], int *q[10], tf_t *p)
{
//               <must be read   >: j
//               <must be written>: i
   /* i can be modified locally, but it won't show in the summary
        effects... which creates a problem for transformer and
        precondition computation. */
   i = j+1;
//               <must be read   >: i
//               <must be written>: y[i]
   y[i] = 0;
//               <must be read   >: p
//               <must be written>: p[0][1]
   p->one = 1;
//               <must be read   >: j p
//               <must be written>: p[0][2][j]
   (p->two)[j] = 2.;
//               <must be read   >: i q[i]
//               <must be written>: q[i][0]
   *q[i] = 3;
}

Cumulated effects for "call02"

//               <may be read    >: q[*]
//               <may be written >: p[0][2][*] q[*][0] y[*]
//               <must be read   >: i j p
//               <must be written>: p[0][1]
void call02(int i, int j, int y[10], int *q[10], tf_t *p)
{
//               <must be read   >: j
//               <must be written>: i
   /* i can be modified locally, but it won't show in the summary
        effects... which creates a problem for transformer and
        precondition computation. */
   i = j+1;
//               <may be written >: y[*]
//               <must be read   >: i
   y[i] = 0;
//               <must be read   >: p
//               <must be written>: p[0][1]
   p->one = 1;
//               <may be written >: p[0][2][*]
//               <must be read   >: j p
   (p->two)[j] = 2.;
//               <may be read    >: q[*]
//               <may be written >: q[*][0]
//               <must be read   >: i
   *q[i] = 3;
}

Cumulated effects for "main"

//               <may be read    >: *ANY_MODULE*:*ANYWHERE*
//               <may be written >: *ANY_MODULE*:*ANYWHERE*
int main()
{
   int a;
   int b;
   int x[10];
   int *ap[10];
   tf_t s;
//               <must be written>: sp
   tf_t *sp = &s;
//               <may be read    >: ap[*]
//               <may be written >: ap[*][0] sp[0][2][*] x[*]
//               <must be read   >: a b sp
//               <must be written>: sp[0][1]

   call02(a, b, x, ap, sp);
}

POINTS TO

//  {}
void call02(int i, int j, int y[10], int *q[10], tf_t *p)
{
//  points to = {}
   /* i can be modified locally, but it won't show in the summary
        effects... which creates a problem for transformer and
        precondition computation. */
   i = j+1;
//  points to = {}
   y[i] = 0;
//  points to = {}
   p->one = 1;
//  points to = {}
   (p->two)[j] = 2.;
//  points to = {}
   *q[i] = 3;
}

POINTS TO

//  {}
int main()
{
//  points to = {}
   int a;
//  points to = {}
   int b;
//  points to = {}
   int x[10];
//  points to = {}
   int *ap[10];
//  points to = {}
   tf_t s;
//  points to = {}
   tf_t *sp = &s;
//  points to = {}

   call02(a, b, x, ap, sp);
}
