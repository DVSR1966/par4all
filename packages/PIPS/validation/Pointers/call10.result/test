
Parsed code for "call10"

void call10(int i, int x[10], int j, int y[10])
{
   int k, l;

   for (k = 0;k<i;k++)
      x[i] = 0;
   for (l = 0;l<j;l++)
      y[i] = 0;
}

Code for "call10"

void call10(int i, int x[10], int j, int y[10])
{
   int k, l;

   for(k = 0; k <= i-1; k += 1)
      x[i] = 0;
   for(l = 0; l <= j-1; l += 1)
      y[i] = 0;
}

Proper effects for "call10"

void call10(int i, int x[10], int j, int y[10])
{
   int k, l;
//             <    is read   >: i
//             <    is written>: k

   for(k = 0; k <= i-1; k += 1)
//             <    is read   >: i
//             <    is written>: x[i]
      x[i] = 0;
//             <    is read   >: j
//             <    is written>: l
   for(l = 0; l <= j-1; l += 1)
//             <    is read   >: i j
//             <    is written>: y[i]
      y[i] = 0;
}

POINTS TO

//  {}
void call10(int i, int x[10], int j, int y[10])
{
//  points to = {}
   int k, l;
//  points to = {}

   for(k = 0; k <= i-1; k += 1)
//  points to = {}
      x[i] = 0;
//  points to = {}
   for(l = 0; l <= j-1; l += 1)
//  points to = {}
      y[i] = 0;
}

POINTS TO

//  {}
int main()
{
//  points to = {}
   tf_t s;
//  {(sp,s,-Exact-)}
   tf_t *sp = &s;
//  {(sp,s,-Exact-)}

   call10(s.one, s.two, sp->one, sp->two);
}
