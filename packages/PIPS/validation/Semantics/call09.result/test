
Source code with proper effects

int call09(int i)
{
//               <must be read   >: i
//               <must be written>: i
   i += 10;                                                             /*0009*/
//               <must be read   >: j
//               <must be written>: j
   j++;                                                                 /*0010*/
//               <must be read   >: i

   return i;                                                            /*0012*/
}

Source code with cumulated effects

//               <must be read   >: j i
//               <must be written>: j
int call09(int i)
{
//               <must be read   >: i
//               <must be written>: i
   i += 10;                                                             /*0009*/
//               <must be read   >: j
//               <must be written>: j
   j++;                                                                 /*0010*/
//               <must be read   >: i

   return i;                                                            /*0012*/
}

Source code with transformers for "call09"


//  T(call09,j) {call09==i+10, j==j#init+1}

int call09(int i)
{

//  T(i) {i==i#init+10}

   i += 10;                                                             /*0009*/

//  T(j) {j==j#init+1}

   j++;                                                                 /*0010*/

//  T(call09) {call09==i}


   return i;                                                            /*0012*/
}

Source code with transformers for "main"


//  T(j) {j==j#init+1}

int main()
{

//  T(ai) {ai==3}

   int ai = 3;                                                          /*0017*/

//  T(ai,j) {ai==ai#init+1, j==j#init+1}


   call09(++ai);                                                        /*0019*/

//  T(ai) {ai==0}


   ai = 0;                                                              /*0021*/
}

Source code with preconditions for "call09"


//  P() {i==4, j==0}

int call09(int i)
{

//  P() {i==4, j==0}

   i += 10;                                                             /*0009*/

//  P(i) {i==14, j==0}

   j++;                                                                 /*0010*/

//  P(i,j) {i==14, j==1, j#init==0}


   return i;                                                            /*0012*/
}

Source code with preconditions for "main"


//  P() {j==0}

int main()
{

//  P() {j==0}

   int ai = 3;                                                          /*0017*/

//  P(ai) {ai==3, j==0}


   call09(++ai);                                                        /*0019*/

//  P(ai,j) {ai==4, j==1, j#init==0}


   ai = 0;                                                              /*0021*/
}

Warnings

unknown[unknown] (activate_phase) Rule `C_PARSER' already active
unknown[unknown] (parse_properties) property PRETTYPRINT_LANGUAGE redefined
unknown[unknown] (parse_properties) property PRETTYPRINT_STATEMENT_NUMBER redefined
unknown[unknown] (parse_properties) property SEMANTICS_FIX_POINT_OPERATOR redefined
INITIAL_PRECONDITION[call09] (add_or_kill_equivalenced_variables) storage return
INITIAL_PRECONDITION[main] (add_or_kill_equivalenced_variables) storage return
PROGRAM_PRECONDITION[] (add_or_kill_equivalenced_variables) storage return
TRANSFORMERS_INTER_FULL[call09] (add_or_kill_equivalenced_variables) storage return
TRANSFORMERS_INTER_FULL[call09] (NormalizeExpression) expression is already normalized
PRINT_CODE_TRANSFORMERS[call09] (add_or_kill_equivalenced_variables) storage return
unknown[unknown] (activate_phase) Rule `PRINT_CODE_TRANSFORMERS' already active
TRANSFORMERS_INTER_FULL[main] (add_or_kill_equivalenced_variables) storage return
TRANSFORMERS_INTER_FULL[main] (NormalizeExpression) expression is already normalized
TRANSFORMERS_INTER_FULL[main] (call_to_transformer) Analyzable result of function "call09" ignored.
PRINT_CODE_TRANSFORMERS[main] (add_or_kill_equivalenced_variables) storage return
PRECONDITIONS_INTER_FULL[main] (add_or_kill_equivalenced_variables) storage return
INTERPROCEDURAL_SUMMARY_PRECONDITION[call09] (add_or_kill_equivalenced_variables) storage return
INTERPROCEDURAL_SUMMARY_PRECONDITION[call09] (NormalizeExpression) expression is already normalized
PRECONDITIONS_INTER_FULL[call09] (add_or_kill_equivalenced_variables) storage return
PRINT_CODE_PRECONDITIONS[call09] (add_or_kill_equivalenced_variables) storage return
unknown[unknown] (activate_phase) Rule `PRINT_CODE_PRECONDITIONS' already active
PRINT_CODE_PRECONDITIONS[main] (add_or_kill_equivalenced_variables) storage return
INTERPROCEDURAL_SUMMARY_PRECONDITION[call09!] (ordinary_summary_precondition) empty precondition to call09! because not in call tree from main.
