
C  T() {IS==0, 5<=M, M<=6, 1<=NQ, NQ<=64}

      SUBROUTINE CFFT (IS, M, U, X, Y, NQ)

      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER (PI = 3.141592653589793238D0)
      COMMON /COUNT/ KTTRANS(256)
      DIMENSION U(1), X(1), Y(1)

C  T(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, J==M+1, KU+N==KN,
C    KU==LN+1, L==L#init, M1==M1#init, M2==M2#init, MX==MX#init,
C    N==NU, N1==N1#init, N2==N2#init, 0<=I, KU<=2I+1, 6<=J, J<=7,
C    2J<=N+2, 1<=NQ, NQ<=64}

C (0,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (0,2)

C     Synthesize preconditions
      IF (IS.LT.-1.OR.IS.GT.1.OR.M.LT.5.OR.M.GT.6.OR.NQ.LT.1.OR.NQ      0001
     &.GT.64) STOP                                                      0001
C (0,5)

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (1,1)

C
      IF (IS.EQ.0) GOTO 99998                                           0003

C  T(K,L,M1,M2,MX,N,N1,N2) {L==1, M1+M2==M, 0<=IS+1, IS<=1, 5<=M,
C    M<=6, 2M1<=M, M+1<=N, 2M<=N, M1<=2, M1+1<=N2, 2M1<=N2, M2+1<=N1,
C    2M2<=N1, 0<=MX, MX<=63, 0<=N, 0<=N1, 0<=N2, 1<=NQ, NQ<=64}

C (18,1)
C     BEGIN BLOCK

C  T(K) {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (18,2)
C
C   Check if input parameters are invalid.
C
      K = U(1)                                                          0021

C  T(MX) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (18,3)
      MX = MOD(K, 64)                                                   0022

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (18,4)
      IF (IS.NE.1.AND.IS.NE.-1.OR.M.LT.1.OR.M.GT.MX) THEN               0023

C  T() {0<=IS+1, IS<=1, MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63,
C    58IS+MX<=63, 5<=M, M<=6, 0<=MX, 1<=NQ, NQ<=64}

C (18,5)
C        BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63,
C    58IS+MX<=63, 5<=M, M<=6, 0<=MX, 1<=NQ, NQ<=64}

C (18,6)
C       WRITE (6, 1)  IS, M, MX
1        FORMAT('CFFTZ: EITHER U HAS NOT BEEN INITIALIZED, OR ELSE'/'ONE
     & OF THE INPUT PARAMETERS IS INVALID',3I5)                         0024
C       STOP
C        END BLOCK
      ENDIF

C  T(N) {0<=IS+1, IS<=1, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=MX, MX<=63,
C    0<=N, 1<=NQ, NQ<=64}

C (18,9)
C>> A normal call to CFFTZ starts here.  M1 is the number of the first
C     variant radix-2 Stockham iterations to be performed.  The second
C     variant is faster on most computers after the first few
C     iterations, since in the second variant it is not necessary to
C     access roots of unity in the inner DO loop.  Thus it is most
C     efficient to limit M1 to some value.  For many vector computers,
C     the optimum limit of M1 is 6.  For scalar systems, M1 should
C     probably be limited to 2.
C
      N = 2**M                                                          0025

C  T(M1) {0<=IS+1, IS<=1, 5<=M, M<=6, 2M1<=M, M+1<=N, 2M<=N, M1<=2,
C    0<=MX, MX<=63, 0<=N, 1<=NQ, NQ<=64}

C (18,10)
C      M1 = MIN (M / 2, 6)
      M1 = MIN(M/2, 2)                                                  0026

C  T(M2) {M1+M2==M, 0<=IS+1, IS<=1, 5<=M, M<=6, 2M1<=M, M+1<=N, 2M<=N,
C    M1<=2, 0<=MX, MX<=63, 0<=N, 1<=NQ, NQ<=64}

C (18,11)
      M2 = M-M1                                                         0027

C  T(N2) {M1+M2==M, 0<=IS+1, IS<=1, 5<=M, M<=6, 2M1<=M, M+1<=N, 2M<=N,
C    M1<=2, M1+1<=N2, 2M1<=N2, 0<=MX, MX<=63, 0<=N, 0<=N2, 1<=NQ,
C    NQ<=64}

C (18,12)
      N2 = 2**M1                                                        0028

C  T(N1) {M1+M2==M, 0<=IS+1, IS<=1, 5<=M, M<=6, 2M1<=M, M+1<=N, 2M<=N,
C    M1<=2, M1+1<=N2, 2M1<=N2, M2+1<=N1, 2M2<=N1, 0<=MX, MX<=63, 0<=N,
C    0<=N1, 0<=N2, 1<=NQ, NQ<=64}

C (18,13)
      N1 = 2**M2                                                        0029

C  T(L) {L==1, M1+M2==M, 0<=IS+1, IS<=1, 5<=M, M<=6, 2M1<=M, M+1<=N,
C    2M<=N, M1<=2, M1+1<=N2, 2M1<=N2, M2+1<=N1, 2M2<=N1, 0<=MX,
C    MX<=63, 0<=N, 0<=N1, 0<=N2, 1<=NQ, NQ<=64}

C (18,14)
      L = 1                                                             0030
C     END BLOCK
99996 CONTINUE

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (15,1)
C
C   Perform one variant of the Stockham FFT.
C
C     DO loop 120 with exit had to be desugared
      IF (L.GT.M1) GOTO 99997                                           0030

C  T() {0<=IS+1, IS<=1, L<=M1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (17,1)
      CALL FFTZ1(IS, L, M, U, X, Y)                                     0031

C  T() {0<=IS+1, IS<=1, L<=M1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (13,1)
      IF (L.EQ.M1) GOTO 140                                             0032

C  T(L) {L==L#init+2, 0<=IS+1, IS<=1, L<=M1+1, 5<=M, M<=6, 1<=NQ,
C    NQ<=64}

C (14,1)
C     BEGIN BLOCK

C  T() {0<=IS+1, IS<=1, L+1<=M1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (14,2)
      CALL FFTZ1(IS, L+1, M, U, Y, X)                                   0034

C  T() {0<=IS+1, IS<=1, L+1<=M1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (14,3)
120   CONTINUE                                                          0035

C  T(L) {L==L#init+2, 0<=IS+1, IS<=1, L<=M1+1, 5<=M, M<=6, 1<=NQ,
C    NQ<=64}

C (14,4)
      L = L+2                                                           0030
C     END BLOCK
      GOTO 99996

C  T(L) {L==L#init+1, L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, 2<=L, L<=4,
C    L+2M<=2M2+2N2, 2L<=N2+4, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N,
C    2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (12,1)
C     BEGIN BLOCK

C  T() {L+M2==M, L==M1, 0<=IS+1, IS<=1, 1<=L, L<=3, L+2M+1<=2M2+2N2,
C    2L<=N2+2, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX,
C    MX<=63, 1<=NQ, NQ<=64}

C (12,2)
C
C   Perform a transposition of Y treated as a N2 x N1 x 2 matrix.
C
140   CALL TRANS(N1, N2, Y, X)                                          0044

C  T() {L+M2==M, L==M1, 0<=IS+1, IS<=1, 1<=L, L<=3, L+2M+1<=2M2+2N2,
C    2L<=N2+2, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX,
C    MX<=63, 1<=NQ, NQ<=64}

C (12,3)
      KTTRANS(NQ) = KTTRANS(NQ)+1                                       0045

C  T(L) {L==L#init+1, L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, 2<=L, L<=4,
C    L+2M<=2M2+2N2, 2L<=N2+4, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N,
C    2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (12,4)
      L = M1+1                                                          0046
C     END BLOCK
99995 CONTINUE

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (10,1)
C
C   Perform second variant of the Stockham FFT from X to Y and Y to X.
C
C     DO loop 150 with exit had to be desugared
      IF (L.GT.M) GOTO 180                                              0046

C  T() {0==-1}

C (11,1)
      CALL FFTZ2(IS, L, M, U, X, Y)                                     0047

C  T() {0==-1}

C (8,1)
      IF (L.EQ.M) GOTO 160                                              0048

C  T() {0==-1}

C (9,1)
C     BEGIN BLOCK

C  T() {0==-1}

C (9,2)
      CALL FFTZ2(IS, L+1, M, U, Y, X)                                   0050

C  T() {0==-1}

C (9,3)
150   CONTINUE                                                          0051

C  T() {0==-1}

C (9,4)
      L = L+2                                                           0046
C     END BLOCK
      GOTO 99995

C  T(I) {I==1, L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3, M+1<=L,
C    L+2M+1<=2M2+2N2, 2L<=N2+2, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2,
C    2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX, MX<=63, N<=0, 0<=N2, 1<=NQ,
C    NQ<=64}

C (7,1)
C     BEGIN BLOCK

C  T() {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3, M+1<=L,
C    L+2M+1<=2M2+2N2, 2L<=N2+2, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2,
C    2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX, MX<=63, 0<=N2, 1<=NQ, NQ<=64}

C (7,2)
C
C
C   Copy Y to X.
C
160   CONTINUE                                                          0052

C  T(I) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3, M+1<=L,
C    L+2M+1<=2M2+2N2, 2L<=N2+2, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2,
C    2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX, MX<=63, 0<=N2, 1<=NQ, NQ<=64}

C (7,3)
      DO 170 I = 1, 2*N                                                 0053

C  T() {I==1, L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3, M+1<=L,
C    L+2M+1<=2M2+2N2, 2L<=N2+2, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2,
C    2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX, MX<=63, 1<=N, 0<=N2, 1<=NQ,
C    NQ<=64}

C (7,4)
C        BEGIN BLOCK

C  T() {I==1, L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3, M+1<=L,
C    L+2M+1<=2M2+2N2, 2L<=N2+2, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2,
C    2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX, MX<=63, 1<=N, 0<=N2, 1<=NQ,
C    NQ<=64}

C (7,5)
         X(I) = Y(I)                                                    0054

C  T() {I==1, L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3, M+1<=L,
C    L+2M+1<=2M2+2N2, 2L<=N2+2, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2,
C    2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX, MX<=63, 1<=N, 0<=N2, 1<=NQ,
C    NQ<=64}

C (7,6)
170      CONTINUE                                                       0055
C        END BLOCK
C     END BLOCK
      GOTO 180
99997 CONTINUE

C  T(L) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=L#init, 1<=L#init,
C    L#init<=3, L#init+2M+1<=2M2+2N2, 2L#init<=N2+2, 5<=M, M<=6,
C    M<=M2+2, 2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (16,1)
C     BEGIN BLOCK

C  T() {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3, L+2M+1<=2M2+2N2,
C    M1+1<=L, 2L<=N2+2, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N,
C    2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (16,2)
C
C   Perform a transposition of X treated as a N2 x N1 x 2 matrix.
C
      CALL TRANS(N1, N2, X, Y)                                          0036

C  T() {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3, L+2M+1<=2M2+2N2,
C    M1+1<=L, 2L<=N2+2, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N,
C    2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (16,3)
      KTTRANS(NQ) = KTTRANS(NQ)+1                                       0037

C  T(L) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=L#init, 1<=L#init,
C    L#init<=3, L#init+2M+1<=2M2+2N2, 2L#init<=N2+2, 5<=M, M<=6,
C    M<=M2+2, 2M<=2M2+N2, 2M<=N, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (16,4)
      L = M1+1                                                          0038
C     END BLOCK
99994 CONTINUE

C  T() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (6,1)
C
C   Perform second variant of the Stockham FFT from Y to X and X to Y.
C
C     DO loop 130 with exit had to be desugared
      IF (L.GT.M) GOTO 160                                              0038

C  T() {0==-1}

C (19,1)
      CALL FFTZ2(IS, L, M, U, Y, X)                                     0039

C  T() {0==-1}

C (4,1)
      IF (L.EQ.M) GOTO 180                                              0040

C  T() {0==-1}

C (5,1)
C     BEGIN BLOCK

C  T() {0==-1}

C (5,2)
      CALL FFTZ2(IS, L+1, M, U, X, Y)                                   0042

C  T() {0==-1}

C (5,3)
130   CONTINUE                                                          0043

C  T() {0==-1}

C (5,4)
      L = L+2                                                           0038
C     END BLOCK
      GOTO 99994
99998 CONTINUE

C  T(I,J,KN,KU,LN,N,NU) {IS==0, J==M+1, KU+N==KN, KU==LN+1, N==NU,
C    0<=I, KU<=2I+1, 6<=J, J<=7, J<=N, 2J<=N+2, 0<=N, 1<=NQ, NQ<=64}

C (2,1)
C     BEGIN BLOCK

C  T(N) {IS==0, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,2)
C
C     Initialize the U array with sines and cosines in a manner that
C     permits stride one access at each FFT iteration.
C
      N = 2**M                                                          0004

C  T(NU) {IS==0, N==NU, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ,
C    NQ<=64}

C (2,3)
      NU = N                                                            0005

C  T() {IS==0, N==NU, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,4)
      U(1) = 64*N+M                                                     0006

C  T(KU) {IS==0, KU==2, N==NU, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ,
C    NQ<=64}

C (2,5)
      KU = 2                                                            0007

C  T(KN) {IS==0, KN==N+2, KN==NU+2, KU==2, 2<=KN, M+3<=KN, 2M+2<=KN,
C    5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,6)
      KN = KU+NU                                                        0008

C  T(LN) {IS==0, KN==N+2, KN==NU+2, KU==2, LN==1, 2<=KN, M+3<=KN,
C    2M+2<=KN, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,7)
      LN = 1                                                            0009

C  T(I,J,KN,KU,LN) {IS==0, KN#init==N+2, KN#init==NU+2, KU==LN+1,
C    KU#init==2, LN#init==1, 1<=J, 2<=KN#init, M+3<=KN#init,
C    2M+2<=KN#init, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,8)
C
      DO 110 J = 1, M                                                   0010

C  T(I,KN,KU,LN) {IS==0, KU+N==KN, KU#init+LN#init==KU, LN==2LN#init,
C    N==NU, 0<=I, LN#init<=I, 1<=J, J<=M, 5<=M, M<=6, M+1<=N, 2M<=N,
C    0<=N, 1<=NQ, NQ<=64}

C (2,9)
C        BEGIN BLOCK

C  T() {IS==0, N==NU, 1<=J, J<=M, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N,
C    1<=NQ, NQ<=64}

C (2,10)
         T = PI/LN                                                      0011

C  T(I) {IS==0, N==NU, 0<=I, 1<=J, J<=M, 5<=M, M<=6, M+1<=N, 2M<=N,
C    0<=N, 1<=NQ, NQ<=64}

C (2,11)
C
C   This loop is vectorizable.
C
         DO 100 I = 0, LN-1                                             0012

C  T() {I+KN==1, I+KU==1, IS==0, N==NU, 0<=I, I+1<=LN, 1<=J, J<=M,
C    5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,12)
C           BEGIN BLOCK

C  T() {IS==0, N==NU, 0<=I, I+1<=LN, 1<=J, J<=M, 5<=M, M<=6, M+1<=N,
C    2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,13)
            TI = I*T                                                    0013

C  T() {I+KU==1, IS==0, N==NU, 0<=I, I+1<=LN, 1<=J, J<=M, 5<=M, M<=6,
C    M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,14)
            U(I+KU) = COS(TI)                                           0014

C  T() {I+KN==1, I+KU==1, IS==0, N==NU, 0<=I, I+1<=LN, 1<=J, J<=M,
C    5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,15)
            U(I+KN) = SIN(TI)                                           0015

C  T() {I+KN==1, I+KU==1, IS==0, N==NU, 0<=I, I+1<=LN, 1<=J, J<=M,
C    5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,16)
100         CONTINUE                                                    0016
C           END BLOCK

C  T(KU) {IS==0, KU#init+LN==KU, N==NU, 0<=I, LN<=I, 1<=J, J<=M, 5<=M,
C    M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,17)
C
         KU = KU+LN                                                     0017

C  T(KN) {IS==0, KU+N==KN, N==NU, 0<=I, LN<=I, 1<=J, J<=M, 5<=M, M<=6,
C    M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,18)
         KN = KU+NU                                                     0018

C  T(LN) {IS==0, KU+N==KN, LN==2LN#init, N==NU, 0<=I, LN#init<=I,
C    1<=J, J<=M, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,19)
         LN = 2*LN                                                      0019

C  T() {IS==0, KU+N==KN, N==NU, 0<=I, LN<=2I, 1<=J, J<=M, 5<=M, M<=6,
C    M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,20)
110      CONTINUE                                                       0020
C        END BLOCK
C
C     END BLOCK

C  T() {IS==0, J==M+1, KU+N==KN, KU==LN+1, N==NU, 0<=I, KU<=2I+1,
C    6<=J, J<=7, 2J<=N+2, 1<=NQ, NQ<=64}

C (3,1)
C
C
180   CONTINUE                                                          0056
C     END BLOCK
      END

C  P() {}

      SUBROUTINE CFFT (IS, M, U, X, Y, NQ)

      IMPLICIT REAL*8 (A-H, O-Z)
      PARAMETER (PI = 3.141592653589793238D0)
      COMMON /COUNT/ KTTRANS(256)
      DIMENSION U(1), X(1), Y(1)

C  P() {}

C (0,1)
C     BEGIN BLOCK

C  P() {}

C (0,2)

C     Synthesize preconditions
      IF (IS.LT.-1.OR.IS.GT.1.OR.M.LT.5.OR.M.GT.6.OR.NQ.LT.1.OR.NQ      0001
     &.GT.64) STOP                                                      0001
C (0,5)

C  P() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (1,1)

C
      IF (IS.EQ.0) GOTO 99993                                           0003

C  P() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (18,1)
C     BEGIN BLOCK

C  P() {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (18,2)
C
C   Check if input parameters are invalid.
C
      K = U(1)                                                          0021

C  P(K) {0<=IS+1, IS<=1, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (18,3)
      MX = MOD(K, 64)                                                   0022

C  P(K,MX) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (18,4)
      IF (IS.NE.1.AND.IS.NE.-1.OR.M.LT.1.OR.M.GT.MX) THEN               0023

C  P(K,MX) {0<=IS+1, IS<=1, MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63,
C    58IS+MX<=63, 5<=M, M<=6, 0<=MX, 1<=NQ, NQ<=64}

C (18,5)
C        BEGIN BLOCK

C  P(K,MX) {0<=IS+1, IS<=1, MX<=59IS+M+58, 59IS+MX<=M+58, MX<=58IS+63,
C    58IS+MX<=63, 5<=M, M<=6, 0<=MX, 1<=NQ, NQ<=64}

C (18,6)
C       WRITE (6, 1)  IS, M, MX
1        FORMAT('CFFTZ: EITHER U HAS NOT BEEN INITIALIZED, OR ELSE'/'ONE
     & OF THE INPUT PARAMETERS IS INVALID',3I5)                         0024
C       STOP
C        END BLOCK
      ENDIF

C  P(K,MX) {0<=IS+1, IS<=1, 5<=M, M<=6, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (18,9)
C>> A normal call to CFFTZ starts here.  M1 is the number of the first
C     variant radix-2 Stockham iterations to be performed.  The second
C     variant is faster on most computers after the first few
C     iterations, since in the second variant it is not necessary to
C     access roots of unity in the inner DO loop.  Thus it is most
C     efficient to limit M1 to some value.  For many vector computers,
C     the optimum limit of M1 is 6.  For scalar systems, M1 should
C     probably be limited to 2.
C
      N = 2**M                                                          0025

C  P(K,MX,N) {0<=IS+1, IS<=1, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=MX,
C    MX<=63, 0<=N, 1<=NQ, NQ<=64}

C (18,10)
C      M1 = MIN (M / 2, 6)
      M1 = MIN(M/2, 2)                                                  0026

C  P(K,M1,MX,N) {0<=IS+1, IS<=1, 5<=M, M<=6, 2M1<=M, M+1<=N, 2M<=N,
C    M1<=2, 0<=MX, MX<=63, 0<=N, 1<=NQ, NQ<=64}

C (18,11)
      M2 = M-M1                                                         0027

C  P(K,M1,M2,MX,N) {M1+M2==M, 0<=IS+1, IS<=1, 5<=M, M<=6, 2M1<=M,
C    M+1<=N, 2M<=N, M1<=2, 0<=MX, MX<=63, 0<=N, 1<=NQ, NQ<=64}

C (18,12)
      N2 = 2**M1                                                        0028

C  P(K,M1,M2,MX,N,N2) {M1+M2==M, 0<=IS+1, IS<=1, 5<=M, M<=6, 2M1<=M,
C    M+1<=N, 2M<=N, M1<=2, M1+1<=N2, 2M1<=N2, 0<=MX, MX<=63, 0<=N,
C    0<=N2, 1<=NQ, NQ<=64}

C (18,13)
      N1 = 2**M2                                                        0029

C  P(K,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 5<=M, M<=6,
C    2M1<=M, M+1<=N, 2M<=N, M1<=2, M1+1<=N2, 2M1<=N2, M2+1<=N1,
C    2M2<=N1, 0<=MX, MX<=63, 0<=N, 0<=N1, 0<=N2, 1<=NQ, NQ<=64}

C (18,14)
      L = 1                                                             0030
C     END BLOCK
99991 CONTINUE

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L+2M1+1<=2N2, 2L<=N2+2, M1<=2, 5<=M1+M2, M1+M2<=6, 2M1+2M2<=N,
C    2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (15,1)
C
C   Perform one variant of the Stockham FFT.
C
C     DO loop 120 with exit had to be desugared
      IF (L.GT.M1) GOTO 99992                                           0030

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L<=M1, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6, M1<=2, 5<=M1+M2,
C    M1+M2<=6, 2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (17,1)
      CALL FFTZ1(IS, L, M, U, X, Y)                                     0031

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L<=M1, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6, M1<=2, 5<=M1+M2,
C    M1+M2<=6, 2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (13,1)
      IF (L.EQ.M1) GOTO 140                                             0032

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L+1<=M1, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6, M1<=2, 5<=M1+M2,
C    M1+M2<=6, 2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (14,1)
C     BEGIN BLOCK

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L+1<=M1, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6, M1<=2, 5<=M1+M2,
C    M1+M2<=6, 2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (14,2)
      CALL FFTZ1(IS, L+1, M, U, Y, X)                                   0034

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L+1<=M1, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6, M1<=2, 5<=M1+M2,
C    M1+M2<=6, 2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (14,3)
120   CONTINUE                                                          0035

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L+1<=M1, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6, M1<=2, 5<=M1+M2,
C    M1+M2<=6, 2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (14,4)
      L = L+2                                                           0030
C     END BLOCK
      GOTO 99991

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M, L==M1, 0<=IS+1, IS<=1, 1<=L,
C    L<=2, 5<=L+M2, L+M2<=6, 2L+2M2<=N, 2L<=N2, 3L+1<=2N2, 5<=M, M<=6,
C    2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (12,1)
C     BEGIN BLOCK

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M, L==M1, 0<=IS+1, IS<=1, 1<=L,
C    L<=2, 5<=L+M2, L+M2<=6, 2L+2M2<=N, 2L<=N2, 3L+1<=2N2, 5<=M, M<=6,
C    2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (12,2)
C
C   Perform a transposition of Y treated as a N2 x N1 x 2 matrix.
C
140   CALL TRANS(N1, N2, Y, X)                                          0044

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M, L==M1, 0<=IS+1, IS<=1, 1<=L,
C    L<=2, L+2M+1<=2M2+2N2, 5<=L+M2, L+M2<=6, 2L+2M2<=N, 2L<=N2,
C    3L+1<=2N2, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N, 2M2<=N1,
C    0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (12,3)
      KTTRANS(NQ) = KTTRANS(NQ)+1                                       0045

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M, L==M1, 0<=IS+1, IS<=1, 1<=L,
C    L<=2, L+2M+1<=2M2+2N2, 5<=L+M2, L+M2<=6, 2L+2M2<=N, 2L<=N2,
C    3L+1<=2N2, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N, 2M2<=N1,
C    0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (12,4)
      L = M1+1                                                          0046
C     END BLOCK
99990 CONTINUE

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, 2<=L,
C    L<=3, L+2M<=2M2+2N2, 6<=L+M2, L+M2<=7, 2L+2M2<=N+2, 2L<=N2+2,
C    3L<=2N2+2, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N, 2M2<=N1,
C    0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (10,1)
C
C   Perform second variant of the Stockham FFT from X to Y and Y to X.
C
C     DO loop 150 with exit had to be desugared
      IF (L.GT.M) GOTO 180                                              0046

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, 2<=L,
C    L<=3, L<=M, L+2M<=2M2+2N2, 6<=L+M2, L+M2<=7, 2L+2M2<=N+2,
C    2L<=N2+2, 3L<=2N2+2, 5<=M, M<=6, M<=M2+2, 2M<=2M2+N2, 2M<=N,
C    2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (11,1)
      CALL FFTZ2(IS, L, M, U, X, Y)                                     0047

C  P() {0==-1}

C (8,1)
      IF (L.EQ.M) GOTO 160                                              0048

C  P() {0==-1}

C (9,1)
C     BEGIN BLOCK

C  P() {0==-1}

C (9,2)
      CALL FFTZ2(IS, L+1, M, U, Y, X)                                   0050

C  P() {0==-1}

C (9,3)
150   CONTINUE                                                          0051

C  P() {0==-1}

C (9,4)
      L = L+2                                                           0046
C     END BLOCK
      GOTO 99990

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3,
C    M+1<=L, L+2M+1<=2M2+2N2, 6<=L+M2, L+M2<=7, 2L+2M2<=N+2, L<=N2,
C    2L<=N2+2, 3L<=2N2+1, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2, 2M<=2M2+N2,
C    2M<=N, 2M2<=N1, 0<=MX, MX<=63, 0<=N2, 1<=NQ, NQ<=64}

C (7,1)
C     BEGIN BLOCK

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3,
C    M+1<=L, L+2M+1<=2M2+2N2, 6<=L+M2, L+M2<=7, 2L+2M2<=N+2, L<=N2,
C    2L<=N2+2, 3L<=2N2+1, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2, 2M<=2M2+N2,
C    2M<=N, 2M2<=N1, 0<=MX, MX<=63, 0<=N2, 1<=NQ, NQ<=64}

C (7,2)
C
C
C   Copy Y to X.
C
160   CONTINUE                                                          0052

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3,
C    M+1<=L, L+2M+1<=2M2+2N2, 6<=L+M2, L+M2<=7, 2L+2M2<=N+2, L<=N2,
C    2L<=N2+2, 3L<=2N2+1, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2, 2M<=2M2+N2,
C    2M<=N, 2M2<=N1, 0<=MX, MX<=63, 0<=N2, 1<=NQ, NQ<=64}

C (7,3)
      DO 170 I = 1, 2*N                                                 0053

C  P() {0==-1}

C (7,4)
C        BEGIN BLOCK

C  P() {0==-1}

C (7,5)
         X(I) = Y(I)                                                    0054

C  P() {0==-1}

C (7,6)
170      CONTINUE                                                       0055
C        END BLOCK
C     END BLOCK
      GOTO 180
99992 CONTINUE

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    M1+1<=L, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6, M1<=2, 5<=M1+M2,
C    M1+M2<=6, 2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (16,1)
C     BEGIN BLOCK

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    M1+1<=L, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6, M1<=2, 5<=M1+M2,
C    M1+M2<=6, 2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ,
C    NQ<=64}

C (16,2)
C
C   Perform a transposition of X treated as a N2 x N1 x 2 matrix.
C
      CALL TRANS(N1, N2, X, Y)                                          0036

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L+2M+1<=2M2+2N2, M1+1<=L, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6,
C    M<=M2+2, 2M<=2M2+N2, 2M<=N, M1<=2, 5<=M1+M2, M1+M2<=6,
C    2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (16,3)
      KTTRANS(NQ) = KTTRANS(NQ)+1                                       0037

C  P(K,L,M1,M2,MX,N,N1,N2) {M1+M2==M, 0<=IS+1, IS<=1, 1<=L, L<=3,
C    L+2M+1<=2M2+2N2, M1+1<=L, L+2M1+1<=2N2, 2L<=N2+2, 5<=M, M<=6,
C    M<=M2+2, 2M<=2M2+N2, 2M<=N, M1<=2, 5<=M1+M2, M1+M2<=6,
C    2M1+2M2<=N, 2M1<=N2, 2M2<=N1, 0<=MX, MX<=63, 1<=NQ, NQ<=64}

C (16,4)
      L = M1+1                                                          0038
C     END BLOCK
99989 CONTINUE

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3,
C    L+2M+1<=2M2+2N2, 6<=L+M2, L+M2<=7, 2L+2M2<=N+2, L<=N2, 2L<=N2+2,
C    3L<=2N2+1, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2, 2M<=2M2+N2, 2M<=N,
C    2M2<=N1, 0<=MX, MX<=63, 0<=N2, 1<=NQ, NQ<=64}

C (6,1)
C
C   Perform second variant of the Stockham FFT from Y to X and X to Y.
C
C     DO loop 130 with exit had to be desugared
      IF (L.GT.M) GOTO 160                                              0038

C  P(K,L,M1,M2,MX,N,N1,N2) {L+M2==M+1, L==M1+1, 0<=IS+1, IS<=1, L<=3,
C    L<=M, L+2M+1<=2M2+2N2, 6<=L+M2, L+M2<=7, 2L+2M2<=N+2, L<=N2,
C    2L<=N2+2, 3L<=2N2+1, 5<=M, M<=6, M<=M2+2, M+1<=M2+N2, 2M<=2M2+N2,
C    2M<=N, 2M2<=N1, 0<=MX, MX<=63, 0<=N2, 1<=NQ, NQ<=64}

C (19,1)
      CALL FFTZ2(IS, L, M, U, Y, X)                                     0039

C  P() {0==-1}

C (4,1)
      IF (L.EQ.M) GOTO 180                                              0040

C  P() {0==-1}

C (5,1)
C     BEGIN BLOCK

C  P() {0==-1}

C (5,2)
      CALL FFTZ2(IS, L+1, M, U, X, Y)                                   0042

C  P() {0==-1}

C (5,3)
130   CONTINUE                                                          0043

C  P() {0==-1}

C (5,4)
      L = L+2                                                           0038
C     END BLOCK
      GOTO 99989
99993 CONTINUE

C  P() {IS==0, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,1)
C     BEGIN BLOCK

C  P() {IS==0, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,2)
C
C     Initialize the U array with sines and cosines in a manner that
C     permits stride one access at each FFT iteration.
C
      N = 2**M                                                          0004

C  P(N) {IS==0, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,3)
      NU = N                                                            0005

C  P(N,NU) {IS==0, N==NU, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ,
C    NQ<=64}

C (2,4)
      U(1) = 64*N+M                                                     0006

C  P(N,NU) {IS==0, N==NU, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ,
C    NQ<=64}

C (2,5)
      KU = 2                                                            0007

C  P(KU,N,NU) {IS==0, KU==2, N==NU, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N,
C    1<=NQ, NQ<=64}

C (2,6)
      KN = KU+NU                                                        0008

C  P(KN,KU,N,NU) {IS==0, KN==N+2, KN==NU+2, KU==2, 2<=KN, M+3<=KN,
C    2M+2<=KN, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,7)
      LN = 1                                                            0009

C  P(KN,KU,LN,N,NU) {IS==0, KN==N+2, KN==NU+2, KU==2, LN==1, 2<=KN,
C    M+3<=KN, 2M+2<=KN, 5<=M, M<=6, 1<=NQ, NQ<=64}

C (2,8)
C
      DO 110 J = 1, M                                                   0010

C  P(I,J,KN,KU,LN,N,NU) {IS==0, KU==LN+1, N==NU, 1<=J, J<=M, 5<=M,
C    M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,9)
C        BEGIN BLOCK

C  P(I,J,KN,KU,LN,N,NU) {IS==0, KU==LN+1, N==NU, 1<=J, J<=M, 5<=M,
C    M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,10)
         T = PI/LN                                                      0011

C  P(I,J,KN,KU,LN,N,NU) {IS==0, KU==LN+1, N==NU, 1<=J, J<=M, 5<=M,
C    M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,11)
C
C   This loop is vectorizable.
C
         DO 100 I = 0, LN-1                                             0012

C  P(I,J,KN,KU,LN,N,NU) {IS==0, KU==LN+1, N==NU, 0<=I, I+2<=KU, 1<=J,
C    J<=M, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,12)
C           BEGIN BLOCK

C  P(I,J,KN,KU,LN,N,NU) {IS==0, KU==LN+1, N==NU, 0<=I, I+2<=KU, 1<=J,
C    J<=M, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,13)
            TI = I*T                                                    0013

C  P() {0==-1}

C (2,14)
            U(I+KU) = COS(TI)                                           0014

C  P() {0==-1}

C (2,15)
            U(I+KN) = SIN(TI)                                           0015

C  P() {0==-1}

C (2,16)
100         CONTINUE                                                    0016
C           END BLOCK

C  P(I,J,KN,KU,LN,N,NU) {I==0, IS==0, KU==LN+1, N==NU, 1<=J, J<=M,
C    KU<=1, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,17)
C
         KU = KU+LN                                                     0017

C  P(I,J,KN,KU,LN,N,NU) {I==0, IS==0, KU==2LN+1, N==NU, 1<=J, J<=M,
C    LN<=0, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,18)
         KN = KU+NU                                                     0018

C  P(I,J,KN,KU,LN,N,NU) {I==0, IS==0, 2LN+N==KN-1, KU==2LN+1, N==NU,
C    1<=J, J<=M, LN<=0, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ,
C    NQ<=64}

C (2,19)
         LN = 2*LN                                                      0019

C  P(I,J,KN,KU,LN,N,NU) {I==0, IS==0, KU+N==KN, KU==LN+1, N==NU, 1<=J,
C    J<=M, KU<=1, 5<=M, M<=6, M+1<=N, 2M<=N, 0<=N, 1<=NQ, NQ<=64}

C (2,20)
110      CONTINUE                                                       0020
C        END BLOCK
C
C     END BLOCK

C  P(I,J,K,KN,KU,L,LN,M1,M2,MX,N,N1,N2,NU) {IS==0, J==M+1, KU+N==KN,
C    KU==LN+1, N==NU, 0<=I, KU<=2I+1, 6<=J, J<=7, 2J<=N+2, 1<=NQ,
C    NQ<=64}

C (3,1)
C
C
180   CONTINUE                                                          0056
C     END BLOCK
      END

