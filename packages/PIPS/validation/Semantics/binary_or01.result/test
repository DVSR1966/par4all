
Source code with proper effects

int binary_or01()
{
//               <must be written>: ret
   int ret = 1;                                                         /*0014*/
//               <may be read    >: stderr[0]
//               <may be written >: stderr[0]
//               <must be read   >: stderr __IO_EFFECTS:LUNS[2] ret
//               <must be written>: __IO_EFFECTS:LUNS[2] ret

   ret |= foo();                                                        /*0016*/
//               <may be read    >: stderr[0]
//               <may be written >: stderr[0]
//               <must be read   >: stderr __IO_EFFECTS:LUNS[2] ret
//               <must be written>: __IO_EFFECTS:LUNS[2] ret

   ret = ret||foo();                                                    /*0018*/
}

Source code with cumulated effects

//               <may be read    >: stderr[0]
//               <may be written >: stderr[0]
//               <must be read   >: stderr __IO_EFFECTS:LUNS[2]
//               <must be written>: __IO_EFFECTS:LUNS[2]
int binary_or01()
{
//               <must be written>: ret
   int ret = 1;                                                         /*0014*/
//               <may be read    >: stderr[0]
//               <may be written >: stderr[0]
//               <must be read   >: stderr __IO_EFFECTS:LUNS[2] ret
//               <must be written>: __IO_EFFECTS:LUNS[2] ret

   ret |= foo();                                                        /*0016*/
//               <may be read    >: stderr[0]
//               <may be written >: stderr[0]
//               <must be read   >: stderr __IO_EFFECTS:LUNS[2] ret
//               <must be written>: __IO_EFFECTS:LUNS[2] ret

   ret = ret||foo();                                                    /*0018*/
}

Source code with transformers for "binary_or01"


//  T() {}

int binary_or01()
{

//  T(ret) {ret==1}

   int ret = 1;                                                         /*0014*/

//  T(ret) {}


   ret |= foo();                                                        /*0016*/

//  T(ret) {}


   ret = ret||foo();                                                    /*0018*/
}

Source code with preconditions for "binary_or01"


//  P() {}

int binary_or01()
{

//  P() {}

   int ret = 1;                                                         /*0014*/

//  P(ret) {ret==1}


   ret |= foo();                                                        /*0016*/

//  P(ret) {}


   ret = ret||foo();                                                    /*0018*/
}

Warnings

unknown[unknown] (activate_phase) Rule `C_PARSER' already active
INITIAL_PRECONDITION[binary_or01] (add_or_kill_equivalenced_variables) storage return
INITIAL_PRECONDITION[foo] (add_or_kill_equivalenced_variables) storage return
PROGRAM_PRECONDITION[] (get_main_entity) no main found, returning binary_or01 instead
PROGRAM_PRECONDITION[] (add_or_kill_equivalenced_variables) storage return
PROGRAM_PRECONDITION[] (translate_global_value) Information about TOP-LEVEL:sys_nerr lost,
check structure of common /*STATIC*/ in modules TOP-LEVEL and binary_or01
TRANSFORMERS_INTER_FULL[foo] (add_or_kill_equivalenced_variables) storage return
TRANSFORMERS_INTER_FULL[binary_or01] (add_or_kill_equivalenced_variables) storage return
PRINT_CODE_TRANSFORMERS[binary_or01] (add_or_kill_equivalenced_variables) storage return
PRECONDITIONS_INTER_FULL[binary_or01] (add_or_kill_equivalenced_variables) storage return
PRINT_CODE_PRECONDITIONS[binary_or01] (add_or_kill_equivalenced_variables) storage return
INTERPROCEDURAL_SUMMARY_PRECONDITION[foo] (add_or_kill_equivalenced_variables) storage return
PRECONDITIONS_INTER_FULL[foo] (add_or_kill_equivalenced_variables) storage return
PRINT_CODE_PRECONDITIONS[foo] (add_or_kill_equivalenced_variables) storage return
