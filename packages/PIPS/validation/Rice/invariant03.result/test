
Initial source code

void invariant03(int n, int ni, int nj)
{
   // BEGIN BLOCK
   float x[n][n], y[n];                                                 /*0006*/
   int i, j;                                                            /*0007*/
   float s, a;                                                          /*0008*/

   for(i = 0; i <= ni-1; i += 1)                                        /*0010*/
      for(j = 0; j <= nj-1; j += 1) {                                   /*0011*/
         // BEGIN BLOCK
         s = a*a;                                                       /*0012*/
         x[i][j] = s;                                                   /*0013*/
         // END BLOCK
      }
   // END BLOCK
}

Parallelized code

void invariant03(int n, int ni, int nj)
{
   // BEGIN BLOCK
   float x[n][n], y[n];                                                 /*0006*/
   int i, j;                                                            /*0007*/
   float s, a;                                                          /*0008*/

   for(i = 0; i <= ni-1; i += 1)                                        /*0010*/
      for(j = 0; j <= nj-1; j += 1) {                                   /*0011*/
         // BEGIN BLOCK
         s = a*a;                                                       /*0012*/
         x[i][j] = s;                                                   /*0013*/
         // END BLOCK
      }
   // END BLOCK
}

Source code after invariant code motion

void invariant03(int n, int ni, int nj)
{
   // BEGIN BLOCK
   float x[n][n], y[n];                                                 /*0006*/
   int i, j;                                                            /*0007*/
   float s, a;                                                          /*0008*/

   i = MAX(INT(ni), 0);
   j = MAX(INT(nj), 0);
   s = a*a;                                                             /*0012*/
#pragma omp parallel for 
   for(i = 0; i <= ni-1; i += 1)                                        /*0010*/
#pragma omp parallel for 
      for(j = 0; j <= nj-1; j += 1)                                     /*0011*/
         x[i][j] = s;                                                   /*0013*/
   // END BLOCK
}

Warnings

unknown[unknown] (parse_properties) property MEMORY_EFFECTS_ONLY redefined
unknown[unknown] (activate_phase) Rule `C_PARSER' already active
unknown[unknown] (parse_properties) property PRETTYPRINT_LANGUAGE redefined
unknown[unknown] (parse_properties) property PRETTYPRINT_BLOCKS redefined
unknown[unknown] (parse_properties) property PRETTYPRINT_STATEMENT_NUMBER redefined
unknown[unknown] (parse_properties) property SEMANTICS_FIX_POINT_OPERATOR redefined
unknown[unknown] (parse_properties) property PARTIAL_DISTRIBUTION redefined
