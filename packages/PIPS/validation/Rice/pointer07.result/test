
POINTS TO


// Points To IN:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT


// Points To OUT:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT

void pointer07(double *a, double *b, double *c, int cnt)
{

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT

   double *w = (void *) 0;

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT
// w -> *NULL_POINTER* , EXACT

   int i;

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT
// w -> *NULL_POINTER* , EXACT


   w = (double *) malloc(cnt*sizeof(double));

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT
// w -> *HEAP*_l_8[0] , EXACT

   for(i = 0; i <= cnt-1; i += 1)

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT
// w -> *HEAP*_l_8[0] , EXACT

      w[i] = c[i]+a[i]*b[i];
}

Proper effects with points-to

void pointer07(double *a, double *b, double *c, int cnt)
{
//             <    is written>: w
   double *w = (void *) 0;
   int i;
//             <    is read   >: cnt _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: w _MALLOC_EFFECTS:_MALLOC_

   w = (double *) malloc(cnt*sizeof(double));
//             <    is read   >: cnt
//             <    is written>: i
   for(i = 0; i <= cnt-1; i += 1)
//             <    is read   >: _a_1[i] _b_2[i] _c_3[i] a b c cnt i w
//             <    is written>: *HEAP*_l_8[i]
      w[i] = c[i]+a[i]*b[i];
}

Parallel code

void pointer07(double *a, double *b, double *c, int cnt)
{
   double *w = (void *) 0;
   int i;

   w = (double *) malloc(cnt*sizeof(double));
   forall(i = 0; i <= cnt-1; i += 1)
      w[i] = c[i]+a[i]*b[i];
}
