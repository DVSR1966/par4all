Compute the intraprocedural preconditions at the same time as
transformers and use them to improve the accuracy of expression
and statement transformers:
int main()
{
   float a[10][10][10][10][10];
   int i, j, k, l, m;
   float x;
   float b[10][10];
   i = 0;
   j = 0;
   k = 0;
   l = 0;
   m = 0;
   x = 2.12;

#pragma omp for private(i,j,k,l,m)
   for(i = 0; i <= 9; i += 1) {
#pragma omp for private(j,k,l,m)
      for(j = 0; j <= 9; j += 1) {
         // comments 2
         float z;
         z = 0.0;
#pragma omp for private(z,k,l,m)
         for(k = 0; k <= 9; k += 1) {
            z = k*2.0;
#pragma omp for private(l,m)
            for(l = 0; l <= 9; l += 1) {
#pragma omp for private(m)
               for(m = 0; m <= 9; m += 1) {
                  float y;
                  //comments 3
                  // this break privatization
                  y = 2.0;
                  // comments 4
                  y = 3.5+x+z;
                  a[i][j][k][l][m] = x*y;
               }
            }
         }
      }
   }
   return 0;
}
// OMP style
int main()
{
   float a[10][10][10][10][10];
   int i, j, k, l, m;
   float x;
   float b[10][10];
   i = 0;
   j = 0;
   k = 0;
   l = 0;
   m = 0;
   x = 2.12;


#pragma omp for private(j,i)
   for(i = 0; i <= 9; i += 1) {
#pragma omp for private(k,j)
      for(j = 0; j <= 9; j += 1) {
         float z;
         z = 0.0;
#pragma omp for private(l,k,z)
         for(k = 0; k <= 9; k += 1) {
            z = k*2.0;
#pragma omp for private(m,l)
            for(l = 0; l <= 9; l += 1) {
#pragma omp for private(m)
               for(m = 0; m <= 9; m += 1) {
                  float y;
                  //comments 3
                  // this break privatization
                  y = 2.0;
                  // comments 4
                  y = 3.5+x+z;
                  a[i][j][k][l][m] = x*y;
               }
            }
         }
      }
   }
   return 0;
}
int main()
{
   float a[10][10][10][10][10];
   int i, j, k, l, m;
   float x;
   float b[10][10];
   i = 0;
   j = 0;
   k = 0;
   l = 0;
   m = 0;
   x = 2.12;


#pragma omp for private(j,i)
   for(i = 0; i <= 9; i += 1) {
#pragma omp for private(k,j)
      for(j = 0; j <= 9; j += 1) {
         float z;
         z = 0.0;
#pragma omp for private(l,k,z)
         for(k = 0; k <= 9; k += 1) {
            z = k*2.0;
#pragma omp for private(m,l)
            for(l = 0; l <= 9; l += 1) {
#pragma omp for private(m)
               for(m = 0; m <= 9; m += 1) {
                  float y;
                  //comments 3
                  // this break privatization
                  y = 2.0;
                  // comments 4
                  y = 3.5+x+z;
                  a[i][j][k][l][m] = x*y;
               }
            }
         }
      }
   }
   return 0;
}
