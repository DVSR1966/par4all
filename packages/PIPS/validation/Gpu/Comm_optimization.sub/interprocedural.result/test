void display(int n, int a[n])
{
   {
      int i;
      for(i = 0; i <= n-1; i += 1)
         printf("%d ", a[i]);
   }
   printf("\n");
}
void init(int n, int a[n], int b[n])
{
   int i;
   for(i = 0; i <= n-1; i += 1) {
      a[i] = i;
      b[i] = i;
   }
}
void kernel_add(int n, int c[n], int a[n], int b[n])
{
   int i;
   for(i = 0; i <= n-1; i += 1)
      c[i] = a[i]+b[i];
}
int main(int argc, char **argv)
{
   int n = atoi(argv[1]);
   int a[n], b[n], c[n];

   init(n, a, b);
   P4A_copy_to_accel(a, sizeof(int)*n);
   P4A_copy_to_accel(b, sizeof(int)*n);
   
   
   kernel_add(n, c, a, b);
   
   // This wrapper contains a kernel call
   // We use to kill a def on the gpu by a use here
   // this is because when we get the propers effects 
   // for this call we can't know if it a use in a 
   // kernel or on the CPU
   wrap_kernel_add(n, a, b, c);
   P4A_copy_from_accel(c, sizeof(int)*n);

   display(n, c);
}
void wrap_kernel_add(int n, int c[n], int a[n], int b[n])
{
   kernel_add(n, c[n], a[n], b[n]);
}
