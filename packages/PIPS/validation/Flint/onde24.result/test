### initial


      FUNCTION GETIME (X)
C     REND LE TEMPS CPU INSTANTANE, EN SECONDES.
          EXTERNAL TIME
          INTEGER TIME
      GETIME = REAL(TIME())                                             0001
      END
C     Modifications:
C      - function TIME added

      PROGRAM ONDE24

C      ---------------------------------------------------------------
C            MODELISATION PAR EQUATION D'ONDES D'UN PHENOMENE
C                  DE PROPAGATION EN DIMENSION 2.
C
C      HYPOTHESES  :   - ON CONSIDERE UN DOMAINE CARRE .
C      ----------      - LA SURFACE EST LIBRE.
C                      - ON CONSIDERE DES CONDITIONS ABSORBANTES DU SECOND
C                        ORDRE SUR LES BORDS  (cf. these CHALINDAR).
C                      - LE MILIEU EST HETEROGENE.
C
C
C      UTILISATION D'UN SCHEMA AUX DIFFERENCES FINIES D'ORDRE (2,4)
C      (ORDRE 2 EN TEMPS ET 4 EN ESPACE) COMME METHODE DE RESOLUTION :
C
C             - SCHEMA D'ORDRE (2,4) POUR LE DOMAINE INTERIEUR.
C             - SCHEMA D'ORDRE (2,2) POUR LE BORD INTERIEUR DU DOMAINE.
C             - CONDITIONS PARAXIALES D'ORDRE 2 POUR LE BORD DU DOMAINE.
C
C      ---------------------------------------------------------------



C      DECLARATION DE CONSTANTES
C      -------------------------
C      NPMAX      : NOMBRE DE POINTS MAXIMUM DU MAILLAGE SPATIAL
C      NTMAX      : NOMBRE MAXIMUM DE PAS DE TEMPS
C      NBTRAC   : NOMBRE DE TRACES SISMIQUES
C      TMAX        : TEMPS DE PRISE EN COMPTE DE LA FONCTION SOURCE (S)

      INTEGER    NPMAX 
      INTEGER    NTMAX 
      INTEGER    NBTRAC
      INTEGER    TMAX   
      REAL*8     PI     

      PARAMETER      (NPMAX     = 809)
      PARAMETER      (NTMAX     = 4000)
      PARAMETER      (NBTRAC  = 50)
      PARAMETER      (TMAX       = 1.0)
      PARAMETER      (PI         = 3.141592653589)


C      DECLARATION DE TABLEAUX
C      -----------------------
C      U      :    SOLUTION DE LA MODELISATION PAR EQUATION D'ONDE D'UN
C                  PHENOMENE DE PROPAGATION. UTILISATION D'UN SCHEMA AUX
C                  DIFFERENCES FINIES COMME METHODE DE RESOLUTION.
C
C                  U(.,.,KM) REPRESENTE U(t)
C                  U(.,.,KP) REPRESENTE U(t-1) et U(t+1)
C
C
C
C      V      :    CHAMP DE VITESSE CARACTERISTIQUE DU MILIEU.
C                  - LE TABLEAU MEMORISE LA CONSTANTE LIEE A LA VITESSE
C                         1/12*((V(i,j)*DELTAT/H)**2)
C                    POUR LES POINTS INTERIEURS DU DOMAINE.
C                  - LE TABLEAU MEMORISE LA CONSTANTE LIEE A LA VITESSE
C                         (V(i,j)*DELTAT/H)**2
C                    POUR LES POINTS CONSTITUANT LE BORD INTERNE DU DOMAINE
C                  - DANS LE CAS DES POINTS CONSTITUANT LES FRONTIERES
C                    E-W-S, LE TABLEAU CONTIENT LA MOYENNE HARMONIQUE
C                    DES VITESSES DES POINTS FRONTIERES ET DES POINTS
C                    CONNEXES A LA FRONTIERE.
C                  - DANS LE CAS DES POINTS CONSTITUANT LES COINS INFERIEURS
C                    DU DOMAINE, ET LES DEUX POINTS FRONTIERES CONNEXES
C                    AUX COINS,  LE TABLEAU CONTIENT LA MOYENNE HARMONIQUE
C                    DES VITESSES DES 4 POINTS CONNEXES AU POINT CONCERNE.
C                  - LES COINS SUPERIEURS SONT CONSIDERES COMME PARTIE
C                    DE LA SURFACE LIBRE.
C
C    B        :    TABLEAUX DE 3 VECTEURS CONTENANT LES CONSTANTES LIEES
C                  AUX EQUATIONS ASSOCIEES AUX BORDS.
C                       B1  =  1 - (1/(V'*DELTAT + H)) * (2*H + (V'*DELTAT)**2/H)
C                       B2  =  2*H / (V'*DELTAT + H)
C                       B3  =  (V'*DELTAT)*(V'*DELTAT) / 2*H*(V'*DELTAT + H)
C                  AVEC V': VITESSE HARMONIQUE SUR DEUX POINTS.
C
C                  DANS LE CAS PARTICULIER DES 3 POINTS COMPOSANT
C                  CHAQUE COIN E-S ET S-W, LES TABLEAUX B1 ET B2 CONTIENNENT 
C                  RESPECTIVEMENT LES CONSTANTES :
C                      B1   = 2*V'*DELTAT / ( 4*V'*DELTAT + 3*H)
C                      B2   = 3*H / (4*V'*DELTAT + 3*H)
C                  AVEC V': VITESSE HARMONIQUE SUR QUATRE POINTS.
C                  
C                  CODAGE :  B(.,1,1) <-  B1 EAST
C                            B(.,1,2) <-  B1 SOUTH
C                            B(.,1,3) <-  B1 WEST
C
C
C    UB       :    TABLEAU DE VECTEURS INTERMEDIAIRES UTILISES POUR LE CALCUL 
C                  DES BORDS E-S-W ; LE CODAGE EST LE MEME QUE POUR 
C                  LES VECTEURS B.
C
C    UINT    :     VECTEUR INTERMEDIAIRE UTILISE LORS DU CALCUL DE
C                  LA SOLUTION AUX BORDS
C
C

      REAL*8    U     (NPMAX+1,NPMAX,2)
      REAL*8    V     (NPMAX+1,NPMAX)
 
      REAL*8    B     (NPMAX+1,3,3)
      REAL*8    UB    (NPMAX+1,3)
      REAL*8    UINT  (NPMAX)

      REAL*8    SISMO (NBTRAC,NTMAX)

C     DECLARATION DE SCALAIRES
C     ------------------------
C     NP       : NOMBRE DE POINT SELON LA DIMENSION X DU MAILLAGE SPATIAL
C     NT       : NOMBRE DE PAS DE TEMPS DE LA SIMULATION
C     DELTAT   : INTERVALLE DE TEMPS               (0.0005 S)
C     H        : INTERVALLE D'ESPACE               (1.5    M)
C     F        : FREQUENCE DE LA SOURCE            (30     HERTZ)
C     IS,JS    : COORDONNEES DE LA SOURCE            
C
C     KM,KP    : POINTEURS PERMETTANT DE PERMUTER LES PLANS ESPACE.
C     I,J,K,N  : INDICES DE BOUCLES
C     Wi       : VARIABLES DE TRAVAIL
C     G0       : INTENSITE DE LA SOURCE A L'INSTANT t
C     TINIT,
C     TFIN,
C     TMESUR   : COMPTEURS DE GESTION DU TEMPS
C     TiCPU    : COMPTEURS DE GESTION DU TEMPS CPU
C     TiELAP   : COMPTEURS DE GESTION DU TEMPS ELAPSED
C     NBOPi    : COMPTEURS DU NOMBRE D'OPERATIONS FLOTTANTES
C     MFLOPS   : NOMBRE DE MFLOPS MESURES
C     UMIN     : VALEUR MIN DE LA SOLUTION U AU DERNIER PAS DE TEMPS
C     UMAX     : VALEUR MAX DE LA SOLUTION U AU DERNIER PAS DE TEMPS
C     VMIN     : VALEUR MIN DE LA SOLUTION DU CHAMP DE VITESSE
C     VMAX     : VALEUR MAX DE LA SOLUTION DU CHAMP DE VITESSE
C     SISMIN   : VALEUR MIN DE LA SOLUTION DU SISMOGRAMME
C     SISMAX   : VALEUR MAX DE LA SOLUTION DU SISMOGRAMME
C
      INTEGER   NP
      INTEGER   NT
      REAL*8    DELTAT 
      REAL*8    H      
      REAL*8    F      
      INTEGER   IS,JS
      INTEGER   KM,KP
      INTEGER   I,J,K,N
      REAL*8    W
      REAL*8    C1,C2,C3

      REAL*8    G0
      REAL*8    TMESUR
      REAL*8    TINIT
      REAL*8    TFIN
      REAL*8    T1CPU
      REAL*8    T2CPU
      REAL*8    T3CPU
      REAL*8    NBOP1
      REAL*8    NBOP2
      REAL*8    MFLOPS
      REAL*8    UMIN, UMAX
      REAL*8    VMIN, VMAX
      REAL*8    SISMIN, SISMAX


C
C             CORPS DU PROGRAMME
C             ------------------

      CALL OPENFILE                                                     0001

C
C     ACQUISITION DES PARAMETRES DE LA MODELISATION
C     ---------------------------------------------

C     WRITE (6,'('' ENTRER LE NB DE POINTS DU MAILLAGE CARRE (NP) ? '',$)')
      READ (4, *) NP                                                    0002
C     WRITE (6,'('' ENTRER LE NB DE PAS DE TEMPS TOTAL (NT) ? '',$)')
      READ (4, *) NT                                                    0003
C     WRITE (6,'('' ENTRER LE PAS DE DISCR. EN ESPACE (H) ? '',$)')
      READ (4, *) H                                                     0004
C     WRITE (6,'('' ENTRER LE PAS DE DISCR. EN TEMPS (DELTAT) ? '',$)')
      READ (4, *) DELTAT                                                0005
C     WRITE (6,'('' ENTRER LA POSITION EN X DE LA SOURCE (JS) ? '',$)')
      READ (4, *) JS                                                    0006
C     WRITE (6,'('' ENTRER LA POSITION EN Z DE LA SOURCE (IS) ? '',$)')
      READ (4, *) IS                                                    0007
C     WRITE (6,'('' ENTRER LA FREQUENCE DE LA SOURCE (F) ? '',$)')
      READ (4, *) F                                                     0008




      WRITE (1, 1100)                                                   0009
      WRITE (1, 1110)                                                   0010
      WRITE (1, 1120)                                                   0011
      WRITE (1, 1130) NP, NP                                            0012
      WRITE (1, 1135) NT                                                0013
      WRITE (1, 1140) IS, JS                                            0014
      WRITE (1, 1171) H                                                 0015
      WRITE (1, 1170) DELTAT                                            0016
      WRITE (1, 1180) F                                                 0017

C////////////////BEGIN FUNCTION TIMER/////////////////
      CALL STIMER(W)                                                    0018
      TINIT = GETIME(W)                                                 0019
      TFIN = GETIME(W)                                                  0020
      TMESUR = TFIN-TINIT                                               0021
C////////////////END   FUNCTION TIMER/////////////////
C
C     INITIALISATION DES VARIABLES SCALAIRES
C     --------------------------------------
      KM = 1                                                            0022
      KP = 2                                                            0023
      G0 = 0                                                            0024


C     INITIALISATION DU CHAMP VITESSE
C     V(I,J)     = READ (Vi) (CAS D'UN MILIEU HETEROGENE)
C     -------------------------------------------------------

C////////////////BEGIN FUNCTION TIMER/////////////////
      TINIT = GETIME(W)                                                 0025
C////////////////END   FUNCTION TIMER/////////////////


      READ (3, *) NP                                                    0026
      READ (3, *) NP                                                    0027
      DO 21 I = 1, NP                                                   0028
         DO 22 J = 1, NP                                                0029
            READ (3, *) V(I,J)                                          0030
22          CONTINUE                                                    0031
21       CONTINUE                                                       0032


C////////////////BEGIN FUNCTION TIMER/////////////////
      TFIN = GETIME(W)                                                  0033
      T3CPU = TFIN-TINIT                                                0034
C////////////////END   FUNCTION TIMER/////////////////

      VMAX = V(1,1)                                                     0035
      VMIN = V(1,1)                                                     0036
      DO 112 I = 1, NP                                                  0037
         DO 122 J = 1, NP                                               0038
            IF (V(I,J).LT.VMIN) VMIN = V(I,J)                           0039
            IF (V(I,J).GT.VMAX) VMAX = V(I,J)                           0041
122         CONTINUE                                                    0043
112      CONTINUE                                                       0044
      WRITE (1, 1051) VMIN, VMAX                                        0045


C////////////////BEGIN FUNCTION TIMER/////////////////
      TINIT = GETIME(W)                                                 0046
C////////////////END   FUNCTION TIMER/////////////////


C     INITIALISATION DE LA SOLUTION U
C     U(.,.,t=0) = U(.,.,t=1) = 0
C     ET DES ENREGISTREMENTS 
C     SISMO (T=1) = 0.0
C     ------------------------------

      DO 10 K = 1, 2                                                    0047
         DO 20 J = 1, NP                                                0048
            DO 30 I = 1, NP                                             0049
               U(I,J,K) = 0.0                                           0050
30             CONTINUE                                                 0051
20          CONTINUE                                                    0052
10       CONTINUE                                                       0053


      DO 84 I = 1, NBTRAC                                               0054
         SISMO(I,1) = 0.0                                               0055
84       CONTINUE                                                       0056




C     INITIALISATION DES CONSTANTES LIEES AUX COINS INFERIEURS
C            V(I,J)  <--  moyenne harmonique sur 4 points
C            B(I,.,.)<--  cf declarations
C     ET AUX BORDS E-S-W
C            V(I,J)  <--  moyenne harmonique sur 2 points
C            B(I,.,.)<--  cf declarations
C     --------------------------------------------------------


C     CAS DES TROIS POINTS DU COIN E-S
C     --------------------------------
      C1 = 4/(1/V(NP-1,NP)+1/V(NP-1,NP-1)+1/V(NP-2,NP)+1/V(NP-2,NP-1)   0057
     &)                                                                 0057
      W = C1*DELTAT                                                     0058
      B(NP-1,1,1) = 2*W/(4*W+3*H)                                       0059
      B(NP-1,1,2) = 3*H/(4*W+3*H)                                       0060

      C2 = 4/(1/V(NP,NP)+1/V(NP,NP-1)+1/V(NP-1,NP)+1/V(NP-1,NP-1))      0061
      W = C2*DELTAT                                                     0062
      B(NP,2,1) = 2*W/(4*W+3*H)                                         0063
      B(NP,2,2) = 3*H/(4*W+3*H)                                         0064

      C3 = 4/(1/V(NP,NP)+1/V(NP,NP-1)+1/V(NP-1,NP)+1/V(NP-1,NP-1))      0065
      W = C3*DELTAT                                                     0066
      B(NP-1,2,1) = 2*W/(4*W+3*H)                                       0067
      B(NP-1,2,2) = 3*H/(4*W+3*H)                                       0068

      V(NP-1,NP) = C1                                                   0069
      V(NP,NP) = C2                                                     0070
      V(NP,NP-1) = C3                                                   0071

C     CAS DES 3 POINTS DU COIN W-S
C     ----------------------------
      C1 = 4/(1/V(NP,2)+1/V(NP,3)+1/V(NP-1,2)+1/V(NP-1,3))              0072
      W = C1*DELTAT                                                     0073
      B(2,2,1) = 2*W/(4*W+3*H)                                          0074
      B(2,2,2) = 3*H/(4*W+3*H)                                          0075

      C2 = 4/(1/V(NP,1)+1/V(NP,2)+1/V(NP-1,1)+1/V(NP-1,2))              0076
      W = C2*DELTAT                                                     0077
      B(1,2,1) = 2*W/(4*W+3*H)                                          0078
      B(1,2,2) = 3*H/(4*W+3*H)                                          0079

      C3 = 4/(1/V(NP-1,1)+1/V(NP-1,2)+1/V(NP-2,1)+1/V(NP-2,2))          0080
      W = C3*DELTAT                                                     0081
      B(NP-1,3,1) = 2*W/(4*W+3*H)                                       0082
      B(NP-1,3,2) = 3*H/(4*W+3*H)                                       0083

      V(NP,2) = C1                                                      0084
      V(NP,1) = C2                                                      0085
      V(NP-1,1) = C3                                                    0086


C     CAS DES BORDS   E - S - W
C     -------------------------
      DO 41 I = 2, NP-2                                                 0087
         V(I,NP) = 2/(1/V(I,NP)+1/V(I,NP-1))                            0088
         W = V(I,NP)*DELTAT                                             0089
         B(I,1,1) = 1-1/(W+H)*(2*H+W*W/H)                               0090
         B(I,1,2) = 2*H/(W+H)                                           0091
         B(I,1,3) = W*W/(2*H*(W+H))                                     0092
41       CONTINUE                                                       0093

      DO 42 I = 3, NP-2                                                 0094
         V(NP,I) = 2/(1/V(NP,I)+1/V(NP-1,I))                            0095
         W = V(NP,I)*DELTAT                                             0096
         B(I,2,1) = 1-1/(W+H)*(2*H+W*W/H)                               0097
         B(I,2,2) = 2*H/(W+H)                                           0098
         B(I,2,3) = W*W/(2*H*(W+H))                                     0099
42       CONTINUE                                                       0100

      DO 43 I = 2, NP-2                                                 0101
         V(I,1) = 2/(1/V(I,1)+1/V(I,2))                                 0102
         W = V(I,1)*DELTAT                                              0103
         B(I,3,1) = 1-1/(W+H)*(2*H+W*W/H)                               0104
         B(I,3,2) = 2*H/(W+H)                                           0105
         B(I,3,3) = W*W/(2*H*(W+H))                                     0106
43       CONTINUE                                                       0107

C
C     INITIALISATION DES CONSTANTES LIEES AUX BORDS INTERNES
C     ------------------------------------------------------
      DO 51 I = 3, NP-1                                                 0108
         V(I,2) = (V(I,2)*DELTAT/H)**2                                  0109
51       CONTINUE                                                       0110

      DO 52 I = 3, NP-1                                                 0111
         V(I,NP-1) = (V(I,NP-1)*DELTAT/H)**2                            0112
52       CONTINUE                                                       0113

      DO 53 I = 3, NP-2                                                 0114
         V(NP-1,I) = (V(NP-1,I)*DELTAT/H)**2                            0115
53       CONTINUE                                                       0116


C     INITIALISATION DES CONSTANTES LIEES AU DOMAINE INTERIEUR
C            V(I,J) <--  1/12*((V(I,J)*DELTAT/H)**2)
C     --------------------------------------------------------
      DO 40 J = 3, NP-2                                                 0117
         DO 50 I = 3, NP-2                                              0118
            V(I,J) = (V(I,J)*DELTAT/H)**2/12                            0119
50          CONTINUE                                                    0120
40       CONTINUE                                                       0121


C////////////////BEGIN FUNCTION TIMER/////////////////
      TFIN = GETIME(W)                                                  0122
      T1CPU = TFIN-TINIT-TMESUR                                         0123
      WRITE (1, 1015) TMESUR                                            0124
      WRITE (1, 1010) T1CPU                                             0125

      TINIT = GETIME(W)                                                 0126
C////////////////END   FUNCTION TIMER/////////////////

C     -----------------------------------------------------------
C     !     MODELISATION DE LA PROPAGATION DES ONDES            !
C     !               PAR EQUATION D'ONDE.                      !
C     !        RESOLUTION PAR DIFFERENCES FINIES.               !
C     -----------------------------------------------------------


C     ----------------------------
C     !     BOUCLE EN TEMPS      !
C     ----------------------------

      DO 70 N = 2, NT                                                   0127

C     PRISE EN COMPTE DE LA FONCTION SOURCE PENDANT UN TEMPS DE TMAX SEC.
C     Un = Un + SOURCE
C     ------------------------------------------------------------------
         W = F*(N*DELTAT-1.0/F)                                         0128
         IF (W**2.LT.TMAX) THEN                                         0129
            W = (W*PI)**2                                               0130
            G0 = (1.0-2.0*W)*EXP(-W)                                    0131
            U(IS,JS,KM) = U(IS,JS,KM)+G0*12*V(IS,JS)*H**2               0132
         ENDIF



C     --------------------------------------------------------
C     SAUVEGARDE DE LA FRANGE CONNEXE AUX BORDS POUR LE CALCUL
C     ULTERIEUR DE LA SOLUTION AUX BORDS
C     --------------------------------------------------------

         DO 71 I = 2, NP-1                                              0133
            UB(I,1) = U(I,NP-1,KP)                                      0134
            UB(I,2) = U(NP-1,I,KP)                                      0135
            UB(I,3) = U(I,2,KP)                                         0136
71          CONTINUE                                                    0137

C
C     ------------------------------------------------
C     SOLUTION SUR LE DOMAINE INTERIEUR
C     SCHEMA D'ORDRE 2 EN TEMPS ET D'ORDRE 4 EN ESPACE
C     ------------------------------------------------

         DO 80 J = 3, NP-2                                              0138

C     levee des dependances pour forcer la vectorisation.
C     kp et km sont toujours different.
C DIR$ IVDEP

            DO 90 I = 3, NP-2                                           0139

               U(I,J,KP) = 2*U(I,J,KM)-U(I,J,KP)-V(I,J)*(60*U(I,J,KM)   0140
     &         -16*(U(I+1,J,KM)+U(I-1,J,KM)+U(I,J-1,KM)+U(I,J+1,KM))+   0140
     &         U(I+2,J,KM)+U(I-2,J,KM)+U(I,J-2,KM)+U(I,J+2,KM))         0140

90             CONTINUE                                                 0141
80          CONTINUE                                                    0142

C
C     ------------------------------------------------
C     SOLUTION SUR LES BORDS INTERIEURS
C     SCHEMA D'ORDRE 2 EN TEMPS ET D'ORDRE 2 EN ESPACE
C     ------------------------------------------------

C DIR$ IVDEP
         DO 140 I = 3, NP-1                                             0143
            U(I,2,KP) = 2*U(I,2,KM)-U(I,2,KP)-V(I,2)*(4*U(I,2,KM)-(U(   0144
     &      I+1,2,KM)+U(I-1,2,KM)+U(I,1,KM)+U(I,3,KM)))                 0144
140         CONTINUE                                                    0145

C DIR$ IVDEP
         DO 141 I = 3, NP-1                                             0146
            U(I,NP-1,KP) = 2*U(I,NP-1,KM)-U(I,NP-1,KP)-V(I,NP-1)*(4*U   0147
     &      (I,NP-1,KM)-(U(I+1,NP-1,KM)+U(I-1,NP-1,KM)+U(I,NP-2,KM)+U   0147
     &      (I,NP,KM)))                                                 0147
141         CONTINUE                                                    0148


C DIR$ IVDEP
         DO 142 I = 3, NP-2                                             0149
            U(NP-1,I,KP) = 2*U(NP-1,I,KM)-U(NP-1,I,KP)-V(NP-1,I)*(4*U   0150
     &      (NP-1,I,KM)-(U(NP,I,KM)+U(NP-2,I,KM)+U(NP-1,I-1,KM)+U(NP-   0150
     &      1,I+1,KM)))                                                 0150
142         CONTINUE                                                    0151

C
C     --------------------------------------------------------
C     SOLUTION AU BORD EAST. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 92 I = 3, NP-2                                              0152
            UINT(I) = B(I,1,1)*(U(I,NP,KP)+U(I,NP-1,KP))-UB(I,1)+B(I,   0153
     &      1,2)*(U(I,NP,KM)+U(I,NP-1,KM))+B(I,1,3)*(U(I+1,NP-1,KP)+U   0153
     &      (I+1,NP,KP)+U(I-1,NP-1,KP)+U(I-1,NP,KP))                    0153
92          CONTINUE                                                    0154

         DO 93 I = 3, NP-2                                              0155
            U(I,NP,KP) = UINT(I)                                        0156
93          CONTINUE                                                    0157

C
C     --------------------------------------------------------
C     SOLUTION AU BORD SOUTH. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 94 I = 3, NP-2                                              0158
            UINT(I) = B(I,2,1)*(U(NP,I,KP)+U(NP-1,I,KP))-UB(I,2)+B(I,   0159
     &      2,2)*(U(NP,I,KM)+U(NP-1,I,KM))+B(I,2,3)*(U(NP-1,I+1,KP)+U   0159
     &      (NP,I+1,KP)+U(NP-1,I-1,KP)+U(NP,I-1,KP))                    0159
94          CONTINUE                                                    0160

         DO 95 I = 3, NP-2                                              0161
            U(NP,I,KP) = UINT(I)                                        0162
95          CONTINUE                                                    0163

C
C     --------------------------------------------------------
C     SOLUTION AU BORD WEST. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 96 I = 3, NP-2                                              0164
            UINT(I) = B(I,3,1)*(U(I,1,KP)+U(I,2,KP))-UB(I,3)+B(I,3,2)   0165
     &      *(U(I,1,KM)+U(I,2,KM))+B(I,3,3)*(U(I+1,2,KP)+U(I+1,1,KP)+   0165
     &      U(I-1,2,KP)+U(I-1,1,KP))                                    0165
96          CONTINUE                                                    0166

         DO 97 I = 3, NP-2                                              0167
            U(I,1,KP) = UINT(I)                                         0168
97          CONTINUE                                                    0169



C      -----------------------------------------------
C      CALCUL DU BORD DU COIN 
C      U(NP-1,NP,KP) ,  U(NP,NP-1,KP) ET U(NP-1,NP,KP)
C      -----------------------------------------------

         U(NP-1,NP,KP) = B(NP-1,1,1)*(U(NP-1,NP-1,KP)+U(NP-2,NP,KP))+   0170
     &   B(NP-1,1,2)*U(NP-1,NP,KM)                                      0170

         U(NP,NP-1,KP) = B(NP-1,2,1)*(U(NP,NP-2,KP)+U(NP-1,NP-1,KP))+   0171
     &   B(NP-1,2,2)*U(NP,NP-1,KM)                                      0171

         U(NP,NP,KP) = B(NP,2,1)*(U(NP,NP-1,KP)+U(NP-1,NP,KP))+B(NP,2   0172
     &   ,2)*U(NP,NP,KM)                                                0172


C      -----------------------------------------------
C      CALCUL DU BORD DU COIN 
C      U(NP,2,KP) ,  U(NP-1,1,KP) ET U(NP,1,KP)
C      -----------------------------------------------

         U(NP,2,KP) = B(2,2,1)*(U(NP,3,KP)+U(NP-1,2,KP))+B(2,2,2)*U(    0173
     &   NP,2,KM)                                                       0173

         U(NP-1,1,KP) = B(NP-1,3,1)*(U(NP-1,2,KP)+U(NP-2,1,KP))+B(NP-   0174
     &   1,3,2)*U(NP-1,1,KM)                                            0174

         U(NP,1,KP) = B(1,2,1)*(U(NP-1,1,KP)+U(NP,2,KP))+B(1,2,2)*U(    0175
     &   NP,1,KM)                                                       0175


C
C     ENREGISTREMENT DU SISMOGRAMME
C     -----------------------------
         DO 81 I = 1, NBTRAC                                            0176
            SISMO(I,N) = U(IS,NP-NBTRAC+I,KP)                           0177
81          CONTINUE                                                    0178


C     PERMUTATION A CHAQUE ITERATION DES PLANS ESPACE
C     -----------------------------------------------
C
         KM = KP                                                        0179
         KP = 3-KP                                                      0180

70       CONTINUE                                                       0181

C////////////////BEGIN FUNCTION TIMER/////////////////
      TFIN = GETIME(W)                                                  0182
      T2CPU = TFIN-TINIT-TMESUR                                         0183
      WRITE (1, 1000) T2CPU                                             0184

      TINIT = GETIME(W)                                                 0185
C////////////////END   FUNCTION TIMER/////////////////

C
C     SORTIE FICHIER DU SISMOGRAMME
C     -----------------------------

      WRITE (2, *) NBTRAC                                               0186
      WRITE (2, *) NT                                                   0187
      DO 82 K = 1, NBTRAC                                               0188
         DO 83 J = 1, NT                                                0189
            WRITE (2, *) SISMO(K,J)                                     0190
83          CONTINUE                                                    0191
82       CONTINUE                                                       0192

C////////////////BEGIN FUNCTION TIMER/////////////////
      TFIN = GETIME(W)                                                  0193
      T3CPU = T3CPU+TFIN-TINIT-TMESUR                                   0194
      WRITE (1, 1020) T3CPU                                             0195
      WRITE (1, 1030) T1CPU+T2CPU+T3CPU                                 0196
C////////////////END   FUNCTION TIMER/////////////////

C
C     CALCUL DU NOMBRE DE MFLOPS
C     --------------------------

C     INITIALISATIONS
C     ---------------
      NBOP1 = 114.0+(NP-3)*72.0+(NP-4)*(NP-4)*4.0                       0197

C     RESOLUTION
C     ----------
      NBOP2 = (NT-1)*((NP-4)*(NP-4)*14.0+(NP-3)*27.0+(NP-4)*33.0+26.0   0198
     &)                                                                 0198


      MFLOPS = NBOP2/(T2CPU*1.0E06)                                     0199
      WRITE (1, 1060) MFLOPS                                            0200

      MFLOPS = (NBOP1+NBOP2)/((T1CPU+T2CPU)*1.0E06)                     0201
      WRITE (1, 1065) MFLOPS                                            0202

      MFLOPS = (NBOP1+NBOP2)/((T1CPU+T2CPU+T3CPU)*1.0E06)               0203
      WRITE (1, 1070) MFLOPS                                            0204


C
C     CALCUL DE STATISTIQUES SUR LE RESULTAT
C     --------------------------------------
      UMAX = U(1,1,KM)                                                  0205
      UMIN = U(1,1,KM)                                                  0206
      DO 110 J = 1, NP                                                  0207
         DO 120 I = 1, NP                                               0208
            IF (U(I,J,KM).LT.UMIN) UMIN = U(I,J,KM)                     0209
            IF (U(I,J,KM).GT.UMAX) UMAX = U(I,J,KM)                     0211
120         CONTINUE                                                    0213
110      CONTINUE                                                       0214
      WRITE (1, 1050) UMIN, UMAX                                        0215


      SISMAX = SISMO(1,1)                                               0216
      SISMIN = SISMO(1,1)                                               0217
      DO 111 I = 1, NBTRAC                                              0218
         DO 121 J = 1, NT                                               0219
            IF (SISMO(I,J).LT.SISMIN) SISMIN = SISMO(I,J)               0220
            IF (SISMO(I,J).GT.SISMAX) SISMAX = SISMO(I,J)               0222
121         CONTINUE                                                    0224
111      CONTINUE                                                       0225
      WRITE (1, 1055) SISMIN, SISMAX                                    0226



      WRITE (1, 1200)                                                   0227

      CLOSE (1)                                                         0228
      CLOSE (2)                                                         0229
      CLOSE (3)                                                         0230
      CLOSE (4)                                                         0231

      STOP                                                              0232


C     DECLARATIONS DE FORMATS DE SORTIE
C     ---------------------------------

1100  FORMAT(1X,'DEBUT DU PROGRAMME'//)                                 0233

1120  FORMAT(1X,'MODELISATION PAR EQUATION D"ONDES',/,1X,'SCHEMA D"ORDRE
     & 4 EN ESPACE ET 2 EN TEMPS'//)                                    0234
1130  FORMAT(1X,'TAILLE DU MAILLAGE NPXNP       : ',I4,'  X',I4)        0235
1135  FORMAT(1X,'NOMBRE DE PAS DE TEMPS         : ',I4)                 0236
1140  FORMAT(1X,'POSITION DE LA SOURCE          : (',I3,',',I3,')')     0237
1171  FORMAT(1X,'PAS DE DISCR. EN ESPACE (H)    : ',E12.5)              0238
1170  FORMAT(1X,'PAS DE DISCR. EN TEMPS (DELTAT): ',E12.5)              0239
1180  FORMAT(1X,'FREQUENCE DE LA SOURCE (F)     : ',E12.5)              0240
1051  FORMAT(1X,'MIN DE V:',E11.5,3X,'MAX DE V:  ',E11.5//)             0241
1200  FORMAT(1X,/,1X,'FIN DU PROGRAMME')                                0242

1000  FORMAT(1X,'TEMPS CPU DE LA RESOLUTION     (RESOL) : ',E15.5)      0243
1010  FORMAT(1X,'TEMPS CPU DES INITIALISATIONS   (INIT) : ',E15.5)      0244
1020  FORMAT(1X,'TEMPS CPU DES ENTREES/SORTIES    (E/S) : ',E15.5)      0245
1030  FORMAT(1X,'TEMPS CPU TOTAL       (RESOL+INIT+E/S) : ',E15.5//)    0246
1015  FORMAT(1X,'TEMPS CPU DE L"APPEL AU TIMER          : ',E15.5)      0247
1050  FORMAT(1X,'MIN DE U     :',E15.5,3X,'MAX DE U     : ',E15.5)      0248
1055  FORMAT(1X,'MIN DE SISMO :',E15.5,3X,'MAX DE SISMO : ',E15.5//)    0249
1060  FORMAT(1X,'MFLOPS CPU PARTIE VECTORIELLE  (RESOL) : ',E15.5)      0250
1065  FORMAT(1X,'MFLOPS CPU RESOLUTION     (RESOL+INIT) : ',E15.5)      0251
1070  FORMAT(1X,'MFLOPS CPU GLOBAL     (RESOL+INIT+E/S) : ',E15.5//)    0252




C/////////////////////////////////////////////////////////////////////
C
C   PARTIE SPECIFIQUE A CHAQUE MACHINE ET A CHAQUE MODELISATION
C 
C            - FORMATS DES COMMENTAIRES
C            - OUVERTURE DE FICHIERS
C            - FONCTIONS DE GESTION DES TIMERS
C
C/////////////////////////////////////////////////////////////////////


1110  FORMAT(1X,'*********************************************',/,1X,'  
     &     RESOLUTION SUR SUN 4                  ',/,1X,'     DOUBLE PRE
     &CISION (64 bits)              ',/,1X,'         VERSION STANDART   
     &                 ',/,1X,'                                         
     &    ',/,1X,'*********************************************'//)     0253

      END

C
C     OUVERTURE DES FICHIERS
C     ----------------------

      SUBROUTINE OPENFILE

      OPEN (UNIT=4,FILE='MODELES/param2.dat')                           0001

      OPEN (UNIT=3,FILE='MODELES/modele2.dat')                          0002

      OPEN (UNIT=1,FILE='SORTIES/stat2')                                0003

      OPEN (UNIT=2,FILE='SORTIES/sismo2')                               0004

      END

C
C     GESTION DU TIMER
C     ----------------

      SUBROUTINE STIMER (X)
C     INITIALISE LE TIMER - INUTILE SUR DE NOMBREUSES MACHINES
      END

      INTEGER FUNCTION TIME
      TIME = 0.                                                         0001
      END
### type checked


      FUNCTION GETIME (X)
C     REND LE TEMPS CPU INSTANTANE, EN SECONDES.
          EXTERNAL TIME
          INTEGER TIME
      GETIME = REAL(TIME())                                             0001
      END
C     Modifications:
C      - function TIME added

      PROGRAM ONDE24

C      ---------------------------------------------------------------
C            MODELISATION PAR EQUATION D'ONDES D'UN PHENOMENE
C                  DE PROPAGATION EN DIMENSION 2.
C
C      HYPOTHESES  :   - ON CONSIDERE UN DOMAINE CARRE .
C      ----------      - LA SURFACE EST LIBRE.
C                      - ON CONSIDERE DES CONDITIONS ABSORBANTES DU SECOND
C                        ORDRE SUR LES BORDS  (cf. these CHALINDAR).
C                      - LE MILIEU EST HETEROGENE.
C
C
C      UTILISATION D'UN SCHEMA AUX DIFFERENCES FINIES D'ORDRE (2,4)
C      (ORDRE 2 EN TEMPS ET 4 EN ESPACE) COMME METHODE DE RESOLUTION :
C
C             - SCHEMA D'ORDRE (2,4) POUR LE DOMAINE INTERIEUR.
C             - SCHEMA D'ORDRE (2,2) POUR LE BORD INTERIEUR DU DOMAINE.
C             - CONDITIONS PARAXIALES D'ORDRE 2 POUR LE BORD DU DOMAINE.
C
C      ---------------------------------------------------------------



C      DECLARATION DE CONSTANTES
C      -------------------------
C      NPMAX      : NOMBRE DE POINTS MAXIMUM DU MAILLAGE SPATIAL
C      NTMAX      : NOMBRE MAXIMUM DE PAS DE TEMPS
C      NBTRAC   : NOMBRE DE TRACES SISMIQUES
C      TMAX        : TEMPS DE PRISE EN COMPTE DE LA FONCTION SOURCE (S)

      INTEGER    NPMAX 
      INTEGER    NTMAX 
      INTEGER    NBTRAC
      INTEGER    TMAX   
      REAL*8     PI     

      PARAMETER      (NPMAX     = 809)
      PARAMETER      (NTMAX     = 4000)
      PARAMETER      (NBTRAC  = 50)
      PARAMETER      (TMAX       = 1.0)
      PARAMETER      (PI         = 3.141592653589)


C      DECLARATION DE TABLEAUX
C      -----------------------
C      U      :    SOLUTION DE LA MODELISATION PAR EQUATION D'ONDE D'UN
C                  PHENOMENE DE PROPAGATION. UTILISATION D'UN SCHEMA AUX
C                  DIFFERENCES FINIES COMME METHODE DE RESOLUTION.
C
C                  U(.,.,KM) REPRESENTE U(t)
C                  U(.,.,KP) REPRESENTE U(t-1) et U(t+1)
C
C
C
C      V      :    CHAMP DE VITESSE CARACTERISTIQUE DU MILIEU.
C                  - LE TABLEAU MEMORISE LA CONSTANTE LIEE A LA VITESSE
C                         1/12*((V(i,j)*DELTAT/H)**2)
C                    POUR LES POINTS INTERIEURS DU DOMAINE.
C                  - LE TABLEAU MEMORISE LA CONSTANTE LIEE A LA VITESSE
C                         (V(i,j)*DELTAT/H)**2
C                    POUR LES POINTS CONSTITUANT LE BORD INTERNE DU DOMAINE
C                  - DANS LE CAS DES POINTS CONSTITUANT LES FRONTIERES
C                    E-W-S, LE TABLEAU CONTIENT LA MOYENNE HARMONIQUE
C                    DES VITESSES DES POINTS FRONTIERES ET DES POINTS
C                    CONNEXES A LA FRONTIERE.
C                  - DANS LE CAS DES POINTS CONSTITUANT LES COINS INFERIEURS
C                    DU DOMAINE, ET LES DEUX POINTS FRONTIERES CONNEXES
C                    AUX COINS,  LE TABLEAU CONTIENT LA MOYENNE HARMONIQUE
C                    DES VITESSES DES 4 POINTS CONNEXES AU POINT CONCERNE.
C                  - LES COINS SUPERIEURS SONT CONSIDERES COMME PARTIE
C                    DE LA SURFACE LIBRE.
C
C    B        :    TABLEAUX DE 3 VECTEURS CONTENANT LES CONSTANTES LIEES
C                  AUX EQUATIONS ASSOCIEES AUX BORDS.
C                       B1  =  1 - (1/(V'*DELTAT + H)) * (2*H + (V'*DELTAT)**2/H)
C                       B2  =  2*H / (V'*DELTAT + H)
C                       B3  =  (V'*DELTAT)*(V'*DELTAT) / 2*H*(V'*DELTAT + H)
C                  AVEC V': VITESSE HARMONIQUE SUR DEUX POINTS.
C
C                  DANS LE CAS PARTICULIER DES 3 POINTS COMPOSANT
C                  CHAQUE COIN E-S ET S-W, LES TABLEAUX B1 ET B2 CONTIENNENT 
C                  RESPECTIVEMENT LES CONSTANTES :
C                      B1   = 2*V'*DELTAT / ( 4*V'*DELTAT + 3*H)
C                      B2   = 3*H / (4*V'*DELTAT + 3*H)
C                  AVEC V': VITESSE HARMONIQUE SUR QUATRE POINTS.
C                  
C                  CODAGE :  B(.,1,1) <-  B1 EAST
C                            B(.,1,2) <-  B1 SOUTH
C                            B(.,1,3) <-  B1 WEST
C
C
C    UB       :    TABLEAU DE VECTEURS INTERMEDIAIRES UTILISES POUR LE CALCUL 
C                  DES BORDS E-S-W ; LE CODAGE EST LE MEME QUE POUR 
C                  LES VECTEURS B.
C
C    UINT    :     VECTEUR INTERMEDIAIRE UTILISE LORS DU CALCUL DE
C                  LA SOLUTION AUX BORDS
C
C

      REAL*8    U     (NPMAX+1,NPMAX,2)
      REAL*8    V     (NPMAX+1,NPMAX)
 
      REAL*8    B     (NPMAX+1,3,3)
      REAL*8    UB    (NPMAX+1,3)
      REAL*8    UINT  (NPMAX)

      REAL*8    SISMO (NBTRAC,NTMAX)

C     DECLARATION DE SCALAIRES
C     ------------------------
C     NP       : NOMBRE DE POINT SELON LA DIMENSION X DU MAILLAGE SPATIAL
C     NT       : NOMBRE DE PAS DE TEMPS DE LA SIMULATION
C     DELTAT   : INTERVALLE DE TEMPS               (0.0005 S)
C     H        : INTERVALLE D'ESPACE               (1.5    M)
C     F        : FREQUENCE DE LA SOURCE            (30     HERTZ)
C     IS,JS    : COORDONNEES DE LA SOURCE            
C
C     KM,KP    : POINTEURS PERMETTANT DE PERMUTER LES PLANS ESPACE.
C     I,J,K,N  : INDICES DE BOUCLES
C     Wi       : VARIABLES DE TRAVAIL
C     G0       : INTENSITE DE LA SOURCE A L'INSTANT t
C     TINIT,
C     TFIN,
C     TMESUR   : COMPTEURS DE GESTION DU TEMPS
C     TiCPU    : COMPTEURS DE GESTION DU TEMPS CPU
C     TiELAP   : COMPTEURS DE GESTION DU TEMPS ELAPSED
C     NBOPi    : COMPTEURS DU NOMBRE D'OPERATIONS FLOTTANTES
C     MFLOPS   : NOMBRE DE MFLOPS MESURES
C     UMIN     : VALEUR MIN DE LA SOLUTION U AU DERNIER PAS DE TEMPS
C     UMAX     : VALEUR MAX DE LA SOLUTION U AU DERNIER PAS DE TEMPS
C     VMIN     : VALEUR MIN DE LA SOLUTION DU CHAMP DE VITESSE
C     VMAX     : VALEUR MAX DE LA SOLUTION DU CHAMP DE VITESSE
C     SISMIN   : VALEUR MIN DE LA SOLUTION DU SISMOGRAMME
C     SISMAX   : VALEUR MAX DE LA SOLUTION DU SISMOGRAMME
C
      INTEGER   NP
      INTEGER   NT
      REAL*8    DELTAT 
      REAL*8    H      
      REAL*8    F      
      INTEGER   IS,JS
      INTEGER   KM,KP
      INTEGER   I,J,K,N
      REAL*8    W
      REAL*8    C1,C2,C3

      REAL*8    G0
      REAL*8    TMESUR
      REAL*8    TINIT
      REAL*8    TFIN
      REAL*8    T1CPU
      REAL*8    T2CPU
      REAL*8    T3CPU
      REAL*8    NBOP1
      REAL*8    NBOP2
      REAL*8    MFLOPS
      REAL*8    UMIN, UMAX
      REAL*8    VMIN, VMAX
      REAL*8    SISMIN, SISMAX


C
C             CORPS DU PROGRAMME
C             ------------------

      CALL OPENFILE                                                     0001

C
C     ACQUISITION DES PARAMETRES DE LA MODELISATION
C     ---------------------------------------------

C     WRITE (6,'('' ENTRER LE NB DE POINTS DU MAILLAGE CARRE (NP) ? '',$)')
      READ (4, *) NP                                                    0002
C     WRITE (6,'('' ENTRER LE NB DE PAS DE TEMPS TOTAL (NT) ? '',$)')
      READ (4, *) NT                                                    0003
C     WRITE (6,'('' ENTRER LE PAS DE DISCR. EN ESPACE (H) ? '',$)')
      READ (4, *) H                                                     0004
C     WRITE (6,'('' ENTRER LE PAS DE DISCR. EN TEMPS (DELTAT) ? '',$)')
      READ (4, *) DELTAT                                                0005
C     WRITE (6,'('' ENTRER LA POSITION EN X DE LA SOURCE (JS) ? '',$)')
      READ (4, *) JS                                                    0006
C     WRITE (6,'('' ENTRER LA POSITION EN Z DE LA SOURCE (IS) ? '',$)')
      READ (4, *) IS                                                    0007
C     WRITE (6,'('' ENTRER LA FREQUENCE DE LA SOURCE (F) ? '',$)')
      READ (4, *) F                                                     0008




      WRITE (1, 1100)                                                   0009
      WRITE (1, 1110)                                                   0010
      WRITE (1, 1120)                                                   0011
      WRITE (1, 1130) NP, NP                                            0012
      WRITE (1, 1135) NT                                                0013
      WRITE (1, 1140) IS, JS                                            0014
      WRITE (1, 1171) H                                                 0015
      WRITE (1, 1170) DELTAT                                            0016
      WRITE (1, 1180) F                                                 0017

C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'STIMER', REAL*8 instead of REAL*4!
      CALL STIMER(W)                                                    0018
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0019
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0020
      TMESUR = TFIN-TINIT                                               0021
C////////////////END   FUNCTION TIMER/////////////////
C
C     INITIALISATION DES VARIABLES SCALAIRES
C     --------------------------------------
      KM = 1                                                            0022
      KP = 2                                                            0023
      G0 = 0.0D0                                                        0024


C     INITIALISATION DU CHAMP VITESSE
C     V(I,J)     = READ (Vi) (CAS D'UN MILIEU HETEROGENE)
C     -------------------------------------------------------

C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0025
C////////////////END   FUNCTION TIMER/////////////////


      READ (3, *) NP                                                    0026
      READ (3, *) NP                                                    0027
      DO 21 I = 1, NP                                                   0028
         DO 22 J = 1, NP                                                0029
            READ (3, *) V(I,J)                                          0030
22          CONTINUE                                                    0031
21       CONTINUE                                                       0032


C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0033
      T3CPU = TFIN-TINIT                                                0034
C////////////////END   FUNCTION TIMER/////////////////

      VMAX = V(1,1)                                                     0035
      VMIN = V(1,1)                                                     0036
      DO 112 I = 1, NP                                                  0037
         DO 122 J = 1, NP                                               0038
            IF (V(I,J).LT.VMIN) VMIN = V(I,J)                           0039
            IF (V(I,J).GT.VMAX) VMAX = V(I,J)                           0041
122         CONTINUE                                                    0043
112      CONTINUE                                                       0044
      WRITE (1, 1051) VMIN, VMAX                                        0045


C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0046
C////////////////END   FUNCTION TIMER/////////////////


C     INITIALISATION DE LA SOLUTION U
C     U(.,.,t=0) = U(.,.,t=1) = 0
C     ET DES ENREGISTREMENTS 
C     SISMO (T=1) = 0.0
C     ------------------------------

      DO 10 K = 1, 2                                                    0047
         DO 20 J = 1, NP                                                0048
            DO 30 I = 1, NP                                             0049
               U(I,J,K) = 0.0D0                                         0050
30             CONTINUE                                                 0051
20          CONTINUE                                                    0052
10       CONTINUE                                                       0053


      DO 84 I = 1, NBTRAC                                               0054
         SISMO(I,1) = 0.0D0                                             0055
84       CONTINUE                                                       0056




C     INITIALISATION DES CONSTANTES LIEES AUX COINS INFERIEURS
C            V(I,J)  <--  moyenne harmonique sur 4 points
C            B(I,.,.)<--  cf declarations
C     ET AUX BORDS E-S-W
C            V(I,J)  <--  moyenne harmonique sur 2 points
C            B(I,.,.)<--  cf declarations
C     --------------------------------------------------------


C     CAS DES TROIS POINTS DU COIN E-S
C     --------------------------------
      C1 = 4.0D0/(1.0D0/V(NP-1,NP)+1.0D0/V(NP-1,NP-1)+1.0D0/V(NP-2,NP   0057
     &)+1.0D0/V(NP-2,NP-1))                                             0057
      W = C1*DELTAT                                                     0058
      B(NP-1,1,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                           0059
      B(NP-1,1,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                           0060

      C2 = 4.0D0/(1.0D0/V(NP,NP)+1.0D0/V(NP,NP-1)+1.0D0/V(NP-1,NP)+     0061
     &1.0D0/V(NP-1,NP-1))                                               0061
      W = C2*DELTAT                                                     0062
      B(NP,2,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                             0063
      B(NP,2,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                             0064

      C3 = 4.0D0/(1.0D0/V(NP,NP)+1.0D0/V(NP,NP-1)+1.0D0/V(NP-1,NP)+     0065
     &1.0D0/V(NP-1,NP-1))                                               0065
      W = C3*DELTAT                                                     0066
      B(NP-1,2,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                           0067
      B(NP-1,2,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                           0068

      V(NP-1,NP) = C1                                                   0069
      V(NP,NP) = C2                                                     0070
      V(NP,NP-1) = C3                                                   0071

C     CAS DES 3 POINTS DU COIN W-S
C     ----------------------------
      C1 = 4.0D0/(1.0D0/V(NP,2)+1.0D0/V(NP,3)+1.0D0/V(NP-1,2)+1.0D0/V   0072
     &(NP-1,3))                                                         0072
      W = C1*DELTAT                                                     0073
      B(2,2,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                              0074
      B(2,2,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                              0075

      C2 = 4.0D0/(1.0D0/V(NP,1)+1.0D0/V(NP,2)+1.0D0/V(NP-1,1)+1.0D0/V   0076
     &(NP-1,2))                                                         0076
      W = C2*DELTAT                                                     0077
      B(1,2,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                              0078
      B(1,2,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                              0079

      C3 = 4.0D0/(1.0D0/V(NP-1,1)+1.0D0/V(NP-1,2)+1.0D0/V(NP-2,1)+      0080
     &1.0D0/V(NP-2,2))                                                  0080
      W = C3*DELTAT                                                     0081
      B(NP-1,3,1) = 2.0D0*W/(4.0D0*W+3.0D0*H)                           0082
      B(NP-1,3,2) = 3.0D0*H/(4.0D0*W+3.0D0*H)                           0083

      V(NP,2) = C1                                                      0084
      V(NP,1) = C2                                                      0085
      V(NP-1,1) = C3                                                    0086


C     CAS DES BORDS   E - S - W
C     -------------------------
      DO 41 I = 2, NP-2                                                 0087
         V(I,NP) = 2.0D0/(1.0D0/V(I,NP)+1.0D0/V(I,NP-1))                0088
         W = V(I,NP)*DELTAT                                             0089
         B(I,1,1) = 1.0D0-1.0D0/(W+H)*(2.0D0*H+W*W/H)                   0090
         B(I,1,2) = 2.0D0*H/(W+H)                                       0091
         B(I,1,3) = W*W/(2.0D0*H*(W+H))                                 0092
41       CONTINUE                                                       0093

      DO 42 I = 3, NP-2                                                 0094
         V(NP,I) = 2.0D0/(1.0D0/V(NP,I)+1.0D0/V(NP-1,I))                0095
         W = V(NP,I)*DELTAT                                             0096
         B(I,2,1) = 1.0D0-1.0D0/(W+H)*(2.0D0*H+W*W/H)                   0097
         B(I,2,2) = 2.0D0*H/(W+H)                                       0098
         B(I,2,3) = W*W/(2.0D0*H*(W+H))                                 0099
42       CONTINUE                                                       0100

      DO 43 I = 2, NP-2                                                 0101
         V(I,1) = 2.0D0/(1.0D0/V(I,1)+1.0D0/V(I,2))                     0102
         W = V(I,1)*DELTAT                                              0103
         B(I,3,1) = 1.0D0-1.0D0/(W+H)*(2.0D0*H+W*W/H)                   0104
         B(I,3,2) = 2.0D0*H/(W+H)                                       0105
         B(I,3,3) = W*W/(2.0D0*H*(W+H))                                 0106
43       CONTINUE                                                       0107

C
C     INITIALISATION DES CONSTANTES LIEES AUX BORDS INTERNES
C     ------------------------------------------------------
      DO 51 I = 3, NP-1                                                 0108
         V(I,2) = (V(I,2)*DELTAT/H)**2                                  0109
51       CONTINUE                                                       0110

      DO 52 I = 3, NP-1                                                 0111
         V(I,NP-1) = (V(I,NP-1)*DELTAT/H)**2                            0112
52       CONTINUE                                                       0113

      DO 53 I = 3, NP-2                                                 0114
         V(NP-1,I) = (V(NP-1,I)*DELTAT/H)**2                            0115
53       CONTINUE                                                       0116


C     INITIALISATION DES CONSTANTES LIEES AU DOMAINE INTERIEUR
C            V(I,J) <--  1/12*((V(I,J)*DELTAT/H)**2)
C     --------------------------------------------------------
      DO 40 J = 3, NP-2                                                 0117
         DO 50 I = 3, NP-2                                              0118
            V(I,J) = (V(I,J)*DELTAT/H)**2/12.0D0                        0119
50          CONTINUE                                                    0120
40       CONTINUE                                                       0121


C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0122
      T1CPU = TFIN-TINIT-TMESUR                                         0123
      WRITE (1, 1015) TMESUR                                            0124
      WRITE (1, 1010) T1CPU                                             0125

!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0126
C////////////////END   FUNCTION TIMER/////////////////

C     -----------------------------------------------------------
C     !     MODELISATION DE LA PROPAGATION DES ONDES            !
C     !               PAR EQUATION D'ONDE.                      !
C     !        RESOLUTION PAR DIFFERENCES FINIES.               !
C     -----------------------------------------------------------


C     ----------------------------
C     !     BOUCLE EN TEMPS      !
C     ----------------------------

      DO 70 N = 2, NT                                                   0127

C     PRISE EN COMPTE DE LA FONCTION SOURCE PENDANT UN TEMPS DE TMAX SEC.
C     Un = Un + SOURCE
C     ------------------------------------------------------------------
         W = F*(DBLE(N)*DELTAT-1.0D0/F)                                 0128
         IF (W**2.LT.DBLE(TMAX)) THEN                                   0129
            W = (W*PI)**2                                               0130
            G0 = (1.0D0-2.0D0*W)*DEXP(-W)                               0131
            U(IS,JS,KM) = U(IS,JS,KM)+G0*12.0D0*V(IS,JS)*H**2           0132
         ENDIF



C     --------------------------------------------------------
C     SAUVEGARDE DE LA FRANGE CONNEXE AUX BORDS POUR LE CALCUL
C     ULTERIEUR DE LA SOLUTION AUX BORDS
C     --------------------------------------------------------

         DO 71 I = 2, NP-1                                              0133
            UB(I,1) = U(I,NP-1,KP)                                      0134
            UB(I,2) = U(NP-1,I,KP)                                      0135
            UB(I,3) = U(I,2,KP)                                         0136
71          CONTINUE                                                    0137

C
C     ------------------------------------------------
C     SOLUTION SUR LE DOMAINE INTERIEUR
C     SCHEMA D'ORDRE 2 EN TEMPS ET D'ORDRE 4 EN ESPACE
C     ------------------------------------------------

         DO 80 J = 3, NP-2                                              0138

C     levee des dependances pour forcer la vectorisation.
C     kp et km sont toujours different.
C DIR$ IVDEP

            DO 90 I = 3, NP-2                                           0139

               U(I,J,KP) = 2.0D0*U(I,J,KM)-U(I,J,KP)-V(I,J)*(60.0D0*U   0140
     &         (I,J,KM)-16.0D0*(U(I+1,J,KM)+U(I-1,J,KM)+U(I,J-1,KM)+U   0140
     &         (I,J+1,KM))+U(I+2,J,KM)+U(I-2,J,KM)+U(I,J-2,KM)+U(I,J+   0140
     &         2,KM))                                                   0140

90             CONTINUE                                                 0141
80          CONTINUE                                                    0142

C
C     ------------------------------------------------
C     SOLUTION SUR LES BORDS INTERIEURS
C     SCHEMA D'ORDRE 2 EN TEMPS ET D'ORDRE 2 EN ESPACE
C     ------------------------------------------------

C DIR$ IVDEP
         DO 140 I = 3, NP-1                                             0143
            U(I,2,KP) = 2.0D0*U(I,2,KM)-U(I,2,KP)-V(I,2)*(4.0D0*U(I,2   0144
     &      ,KM)-(U(I+1,2,KM)+U(I-1,2,KM)+U(I,1,KM)+U(I,3,KM)))         0144
140         CONTINUE                                                    0145

C DIR$ IVDEP
         DO 141 I = 3, NP-1                                             0146
            U(I,NP-1,KP) = 2.0D0*U(I,NP-1,KM)-U(I,NP-1,KP)-V(I,NP-1)*   0147
     &      (4.0D0*U(I,NP-1,KM)-(U(I+1,NP-1,KM)+U(I-1,NP-1,KM)+U(I,NP   0147
     &      -2,KM)+U(I,NP,KM)))                                         0147
141         CONTINUE                                                    0148


C DIR$ IVDEP
         DO 142 I = 3, NP-2                                             0149
            U(NP-1,I,KP) = 2.0D0*U(NP-1,I,KM)-U(NP-1,I,KP)-V(NP-1,I)*   0150
     &      (4.0D0*U(NP-1,I,KM)-(U(NP,I,KM)+U(NP-2,I,KM)+U(NP-1,I-1,    0150
     &      KM)+U(NP-1,I+1,KM)))                                        0150
142         CONTINUE                                                    0151

C
C     --------------------------------------------------------
C     SOLUTION AU BORD EAST. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 92 I = 3, NP-2                                              0152
            UINT(I) = B(I,1,1)*(U(I,NP,KP)+U(I,NP-1,KP))-UB(I,1)+B(I,   0153
     &      1,2)*(U(I,NP,KM)+U(I,NP-1,KM))+B(I,1,3)*(U(I+1,NP-1,KP)+U   0153
     &      (I+1,NP,KP)+U(I-1,NP-1,KP)+U(I-1,NP,KP))                    0153
92          CONTINUE                                                    0154

         DO 93 I = 3, NP-2                                              0155
            U(I,NP,KP) = UINT(I)                                        0156
93          CONTINUE                                                    0157

C
C     --------------------------------------------------------
C     SOLUTION AU BORD SOUTH. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 94 I = 3, NP-2                                              0158
            UINT(I) = B(I,2,1)*(U(NP,I,KP)+U(NP-1,I,KP))-UB(I,2)+B(I,   0159
     &      2,2)*(U(NP,I,KM)+U(NP-1,I,KM))+B(I,2,3)*(U(NP-1,I+1,KP)+U   0159
     &      (NP,I+1,KP)+U(NP-1,I-1,KP)+U(NP,I-1,KP))                    0159
94          CONTINUE                                                    0160

         DO 95 I = 3, NP-2                                              0161
            U(NP,I,KP) = UINT(I)                                        0162
95          CONTINUE                                                    0163

C
C     --------------------------------------------------------
C     SOLUTION AU BORD WEST. CONDITIONS ABSORBANTES D'ORDRE 2.
C     --------------------------------------------------------

         DO 96 I = 3, NP-2                                              0164
            UINT(I) = B(I,3,1)*(U(I,1,KP)+U(I,2,KP))-UB(I,3)+B(I,3,2)   0165
     &      *(U(I,1,KM)+U(I,2,KM))+B(I,3,3)*(U(I+1,2,KP)+U(I+1,1,KP)+   0165
     &      U(I-1,2,KP)+U(I-1,1,KP))                                    0165
96          CONTINUE                                                    0166

         DO 97 I = 3, NP-2                                              0167
            U(I,1,KP) = UINT(I)                                         0168
97          CONTINUE                                                    0169



C      -----------------------------------------------
C      CALCUL DU BORD DU COIN 
C      U(NP-1,NP,KP) ,  U(NP,NP-1,KP) ET U(NP-1,NP,KP)
C      -----------------------------------------------

         U(NP-1,NP,KP) = B(NP-1,1,1)*(U(NP-1,NP-1,KP)+U(NP-2,NP,KP))+   0170
     &   B(NP-1,1,2)*U(NP-1,NP,KM)                                      0170

         U(NP,NP-1,KP) = B(NP-1,2,1)*(U(NP,NP-2,KP)+U(NP-1,NP-1,KP))+   0171
     &   B(NP-1,2,2)*U(NP,NP-1,KM)                                      0171

         U(NP,NP,KP) = B(NP,2,1)*(U(NP,NP-1,KP)+U(NP-1,NP,KP))+B(NP,2   0172
     &   ,2)*U(NP,NP,KM)                                                0172


C      -----------------------------------------------
C      CALCUL DU BORD DU COIN 
C      U(NP,2,KP) ,  U(NP-1,1,KP) ET U(NP,1,KP)
C      -----------------------------------------------

         U(NP,2,KP) = B(2,2,1)*(U(NP,3,KP)+U(NP-1,2,KP))+B(2,2,2)*U(    0173
     &   NP,2,KM)                                                       0173

         U(NP-1,1,KP) = B(NP-1,3,1)*(U(NP-1,2,KP)+U(NP-2,1,KP))+B(NP-   0174
     &   1,3,2)*U(NP-1,1,KM)                                            0174

         U(NP,1,KP) = B(1,2,1)*(U(NP-1,1,KP)+U(NP,2,KP))+B(1,2,2)*U(    0175
     &   NP,1,KM)                                                       0175


C
C     ENREGISTREMENT DU SISMOGRAMME
C     -----------------------------
         DO 81 I = 1, NBTRAC                                            0176
            SISMO(I,N) = U(IS,NP-NBTRAC+I,KP)                           0177
81          CONTINUE                                                    0178


C     PERMUTATION A CHAQUE ITERATION DES PLANS ESPACE
C     -----------------------------------------------
C
         KM = KP                                                        0179
         KP = 3-KP                                                      0180

70       CONTINUE                                                       0181

C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0182
      T2CPU = TFIN-TINIT-TMESUR                                         0183
      WRITE (1, 1000) T2CPU                                             0184

!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TINIT = DBLE(GETIME(W))                                           0185
C////////////////END   FUNCTION TIMER/////////////////

C
C     SORTIE FICHIER DU SISMOGRAMME
C     -----------------------------

      WRITE (2, *) NBTRAC                                               0186
      WRITE (2, *) NT                                                   0187
      DO 82 K = 1, NBTRAC                                               0188
         DO 83 J = 1, NT                                                0189
            WRITE (2, *) SISMO(K,J)                                     0190
83          CONTINUE                                                    0191
82       CONTINUE                                                       0192

C////////////////BEGIN FUNCTION TIMER/////////////////
!ERROR: invalid arg #1 to 'GETIME', REAL*8 instead of REAL*4!
      TFIN = DBLE(GETIME(W))                                            0193
      T3CPU = T3CPU+TFIN-TINIT-TMESUR                                   0194
      WRITE (1, 1020) T3CPU                                             0195
      WRITE (1, 1030) T1CPU+T2CPU+T3CPU                                 0196
C////////////////END   FUNCTION TIMER/////////////////

C
C     CALCUL DU NOMBRE DE MFLOPS
C     --------------------------

C     INITIALISATIONS
C     ---------------
      NBOP1 = DBLE(114.0+REAL(NP-3)*72.0+REAL((NP-4)*(NP-4))*4.0)       0197

C     RESOLUTION
C     ----------
      NBOP2 = DBLE(REAL(NT-1)*(REAL((NP-4)*(NP-4))*14.0+REAL(NP-3)*     0198
     &27.0+REAL(NP-4)*33.0+26.0))                                       0198


      MFLOPS = NBOP2/(T2CPU*1.0D06)                                     0199
      WRITE (1, 1060) MFLOPS                                            0200

      MFLOPS = (NBOP1+NBOP2)/((T1CPU+T2CPU)*1.0D06)                     0201
      WRITE (1, 1065) MFLOPS                                            0202

      MFLOPS = (NBOP1+NBOP2)/((T1CPU+T2CPU+T3CPU)*1.0D06)               0203
      WRITE (1, 1070) MFLOPS                                            0204


C
C     CALCUL DE STATISTIQUES SUR LE RESULTAT
C     --------------------------------------
      UMAX = U(1,1,KM)                                                  0205
      UMIN = U(1,1,KM)                                                  0206
      DO 110 J = 1, NP                                                  0207
         DO 120 I = 1, NP                                               0208
            IF (U(I,J,KM).LT.UMIN) UMIN = U(I,J,KM)                     0209
            IF (U(I,J,KM).GT.UMAX) UMAX = U(I,J,KM)                     0211
120         CONTINUE                                                    0213
110      CONTINUE                                                       0214
      WRITE (1, 1050) UMIN, UMAX                                        0215


      SISMAX = SISMO(1,1)                                               0216
      SISMIN = SISMO(1,1)                                               0217
      DO 111 I = 1, NBTRAC                                              0218
         DO 121 J = 1, NT                                               0219
            IF (SISMO(I,J).LT.SISMIN) SISMIN = SISMO(I,J)               0220
            IF (SISMO(I,J).GT.SISMAX) SISMAX = SISMO(I,J)               0222
121         CONTINUE                                                    0224
111      CONTINUE                                                       0225
      WRITE (1, 1055) SISMIN, SISMAX                                    0226



      WRITE (1, 1200)                                                   0227

      CLOSE (1)                                                         0228
      CLOSE (2)                                                         0229
      CLOSE (3)                                                         0230
      CLOSE (4)                                                         0231

      STOP                                                              0232


C     DECLARATIONS DE FORMATS DE SORTIE
C     ---------------------------------

1100  FORMAT(1X,'DEBUT DU PROGRAMME'//)                                 0233

1120  FORMAT(1X,'MODELISATION PAR EQUATION D"ONDES',/,1X,'SCHEMA D"ORDRE
     & 4 EN ESPACE ET 2 EN TEMPS'//)                                    0234
1130  FORMAT(1X,'TAILLE DU MAILLAGE NPXNP       : ',I4,'  X',I4)        0235
1135  FORMAT(1X,'NOMBRE DE PAS DE TEMPS         : ',I4)                 0236
1140  FORMAT(1X,'POSITION DE LA SOURCE          : (',I3,',',I3,')')     0237
1171  FORMAT(1X,'PAS DE DISCR. EN ESPACE (H)    : ',E12.5)              0238
1170  FORMAT(1X,'PAS DE DISCR. EN TEMPS (DELTAT): ',E12.5)              0239
1180  FORMAT(1X,'FREQUENCE DE LA SOURCE (F)     : ',E12.5)              0240
1051  FORMAT(1X,'MIN DE V:',E11.5,3X,'MAX DE V:  ',E11.5//)             0241
1200  FORMAT(1X,/,1X,'FIN DU PROGRAMME')                                0242

1000  FORMAT(1X,'TEMPS CPU DE LA RESOLUTION     (RESOL) : ',E15.5)      0243
1010  FORMAT(1X,'TEMPS CPU DES INITIALISATIONS   (INIT) : ',E15.5)      0244
1020  FORMAT(1X,'TEMPS CPU DES ENTREES/SORTIES    (E/S) : ',E15.5)      0245
1030  FORMAT(1X,'TEMPS CPU TOTAL       (RESOL+INIT+E/S) : ',E15.5//)    0246
1015  FORMAT(1X,'TEMPS CPU DE L"APPEL AU TIMER          : ',E15.5)      0247
1050  FORMAT(1X,'MIN DE U     :',E15.5,3X,'MAX DE U     : ',E15.5)      0248
1055  FORMAT(1X,'MIN DE SISMO :',E15.5,3X,'MAX DE SISMO : ',E15.5//)    0249
1060  FORMAT(1X,'MFLOPS CPU PARTIE VECTORIELLE  (RESOL) : ',E15.5)      0250
1065  FORMAT(1X,'MFLOPS CPU RESOLUTION     (RESOL+INIT) : ',E15.5)      0251
1070  FORMAT(1X,'MFLOPS CPU GLOBAL     (RESOL+INIT+E/S) : ',E15.5//)    0252




C/////////////////////////////////////////////////////////////////////
C
C   PARTIE SPECIFIQUE A CHAQUE MACHINE ET A CHAQUE MODELISATION
C 
C            - FORMATS DES COMMENTAIRES
C            - OUVERTURE DE FICHIERS
C            - FONCTIONS DE GESTION DES TIMERS
C
C/////////////////////////////////////////////////////////////////////


1110  FORMAT(1X,'*********************************************',/,1X,'  
     &     RESOLUTION SUR SUN 4                  ',/,1X,'     DOUBLE PRE
     &CISION (64 bits)              ',/,1X,'         VERSION STANDART   
     &                 ',/,1X,'                                         
     &    ',/,1X,'*********************************************'//)     0253

      END

C
C     OUVERTURE DES FICHIERS
C     ----------------------

      SUBROUTINE OPENFILE

      OPEN (UNIT=4,FILE='MODELES/param2.dat')                           0001

      OPEN (UNIT=3,FILE='MODELES/modele2.dat')                          0002

      OPEN (UNIT=1,FILE='SORTIES/stat2')                                0003

      OPEN (UNIT=2,FILE='SORTIES/sismo2')                               0004

      END

C
C     GESTION DU TIMER
C     ----------------

      SUBROUTINE STIMER (X)
C     INITIALISE LE TIMER - INUTILE SUR DE NOMBREUSES MACHINES
      END

      INTEGER FUNCTION TIME
      TIME = 0                                                          0001
      END
TYPE_CHECKER[GETIME] (put_summary) summary of 'GETIME': 0 errors, 0 convertions., 0 simplifications
TYPE_CHECKER[ONDE24] (put_summary) summary of 'ONDE24': 11 errors, 20 convertions., 113 simplifications
TYPE_CHECKER[OPENFILE] (put_summary) summary of 'OPENFILE': 0 errors, 0 convertions., 0 simplifications
TYPE_CHECKER[STIMER] (put_summary) summary of 'STIMER': 0 errors, 0 convertions., 0 simplifications
TYPE_CHECKER[TIME] (put_summary) summary of 'TIME': 0 errors, 0 convertions., 1 simplifications
