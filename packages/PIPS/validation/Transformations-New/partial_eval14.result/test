
"main" file

int main()
{
   int i;
   i = 3/2;
   printf("pos-pos 3/2=%d (must be 1) and check_mod_div %d\n", i, check_mod_div(3, 2));
   i = -3/2;
   printf("neg pos (-3)/2=%d (must be -1) and check_mod_div %d\n", i, check_mod_div(-3, 2));
   i = 3/(-2);
   printf("pos neg 3/(-2)=%d (must be -1) and check_mod_div %d\n", i, check_mod_div(3, -2));
   i = -3/(-2);
   printf("neg neg (-3)/(-2)=%d (must be 1) and check_mod_div %d\n", i, check_mod_div(-3, -2));
   return i;
}

Result before partial evaluation

pos-pos 3/2=1 (must be 1) and check_mod_div 1
neg pos (-3)/2=-1 (must be -1) and check_mod_div 1
pos neg 3/(-2)=-1 (must be -1) and check_mod_div 1
neg neg (-3)/(-2)=1 (must be 1) and check_mod_div 1

"main" file after partial evaluation

int main()
{
   int i;
   i = 1;
   printf("pos-pos 3/2=%d (must be 1) and check_mod_div %d\n", 1, check_mod_div(3, 2));
   i = -1;
   printf("neg pos (-3)/2=%d (must be -1) and check_mod_div %d\n", -1, check_mod_div(-3, 2));
   i = -1;
   printf("pos neg 3/(-2)=%d (must be -1) and check_mod_div %d\n", -1, check_mod_div(3, -2));
   i = 1;
   printf("neg neg (-3)/(-2)=%d (must be 1) and check_mod_div %d\n", 1, check_mod_div(-3, -2));
   return 1;
}

Result after partial evaluation

pos-pos 3/2=1 (must be 1) and check_mod_div 1
neg pos (-3)/2=-1 (must be -1) and check_mod_div 1
pos neg 3/(-2)=-1 (must be -1) and check_mod_div 1
neg neg (-3)/(-2)=1 (must be 1) and check_mod_div 1
