
PROPER  EFFECTS 

void call01(int *pi, tf_t *q)
{
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: pi
   *pi = 1;
//             <    is read   >: pi
//             <    is written>: pi
   /* pi is passed by value: pi++ does not generate a summary effect
        for call01 */
   pi++;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: q
   q->one = 1;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: q
   (q->two)[4] = 2;
}
/* #include<stdio.h> */
typedef struct two_fields {
   int one;
   int two[10];
} tf_t;

void call01(int *pi, tf_t *q);

int main();
int main()
{
   int i;
   tf_t s;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*

   call01(&i, &s);
}

POINTS-TO

//  {(pi,_pi_1[0],-Exact-);(q,_q_2[0],-Exact-)}
void call01(int *pi, tf_t *q)
{
//  {(pi,_pi_1[0],-Exact-);(q,_q_2[0],-Exact-)}
   *pi = 1;
//  {(pi,_pi_1[0],-Exact-);(q,_q_2[0],-Exact-)}
   /* pi is passed by value: pi++ does not generate a summary effect
        for call01 */
   pi++;
//  {(pi,*ANY_MODULE*:*ANYWHERE*_b0,-Exact-);(q,_q_2[0],-Exact-)}
   q->one = 1;
//  {(pi,*ANY_MODULE*:*ANYWHERE*_b0,-Exact-);(q,_q_2[0],-Exact-)}
   (q->two)[4] = 2;
}
//  {}
/* #include<stdio.h> */
//  {}
typedef struct two_fields {
   int one;
   int two[10];
} tf_t;

//  {}
void call01(int *pi, tf_t *q);

//  {}
int main();
//  {}
int main()
{
//  {}
   int i;
//  {}
   tf_t s;
//  {}

   call01(&i, &s);
}

PROPER  EFFECTS WITH POINTS TO

void call01(int *pi, tf_t *q)
{
//             <    is read   >: pi
//             <    is written>: _pi_1[0]
   *pi = 1;
//             <    is read   >: pi
//             <    is written>: pi
   /* pi is passed by value: pi++ does not generate a summary effect
        for call01 */
   pi++;
//             <    is read   >: q
//             <    is written>: _q_2[0].one
   q->one = 1;
//             <    is read   >: q
//             <    is written>: _q_2[0].two[4]
   (q->two)[4] = 2;
}
/* #include<stdio.h> */
typedef struct two_fields {
   int one;
   int two[10];
} tf_t;

void call01(int *pi, tf_t *q);

int main();
int main()
{
   int i;
   tf_t s;
//             <    is written>: i s.one s.two[4]

   call01(&i, &s);
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
