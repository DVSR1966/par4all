
PROPER  EFFECTS 

void assign03()
{
   char *malloc(int);
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: p _MALLOC_EFFECTS:_MALLOC_
   double *p = (double *) malloc(10*sizeof(double));
//             <    is written>: j
   int j = 2;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: j p

   p[j] = 1.;
}
void assign03();

void foo();
void foo()
{
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   assign03();
}

POINTS-TO

//  {}
void assign03()
{
//  {}
   char *malloc(int);
//  {}
   double *p = (double *) malloc(10*sizeof(double));
//  {(p,*HEAP*_l_4[0],-Exact-)}
   int j = 2;
//  {(p,*HEAP*_l_4[0],-Exact-)}

   p[j] = 1.;
}
//  {}
//  {}
void assign03();

//  {}
void foo();
//  {}
void foo()
{
//  {}
   assign03();
}

PROPER  EFFECTS WITH POINTS TO

void assign03()
{
   char *malloc(int);
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: p _MALLOC_EFFECTS:_MALLOC_
   double *p = (double *) malloc(10*sizeof(double));
//             <    is written>: j
   int j = 2;
//             <    is read   >: j p
//             <    is written>: *HEAP*_l_4[j]

   p[j] = 1.;
}
void assign03();

void foo();
void foo()
{
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   assign03();
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
