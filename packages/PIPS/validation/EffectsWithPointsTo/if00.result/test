
PROPER  EFFECTS 

int main()
{
   int **x, *x1, x2, *y, y1;
//             <    is written>: x2
   x2 = 0;
//             <    is written>: y1
   y1 = 1;
//             <    is written>: x1
   x1 = &x2;
//             <    is read   >: true

   if (true) {
//             <    is written>: x

      x = &x1;
//             <    is written>: y
      y = &y1;
   }
   else
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: x
      *x = &y;

   return 0;
}

POINTS-TO


// Points To: none

int main()
{

// Points To: none

   int **x, *x1, x2, *y, y1;

// Points To:
// x -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// x1 -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT
// y -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT

   x2 = 0;

// Points To:
// x -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// x1 -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT
// y -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT

   y1 = 1;

// Points To:
// x -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// x1 -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT
// y -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT

   x1 = &x2;

// Points To:
// x -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// x1 -> &x2 , EXACT
// y -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT


   if (true) {

// Points To:
// x -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// x1 -> &x2 , EXACT
// y -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT


      x = &x1;

// Points To:
// x -> &x1 , EXACT
// x1 -> &x2 , EXACT
// y -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT

      y = &y1;
   }
   else

// Points To:
// x -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// x1 -> &x2 , EXACT
// y -> &*ANY_MODULE*:*NOWHERE*_b1 , EXACT

      *x = &y;

// Points To:
// *ANY_MODULE*:*ANYWHERE*_b0 -> &y , MAY
// x -> &x1 , MAY
// x -> &*ANY_MODULE*:*NOWHERE*_b0 , MAY
// x1 -> &x2 , EXACT
// y -> &y1 , MAY
// y -> &*ANY_MODULE*:*NOWHERE*_b1 , MAY


   return 0;
}

PROPER  EFFECTS WITH POINTS TO

int main()
{
   int **x, *x1, x2, *y, y1;
//             <    is written>: x2
   x2 = 0;
//             <    is written>: y1
   y1 = 1;
//             <    is written>: x1
   x1 = &x2;
//             <    is read   >: true

   if (true) {
//             <    is written>: x

      x = &x1;
//             <    is written>: y
      y = &y1;
   }
   else
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: x
      *x = &y;

   return 0;
}

 *********************** Use-Def Chains *********************

	06 --> 15 with conflicts
		from <x1-W-EXACT> to <*ANY_MODULE*:*ANYWHERE*-W-MAY>
	05 --> 15 with conflicts
		from <y1-W-EXACT> to <*ANY_MODULE*:*ANYWHERE*-W-MAY>
	04 --> 15 with conflicts
		from <x2-W-EXACT> to <*ANY_MODULE*:*ANYWHERE*-W-MAY>

****************** End of Dependence Graph ******************
