
PROPER  EFFECTS 

int main()
{
   mystruct s1, *s2;
//             <    is written>: i
   int i = 1;
//             <    is written>: j
   int j = 2;
//             <    is written>: s2
   s2 = &s1;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: s2
   s2->a = &i;
//             <    is written>: s1.a
   s1.a = &j;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: s2
   (s2->b)[0] = &i;
   return 0;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   mystruct s1, *s2;

// Points To:
// s1.b[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.c -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s2 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   int i = 1;

// Points To:
// s1.b[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.c -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s2 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   int j = 2;

// Points To:
// s1.b[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.c -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s2 -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   s2 = &s1;

// Points To:
// s1.b[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.c -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s2 -> s1 , EXACT

   s2->a = &i;

// Points To:
// s1.b[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.a -> i , EXACT
// s1.c -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s2 -> s1 , EXACT

   s1.a = &j;

// Points To:
// s1.b[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.a -> j , EXACT
// s1.c -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s2 -> s1 , EXACT

   (s2->b)[0] = &i;

// Points To:
// s1.b[*] -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s1.a -> j , EXACT
// s1.c -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// s2[0].b[0] -> i , EXACT
// s2 -> s1 , EXACT

   return 0;
}

PROPER  EFFECTS WITH POINTS TO

int main()
{
   mystruct s1, *s2;
//             <    is written>: i
   int i = 1;
//             <    is written>: j
   int j = 2;
//             <    is written>: s2
   s2 = &s1;
//             <    is read   >: s2
//             <    is written>: s1.a
   s2->a = &i;
//             <    is written>: s1.a
   s1.a = &j;
//             <    is read   >: s2
//             <    is written>: s1.b[0]
   (s2->b)[0] = &i;
   return 0;
}

 *********************** Use-Def Chains *********************

	08 --> 09 with conflicts
		from <s2-W-EXACT> to <s2-R-EXACT>
	08 --> 11 with conflicts
		from <s2-W-EXACT> to <s2-R-EXACT>
	09 --> 10 with conflicts
		from <s1.a-W-EXACT> to <s1.a-W-EXACT>

****************** End of Dependence Graph ******************
