
PROPER  EFFECTS 

int main()
{
   mystruct s1, *s2;
//             <    is written>: i
   int i = 1;
//             <    is written>: j
   int j = 2;
//             <    is written>: s2
   s2 = &s1;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: s2
   s2->a = &i;
//             <    is written>: s1.a
   s1.a = &j;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: s2
   (s2->b)[0] = &i;
   return 0;
}

POINTS-TO

//  {}
int main()
{
//  {}
   mystruct s1, *s2;
//  {(s1[b][*],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[a],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[c],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s2,*ANY_MODULE*:*NOWHERE*_b1,
//   -Exact-)}
   int i = 1;
//  {(s1[b][*],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[a],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[c],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s2,*ANY_MODULE*:*NOWHERE*_b1,
//   -Exact-)}
   int j = 2;
//  {(s1[b][*],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[a],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[c],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s2,*ANY_MODULE*:*NOWHERE*_b1,
//   -Exact-)}
   s2 = &s1;
//  {(s1[b][*],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[a],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[c],
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s2,s1,-Exact-)}
   s2->a = &i;
//  {(s1[b][*],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[a],i,
//   -Exact-);(s1[c],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s2,s1,
//   -Exact-)}
   s1.a = &j;
//  {(s1[b][*],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[a],j,
//   -Exact-);(s1[c],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s2,s1,
//   -Exact-)}
   (s2->b)[0] = &i;
//  {(s1[b][*],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s1[a],j,
//   -Exact-);(s1[c],*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(s2[0][b][0],
//   i,-Exact-);(s2,s1,-Exact-)}
   return 0;
}

PROPER  EFFECTS WITH POINTS TO

int main()
{
   mystruct s1, *s2;
//             <    is written>: i
   int i = 1;
//             <    is written>: j
   int j = 2;
//             <    is written>: s2
   s2 = &s1;
//             <    is read   >: s2
//             <    is written>: s1.a
   s2->a = &i;
//             <    is written>: s1.a
   s1.a = &j;
//             <    is read   >: s2
//             <    is written>: s1.b[0]
   (s2->b)[0] = &i;
   return 0;
}

 *********************** Use-Def Chains *********************

	09 --> 10 with conflicts
		from <s1.a-W-EXACT> to <s1.a-W-EXACT>
	08 --> 11 with conflicts
		from <s2-W-EXACT> to <s2-R-EXACT>
	08 --> 09 with conflicts
		from <s2-W-EXACT> to <s2-R-EXACT>

****************** End of Dependence Graph ******************
