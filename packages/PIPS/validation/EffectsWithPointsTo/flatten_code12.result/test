
PROPER  EFFECTS 

void flatten_code12(void)
{
//             <    is read   >: foo_0
//             <    is written>: i
   int i = foo_0;
//             <    is written>: i

   for(i = 0; i <= 3; i += 1) {
      static int foo = 0;
//             <    is read   >: foo
//             <    is written>: foo

      foo++;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: foo stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      fprintf(stdout, "foo=%d\n", foo);
   }
}
int main()
{
//             <may be read   >: stdout stdout[0] __IO_EFFECTS:LUNS[1]
//                               flatten_code12:0`1`foo
//             <may be written>: stdout[0] __IO_EFFECTS:LUNS[1] 
//                               flatten_code12:0`1`foo
//             <    is read   >: foo_0
   flatten_code12();

   return 0;
}

POINTS-TO


// Points To: none

void flatten_code12(void)
{

// Points To: none

   int i = foo_0;

// Points To: none


   for(i = 0; i <= 3; i += 1) {

// Points To: none

      static int foo = 0;

// Points To: none


      foo++;

// Points To: none


      fprintf(stdout, "foo=%d\n", foo);
   }
}

// Points To: none

int main()
{

// Points To: none

   flatten_code12();

// Points To: none


   return 0;
}

PROPER  EFFECTS WITH POINTS TO

void flatten_code12(void)
{
//             <    is read   >: foo_0
//             <    is written>: i
   int i = foo_0;
//             <    is written>: i

   for(i = 0; i <= 3; i += 1) {
      static int foo = 0;
//             <    is read   >: foo
//             <    is written>: foo

      foo++;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: foo stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      fprintf(stdout, "foo=%d\n", foo);
   }
}
int main()
{
//             <may be read   >: stdout stdout[0] __IO_EFFECTS:LUNS[1]
//                               flatten_code12:0`1`foo
//             <may be written>: stdout[0] __IO_EFFECTS:LUNS[1] 
//                               flatten_code12:0`1`foo
//             <    is read   >: foo_0
   flatten_code12();

   return 0;
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
