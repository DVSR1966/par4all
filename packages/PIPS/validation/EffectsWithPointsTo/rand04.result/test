
PROPER  EFFECTS 

int main(void)
{
   int i1, i2;
//             <    is written>: pi1
   int *pi1 = &i1;
//             <    is written>: pi2
   int *pi2 = &i2;
   int **pp;
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   srand(time((void *) 0));
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
   if (alea())
//             <    is written>: pp
      pp = &pi1;
   else
//             <    is written>: pp
      pp = &pi2;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: pp
   *pp = (void *) 0;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: pi1 pi2 pp stdout 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%p %p %p\n", pp, pi1, pi2);
   return 0;
}
static int alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: r _RANDOM_EFFECTS:GEN_SEED
   int r = rand();
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: r stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%d\n", r);
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2==1;
}

POINTS-TO


// Points To: none

int main(void)
{

// Points To: none

   int i1, i2;

// Points To: none

   int *pi1 = &i1;

// Points To:
// pi1 -> i1 , EXACT

   int *pi2 = &i2;

// Points To:
// pi1 -> i1 , EXACT
// pi2 -> i2 , EXACT

   int **pp;

// Points To:
// pi1 -> i1 , EXACT
// pi2 -> i2 , EXACT
// pp -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   srand(time((void *) 0));

// Points To:
// pi1 -> i1 , EXACT
// pi2 -> i2 , EXACT
// pp -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   if (alea())

// Points To:
// pi1 -> i1 , EXACT
// pi2 -> i2 , EXACT
// pp -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

      pp = &pi1;
   else

// Points To:
// pi1 -> i1 , EXACT
// pi2 -> i2 , EXACT
// pp -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

      pp = &pi2;

// Points To:
// pi1 -> i1 , EXACT
// pi2 -> i2 , EXACT
// pp -> pi1 , MAY
// pp -> pi2 , MAY

   *pp = (void *) 0;

// Points To:
// pi1 -> *NULL_POINTER* , MAY
// pi1 -> i1 , MAY
// pi2 -> i2 , MAY
// pi2 -> *NULL_POINTER* , MAY
// pp -> pi2 , MAY
// pp -> pi1 , MAY

   printf("%p %p %p\n", pp, pi1, pi2);

// Points To:
// pi1 -> i1 , MAY
// pi1 -> *NULL_POINTER* , MAY
// pi2 -> i2 , MAY
// pi2 -> *NULL_POINTER* , MAY
// pp -> pi1 , MAY
// pp -> pi2 , MAY

   return 0;
}

// Points To: none

static int alea(void)
{

// Points To: none

   int r = rand();

// Points To: none

   printf("%d\n", r);

// Points To: none

   return rand()%2==1;
}

PROPER  EFFECTS WITH POINTS TO

int main(void)
{
   int i1, i2;
//             <    is written>: pi1
   int *pi1 = &i1;
//             <    is written>: pi2
   int *pi2 = &i2;
   int **pp;
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   srand(time((void *) 0));
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED 
//                               __IO_EFFECTS:LUNS[1]
   if (alea())
//             <    is written>: pp
      pp = &pi1;
   else
//             <    is written>: pp
      pp = &pi2;
//             <may be written>: pi1 pi2
//             <    is read   >: pp
   *pp = (void *) 0;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: pi1 pi2 pp stdout 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%p %p %p\n", pp, pi1, pi2);
   return 0;
}
static int alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: r _RANDOM_EFFECTS:GEN_SEED
   int r = rand();
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: r stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("%d\n", r);
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2==1;
}

 *********************** Use-Def Chains *********************

	24 --> 25 with conflicts
		from <pi2-W-MAY> to <pi2-R-EXACT>
		from <pi1-W-MAY> to <pi1-R-EXACT>
	23 --> 25 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	23 --> 24 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	21 --> 25 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	21 --> 24 with conflicts
		from <pp-W-EXACT> to <pp-R-EXACT>
	19 --> 20 with conflicts
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-R-EXACT>
	17 --> 25 with conflicts
		from <pi2-W-EXACT> to <pi2-R-EXACT>
	17 --> 24 with conflicts
		from <pi2-W-EXACT> to <pi2-W-MAY>
	16 --> 25 with conflicts
		from <pi1-W-EXACT> to <pi1-R-EXACT>
	16 --> 24 with conflicts
		from <pi1-W-EXACT> to <pi1-W-MAY>

****************** End of Dependence Graph ******************
