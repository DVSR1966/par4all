
PROPER  EFFECTS 

void fpointer01(char c, void *_stream, void (*my_fputc)(const char c, void *_stream), int *col, int indent, int *nbout)
{
//             <    is read   >: c
   if (c=='\n'||c=='\r')
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: col
      /* on change de ligne */
      
      *col = 0;
   else {
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
      /* indentation ok ? */
      
      while (*col<indent) {
         my_fputc(' ', _stream);
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
         (*nbout)++;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
         (*col)++;
      }
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*

      (*col)++;
   }
   
   /* dans tous les cas il faut afficher le caractere passe */
   
   my_fputc(c, _stream);
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   (*nbout)++;
}

POINTS-TO


// Points To IN:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT


// Points To OUT:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

void fpointer01(char c, void *_stream, void (*my_fputc)(const char c, void *_stream), int *col, int indent, int *nbout)
{

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

   if (c=='\n'||c=='\r')

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

      /* on change de ligne */
      
      *col = 0;
   else {

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

      /* indentation ok ? */
      
      while (*col<indent) {

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

         my_fputc(' ', _stream);

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

         (*nbout)++;

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

         (*col)++;
      }

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT


      (*col)++;
   }

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

   
   /* dans tous les cas il faut afficher le caractere passe */
   
   my_fputc(c, _stream);

// Points To:
// _stream -> __stream_2[0] , EXACT
// col -> _col_4[0] , EXACT
// nbout -> _nbout_6[0] , EXACT

   (*nbout)++;
}

PROPER  EFFECTS WITH POINTS TO

void fpointer01(char c, void *_stream, void (*my_fputc)(const char c, void *_stream), int *col, int indent, int *nbout)
{
//             <    is read   >: c
   if (c=='\n'||c=='\r')
//             <    is read   >: col
//             <    is written>: _col_4[0]
      /* on change de ligne */
      
      *col = 0;
   else {
//             <    is read   >: _col_4[0] col indent
      /* indentation ok ? */
      
      while (*col<indent) {
         my_fputc(' ', _stream);
//             <    is read   >: _nbout_6[0] nbout
//             <    is written>: _nbout_6[0]
         (*nbout)++;
//             <    is read   >: _col_4[0] col
//             <    is written>: _col_4[0]
         (*col)++;
      }
//             <    is read   >: _col_4[0] col
//             <    is written>: _col_4[0]

      (*col)++;
   }
   
   /* dans tous les cas il faut afficher le caractere passe */
   
   my_fputc(c, _stream);
//             <    is read   >: _nbout_6[0] nbout
//             <    is written>: _nbout_6[0]
   (*nbout)++;
}

 *********************** Use-Def Chains *********************

	12 --> 18 with conflicts
		from <_col_4[0]-W-EXACT> to <_col_4[0]-R-EXACT>
	12 --> 22 with conflicts
		from <_col_4[0]-W-EXACT> to <_col_4[0]-W-EXACT>
		from <_col_4[0]-W-EXACT> to <_col_4[0]-R-EXACT>
	12 --> 25 with conflicts
		from <_col_4[0]-W-EXACT> to <_col_4[0]-W-EXACT>
		from <_col_4[0]-W-EXACT> to <_col_4[0]-R-EXACT>
	18 --> 22 with conflicts
		from <_col_4[0]-R-EXACT> to <_col_4[0]-W-EXACT>
	18 --> 25 with conflicts
		from <_col_4[0]-R-EXACT> to <_col_4[0]-W-EXACT>
	21 --> 21 with conflicts
		from <_nbout_6[0]-W-EXACT> to <_nbout_6[0]-W-EXACT>
		from <_nbout_6[0]-W-EXACT> to <_nbout_6[0]-R-EXACT>
		from <_nbout_6[0]-R-EXACT> to <_nbout_6[0]-W-EXACT>
	21 --> 31 with conflicts
		from <_nbout_6[0]-W-EXACT> to <_nbout_6[0]-W-EXACT>
		from <_nbout_6[0]-W-EXACT> to <_nbout_6[0]-R-EXACT>
		from <_nbout_6[0]-R-EXACT> to <_nbout_6[0]-W-EXACT>
	22 --> 22 with conflicts
		from <_col_4[0]-W-EXACT> to <_col_4[0]-W-EXACT>
		from <_col_4[0]-W-EXACT> to <_col_4[0]-R-EXACT>
		from <_col_4[0]-R-EXACT> to <_col_4[0]-W-EXACT>
	22 --> 25 with conflicts
		from <_col_4[0]-W-EXACT> to <_col_4[0]-W-EXACT>
		from <_col_4[0]-W-EXACT> to <_col_4[0]-R-EXACT>
		from <_col_4[0]-R-EXACT> to <_col_4[0]-W-EXACT>

****************** End of Dependence Graph ******************
