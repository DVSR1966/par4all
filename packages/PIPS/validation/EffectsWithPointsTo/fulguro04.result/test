
PROPER  EFFECTS 

void flgr1d_arith_add_fgINT32(FLGR_Data1D *data1, FLGR_Data1D *data2)
{

//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <    is written>: psrc1
   fgINT32 *psrc1 = (fgINT32 *) data1->array;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <    is written>: psrc2
   fgINT32 *psrc2 = (fgINT32 *) data2->array;

   return;
}

POINTS-TO


// Points To IN:
// data1 -> _data1_1 , EXACT
// data2 -> _data2_2 , EXACT


// Points To OUT:
// _data1_1.array -> _data1_1_1 , EXACT
// _data2_2.array -> _data2_2_2 , EXACT

void flgr1d_arith_add_fgINT32(FLGR_Data1D *data1, FLGR_Data1D *data2)
{


// Points To:
// data1 -> _data1_1 , EXACT
// data2 -> _data2_2 , EXACT

   fgINT32 *psrc1 = (fgINT32 *) data1->array;

// Points To:
// _data1_1.array -> _data1_1_1 , EXACT
// data1 -> _data1_1 , EXACT
// data2 -> _data2_2 , EXACT
// psrc1 -> _data1_1_1 , EXACT

   fgINT32 *psrc2 = (fgINT32 *) data2->array;

// Points To:
// _data1_1.array -> _data1_1_1 , EXACT
// _data2_2.array -> _data2_2_2 , EXACT
// data1 -> _data1_1 , EXACT
// data2 -> _data2_2 , EXACT
// psrc1 -> _data1_1_1 , EXACT
// psrc2 -> _data2_2_2 , EXACT


   return;
}

PROPER  EFFECTS WITH POINTS TO

void flgr1d_arith_add_fgINT32(FLGR_Data1D *data1, FLGR_Data1D *data2)
{

//             <    is read   >: _data1_1.array data1
//             <    is written>: psrc1
   fgINT32 *psrc1 = (fgINT32 *) data1->array;
//             <    is read   >: _data2_2.array data2
//             <    is written>: psrc2
   fgINT32 *psrc2 = (fgINT32 *) data2->array;

   return;
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
