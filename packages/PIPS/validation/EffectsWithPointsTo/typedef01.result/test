
PROPER  EFFECTS 

void compute()
{
   int i, j;
//             <    is written>: i

   for(i = 1; i <= 62; i += 1)
//             <    is written>: j
      for(j = 1; j <= 62; j += 1)
//             <    is read   >: i j
//             <    is written>: tab[i][j]
         tab[i][j] = i*j;
}
int main(int argc, char *argv[])
{
   int t;
//             <    is written>: t
   
   
   for(t = 0; t <= 63; t += 1)
//             <may be written>: tab[*][*]
      compute();
   
   
   return 0;
}

POINTS-TO

//  {}
void compute()
{
//  {}
   int i, j;
//  {}

   for(i = 1; i <= 62; i += 1)
//  {}
      for(j = 1; j <= 62; j += 1)
//  {}
         tab[i][j] = i*j;
}
//  {(argv[*],_argv_1[0],-Exact-)}
int main(int argc, char *argv[])
{
//  {(argv[*],_argv_1[0],-Exact-)}
   int t;
//  {(argv[*],_argv_1[0],-Exact-)}
   
   
   for(t = 0; t <= 63; t += 1)
//  {(argv[*],_argv_1[0],-Exact-)}
      compute();
//  {(argv[*],_argv_1[0],-Exact-)}
   
   
   return 0;
}

PROPER  EFFECTS WITH POINTS TO

void compute()
{
   int i, j;
//             <    is written>: i

   for(i = 1; i <= 62; i += 1)
//             <    is written>: j
      for(j = 1; j <= 62; j += 1)
//             <    is read   >: i j
//             <    is written>: tab[i][j]
         tab[i][j] = i*j;
}
int main(int argc, char *argv[])
{
   int t;
//             <    is written>: t
   
   
   for(t = 0; t <= 63; t += 1)
//             <may be written>: tab[*][*]
      compute();
   
   
   return 0;
}

 *********************** Use-Def Chains *********************

	29 --> 29 with conflicts
		from <tab[*][*]-W-MAY> to <tab[*][*]-W-MAY>

****************** End of Dependence Graph ******************
