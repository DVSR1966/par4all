
PROPER  EFFECTS 

int main()
{
   int *a, *b, c, d, i;
//             <    is written>: c
   c = 0;
//             <    is written>: d
   d = 1;
//             <    is written>: i
   i = 2;
//             <    is written>: b
   b = &c;
//             <    is read   >: i
   do {
//             <    is read   >: i
//             <    is written>: i
      i = i+1;
//             <    is read   >: b
//             <    is written>: a
      a = b;
//             <    is written>: b
      b = &d;
   }
   while (i<5);

   return 0;
}

POINTS-TO


// Points To: none

int main()
{

// Points To: none

   int *a, *b, c, d, i;

// Points To:
// a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// b -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   c = 0;

// Points To:
// a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// b -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   d = 1;

// Points To:
// a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// b -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   i = 2;

// Points To:
// a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// b -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   b = &c;

// Points To:
// a -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// b -> c , EXACT

   do {

// Points To:
// a -> d , MAY
// a -> c , MAY
// b -> d , EXACT

      i = i+1;

// Points To:
// a -> d , MAY
// a -> c , MAY
// b -> d , EXACT

      a = b;

// Points To:
// a -> d , MAY
// a -> c , MAY
// b -> d , EXACT

      b = &d;
   }
   while (i<5);

// Points To:
// a -> d , MAY
// a -> c , MAY
// b -> d , EXACT


   return 0;
}

PROPER  EFFECTS WITH POINTS TO

int main()
{
   int *a, *b, c, d, i;
//             <    is written>: c
   c = 0;
//             <    is written>: d
   d = 1;
//             <    is written>: i
   i = 2;
//             <    is written>: b
   b = &c;
//             <    is read   >: i
   do {
//             <    is read   >: i
//             <    is written>: i
      i = i+1;
//             <    is read   >: b
//             <    is written>: a
      a = b;
//             <    is written>: b
      b = &d;
   }
   while (i<5);

   return 0;
}

 *********************** Use-Def Chains *********************

	12 --> 12 with conflicts
		from <b-W-EXACT> to <b-W-EXACT>
	12 --> 11 with conflicts
		from <b-W-EXACT> to <b-R-EXACT>
	11 --> 12 with conflicts
		from <b-R-EXACT> to <b-W-EXACT>
	11 --> 11 with conflicts
		from <a-W-EXACT> to <a-W-EXACT>
	10 --> 10 with conflicts
		from <i-W-EXACT> to <i-W-EXACT>
		from <i-W-EXACT> to <i-R-EXACT>
		from <i-R-EXACT> to <i-W-EXACT>
	13 --> 10 with conflicts
		from <i-R-EXACT> to <i-W-EXACT>
	07 --> 12 with conflicts
		from <b-W-EXACT> to <b-W-EXACT>
	07 --> 11 with conflicts
		from <b-W-EXACT> to <b-R-EXACT>
	06 --> 10 with conflicts
		from <i-W-EXACT> to <i-W-EXACT>
		from <i-W-EXACT> to <i-R-EXACT>
	06 --> 13 with conflicts
		from <i-W-EXACT> to <i-R-EXACT>

****************** End of Dependence Graph ******************
