
Points-to for call30


// Points To IN:
// q -> *NULL_POINTER* , MAY
// q -> _q_1[0] , MAY


// Points To OUT:
// q -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

void call30(int *q)
{

// Points To:
// q -> *NULL_POINTER* , MAY
// q -> _q_1[0] , MAY

   free(q);

// Points To:
// q -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   return;
}

Points-to for "call30_caller"


// Points To IN:
// qq -> *NULL_POINTER* , MAY
// qq -> _qq_1[0] , MAY


// Points To OUT:
// qq -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

int call30_caller(int *qq)
{

// Points To: none

   int i = 0;

// Points To:
// qq -> *NULL_POINTER* , MAY
// qq -> _qq_1[0] , MAY

   call30(qq);

// Points To:
// qq -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   return i++;
}

Proper effects with points-to for "call30_caller"

int call30_caller(int *qq)
{
//             <    is written>: i
   int i = 0;
//             <    is read   >: qq _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   call30(qq);
//             <    is read   >: i
//             <    is written>: i
   return i++;
}

Cumulated effects with points-to for "call30_caller"

int call30_caller(int *qq)
{
//             <    is written>: i
   int i = 0;
//             <    is read   >: qq _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_
   call30(qq);
//             <    is read   >: i
//             <    is written>: i
   return i++;
}
