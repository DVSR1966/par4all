
WITHOUT TRANSFORMER LISTS
=========================


TRANSFORMERS


//  T() {0==-1}

void run(void)
{

//  T(x,y) {}

   int x, y;

//  T(x,y) {x==0, y==0}

   x = y = 0;

//  T() {x==0, y==0}


   if (x==4&&y==2)

//  T() {0==-1}

      checking_error();

//  T(x,y) {x#init+y<=x+y#init, y<=x, 0<=y, y#init<=y}

   while (flip()) {

//  T(x) {x#init<=x}

      while (flip())

//  T(x) {x==x#init+1, x<=y+1, y<=1}

         if (y<=1&&y>x-1) {

//  T(x) {x==x#init+1, x<=y+1, y<=1}

            x++;

//  T() {x<=y+1, y<=1}

            if (x==4&&y==2)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {}

            while (1)

//  T() {}

               ;

//  T(x,y) {x+y#init==x#init+y, y#init<=y}

      while (flip())

//  T(x,y) {x==x#init+1, y==y#init+1, x<=y+1, y<=1}

         if (y>=x-1&&y<1) {

//  T(x) {x==x#init+1, x<=y+2, y<=0}

            x++;

//  T(y) {y==y#init+1, x<=y+1, y<=1}

            y++;

//  T() {x<=y+1, y<=1}

            if (x==4&&y==2)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {}

            while (1)

//  T() {}

               ;
   }

//  T() {0==-1}

   if (flip()) {

//  T(x) {x==x#init+1, x==y+2, 2<=x, x<=3}

      if (y<=1&&y==x-1) {

//  T(x) {x==x#init+1, x==y+2, 2<=x, x<=3}

         x++;

//  T() {x==y+2, 2<=x, x<=3}

         if (x==4&&y==2)

//  T() {0==-1}

            checking_error();
      }
      else

//  T() {y<=x, 0<=y}

         while (1)

//  T() {y<=x, 0<=y}

            ;

//  T(x) {x#init==y+2, x#init<=x, 2<=x#init, x#init<=3}

      while (1)

//  T(x) {x==x#init+1, 0<=y, y<=1}

         if (y<=1) {

//  T(x) {x==x#init+1, 0<=y, y<=1}

            x++;

//  T() {0<=y, y<=1}

            if (x==4&&y==2)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {0==-1}

            while (1)

//  T() {0==-1}

               ;
   }
   else {

//  T(x,y) {x==x#init+1, y==2, y#init==1, 2<=x, x<=3}

      if (y>=x-1&&y==1) {

//  T(x) {x==x#init+1, y==1, 2<=x, x<=3}

         x++;

//  T(y) {y==2, y#init==1, 2<=x, x<=3}

         y++;

//  T() {y==2, 2<=x, x<=3}

         if (x==4&&y==2)

//  T() {0==-1}

            checking_error();
      }
      else

//  T() {y<=x, 0<=y}

         while (1)

//  T() {y<=x, 0<=y}

            ;

//  T(x,y) {x#init+y==x+2, y#init==2, 2<=x#init, x#init<=3, 2<=y}

      while (1)

//  T(x,y) {x==x#init+1, y==y#init+1, x<=y+1}

         if (y>=x-1) {

//  T(x) {x==x#init+1, x<=y+2}

            x++;

//  T(y) {y==y#init+1, x<=y+1}

            y++;

//  T() {x<=y+1}

            if (x==4&&y==2)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {y+2<=x}

            while (1)

//  T() {y+2<=x}

               ;
   }
}

PRECONDITIONS


//  P() {}

void run(void)
{

//  P() {}

   int x, y;

//  P(x,y) {}

   x = y = 0;

//  P(x,y) {x==0, y==0}


   if (x==4&&y==2)

//  P() {0==-1}

      checking_error();

//  P(x,y) {x==0, y==0}

   while (flip()) {

//  P(x,y) {y<=x, 0<=y}

      while (flip())

//  P(x,y) {y<=x, 0<=y}

         if (y<=1&&y>x-1) {

//  P(x,y) {x==y, 0<=x, x<=1}

            x++;

//  P(x,y) {x==y+1, 1<=x, x<=2}

            if (x==4&&y==2)

//  P() {0==-1}

               checking_error();
         }
         else

//  P(x,y) {y+2<=2x, y<=x, 0<=y}

            while (1)

//  P(x,y) {y+2<=2x, y<=x, 0<=y}

               ;

//  P(x,y) {y<=x, 0<=y}

      while (flip())

//  P(x,y) {y<=x, 0<=y}

         if (y>=x-1&&y<1) {

//  P(x,y) {y==0, 0<=x, x<=1}

            x++;

//  P(x,y) {y==0, 1<=x, x<=2}

            y++;

//  P(x,y) {y==1, 1<=x, x<=2}

            if (x==4&&y==2)

//  P() {0==-1}

               checking_error();
         }
         else

//  P(x,y) {2<=x+y, y<=x, 0<=y}

            while (1)

//  P(x,y) {2<=x+y, y<=x, 0<=y}

               ;
   }

//  P(x,y) {y<=x, 0<=y}

   if (flip()) {

//  P(x,y) {y<=x, 0<=y}

      if (y<=1&&y==x-1) {

//  P(x,y) {x==y+1, 1<=x, x<=2}

         x++;

//  P(x,y) {x==y+2, 2<=x, x<=3}

         if (x==4&&y==2)

//  P() {0==-1}

            checking_error();
      }
      else

//  P(x,y) {y<=x, 0<=y}

         while (1)

//  P(x,y) {y<=x, 0<=y}

            ;

//  P(x,y) {x==y+2, 2<=x, x<=3}

      while (1)

//  P(x,y) {y+2<=x, 0<=y, y<=1}

         if (y<=1) {

//  P(x,y) {y+2<=x, 0<=y, y<=1}

            x++;

//  P(x,y) {y+3<=x, 0<=y, y<=1}

            if (x==4&&y==2)

//  P() {0==-1}

               checking_error();
         }
         else

//  P() {0==-1}

            while (1)

//  P() {0==-1}

               ;
   }
   else {

//  P(x,y) {y<=x, 0<=y}

      if (y>=x-1&&y==1) {

//  P(x,y) {y==1, 1<=x, x<=2}

         x++;

//  P(x,y) {y==1, 2<=x, x<=3}

         y++;

//  P(x,y) {y==2, 2<=x, x<=3}

         if (x==4&&y==2)

//  P() {0==-1}

            checking_error();
      }
      else

//  P(x,y) {y<=x, 0<=y}

         while (1)

//  P(x,y) {y<=x, 0<=y}

            ;

//  P(x,y) {y==2, 2<=x, x<=3}

      while (1)

//  P(x,y) {y<=x, x<=y+1, 2<=y}

         if (y>=x-1) {

//  P(x,y) {y<=x, x<=y+1, 2<=y}

            x++;

//  P(x,y) {y+1<=x, x<=y+2, 2<=y}

            y++;

//  P(x,y) {y<=x, x<=y+1, 3<=y}

            if (x==4&&y==2)

//  P() {0==-1}

               checking_error();
         }
         else

//  P() {0==-1}

            while (1)

//  P() {0==-1}

               ;
   }
}

WITH TRANSFORMER LISTS
======================


TRANSFORMERS


//  T() {0==-1}

void run(void)
{

//  T(x,y) {}

   int x, y;

//  T(x,y) {x==0, y==0}

   x = y = 0;

//  T() {x==0, y==0}


   if (x==4&&y==2)

//  T() {0==-1}

      checking_error();

//  T(x,y) {x#init+y<=x+y#init, y<=x, 0<=y, y#init<=y}

   while (flip()) {

//  T(x) {x#init<=x}

      while (flip())

//  T(x) {x==x#init+1, x<=y+1, y<=1}

         if (y<=1&&y>x-1) {

//  T(x) {x==x#init+1, x<=y+1, y<=1}

            x++;

//  T() {x<=y+1, y<=1}

            if (x==4&&y==2)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {}

            while (1)

//  T() {}

               ;

//  T(x,y) {x+y#init==x#init+y, y#init<=y}

      while (flip())

//  T(x,y) {x==x#init+1, y==y#init+1, x<=y+1, y<=1}

         if (y>=x-1&&y<1) {

//  T(x) {x==x#init+1, x<=y+2, y<=0}

            x++;

//  T(y) {y==y#init+1, x<=y+1, y<=1}

            y++;

//  T() {x<=y+1, y<=1}

            if (x==4&&y==2)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {}

            while (1)

//  T() {}

               ;
   }

//  T() {0==-1}

   if (flip()) {

//  T(x) {x==x#init+1, x==y+2, 2<=x, x<=3}

      if (y<=1&&y==x-1) {

//  T(x) {x==x#init+1, x==y+2, 2<=x, x<=3}

         x++;

//  T() {x==y+2, 2<=x, x<=3}

         if (x==4&&y==2)

//  T() {0==-1}

            checking_error();
      }
      else

//  T() {y<=x, 0<=y}

         while (1)

//  T() {y<=x, 0<=y}

            ;

//  T(x) {x#init==y+2, x#init<=x, 2<=x#init, x#init<=3}

      while (1)

//  T(x) {x==x#init+1, 0<=y, y<=1}

         if (y<=1) {

//  T(x) {x==x#init+1, 0<=y, y<=1}

            x++;

//  T() {0<=y, y<=1}

            if (x==4&&y==2)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {0==-1}

            while (1)

//  T() {0==-1}

               ;
   }
   else {

//  T(x,y) {x==x#init+1, y==2, y#init==1, 2<=x, x<=3}

      if (y>=x-1&&y==1) {

//  T(x) {x==x#init+1, y==1, 2<=x, x<=3}

         x++;

//  T(y) {y==2, y#init==1, 2<=x, x<=3}

         y++;

//  T() {y==2, 2<=x, x<=3}

         if (x==4&&y==2)

//  T() {0==-1}

            checking_error();
      }
      else

//  T() {y<=x, 0<=y}

         while (1)

//  T() {y<=x, 0<=y}

            ;

//  T(x,y) {x#init+y==x+2, y#init==2, 2<=x#init, x#init<=3, 2<=y}

      while (1)

//  T(x,y) {x==x#init+1, y==y#init+1, x<=y+1}

         if (y>=x-1) {

//  T(x) {x==x#init+1, x<=y+2}

            x++;

//  T(y) {y==y#init+1, x<=y+1}

            y++;

//  T() {x<=y+1}

            if (x==4&&y==2)

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {y+2<=x}

            while (1)

//  T() {y+2<=x}

               ;
   }
}

PRECONDITIONS


//  P() {}

void run(void)
{

//  P() {}

   int x, y;

//  P(x,y) {}

   x = y = 0;

//  P(x,y) {x==0, y==0}


   if (x==4&&y==2)

//  P() {0==-1}

      checking_error();

//  P(x,y) {x==0, y==0}

   while (flip()) {

//  P(x,y) {y<=x, x<=y+1, 0<=y, y<=1}

      while (flip())

//  P(x,y) {y<=x, x<=y+1, 0<=y, y<=1}

         if (y<=1&&y>x-1) {

//  P(x,y) {x==y, 0<=x, x<=1}

            x++;

//  P(x,y) {x==y+1, 1<=x, x<=2}

            if (x==4&&y==2)

//  P() {0==-1}

               checking_error();
         }
         else

//  P(x,y) {x==y+1, 1<=x, x<=2}

            while (1)

//  P(x,y) {x==y+1, 1<=x, x<=2}

               ;

//  P(x,y) {y<=x, x<=y+1, 0<=y, y<=1}

      while (flip())

//  P(x,y) {y<=x, x<=y+1, 0<=y, y<=1}

         if (y>=x-1&&y<1) {

//  P(x,y) {y==0, 0<=x, x<=1}

            x++;

//  P(x,y) {y==0, 1<=x, x<=2}

            y++;

//  P(x,y) {y==1, 1<=x, x<=2}

            if (x==4&&y==2)

//  P() {0==-1}

               checking_error();
         }
         else

//  P(x,y) {y==1, 1<=x, x<=2}

            while (1)

//  P(x,y) {y==1, 1<=x, x<=2}

               ;
   }

//  P(x,y) {y<=x, x<=y+1, 0<=y, y<=1}

   if (flip()) {

//  P(x,y) {y<=x, x<=y+1, 0<=y, y<=1}

      if (y<=1&&y==x-1) {

//  P(x,y) {x==y+1, 1<=x, x<=2}

         x++;

//  P(x,y) {x==y+2, 2<=x, x<=3}

         if (x==4&&y==2)

//  P() {0==-1}

            checking_error();
      }
      else

//  P(x,y) {x==y, 0<=x, x<=1}

         while (1)

//  P(x,y) {x==y, 0<=x, x<=1}

            ;

//  P(x,y) {x==y+2, 2<=x, x<=3}

      while (1)

//  P(x,y) {y+2<=x, 0<=y, y<=1}

         if (y<=1) {

//  P(x,y) {y+2<=x, 0<=y, y<=1}

            x++;

//  P(x,y) {y+3<=x, 0<=y, y<=1}

            if (x==4&&y==2)

//  P() {0==-1}

               checking_error();
         }
         else

//  P() {0==-1}

            while (1)

//  P() {0==-1}

               ;
   }
   else {

//  P(x,y) {y<=x, x<=y+1, 0<=y, y<=1}

      if (y>=x-1&&y==1) {

//  P(x,y) {y==1, 1<=x, x<=2}

         x++;

//  P(x,y) {y==1, 2<=x, x<=3}

         y++;

//  P(x,y) {y==2, 2<=x, x<=3}

         if (x==4&&y==2)

//  P() {0==-1}

            checking_error();
      }
      else

//  P(x,y) {y==0, 0<=x, x<=1}

         while (1)

//  P(x,y) {y==0, 0<=x, x<=1}

            ;

//  P(x,y) {y==2, 2<=x, x<=3}

      while (1)

//  P(x,y) {y<=x, x<=y+1, 2<=y}

         if (y>=x-1) {

//  P(x,y) {y<=x, x<=y+1, 2<=y}

            x++;

//  P(x,y) {y+1<=x, x<=y+2, 2<=y}

            y++;

//  P(x,y) {y<=x, x<=y+1, 3<=y}

            if (x==4&&y==2)

//  P() {0==-1}

               checking_error();
         }
         else

//  P() {0==-1}

            while (1)

//  P() {0==-1}

               ;
   }
}
