
Code with cumulated effects

int main(int argc, char **argv)
{
   int i;
   int j = 100;
//               <must be written>: i
   for(i = 0; i <= 99; i += 1)                                          /*0004*/
      ;
//               <must be written>: i
   for(i = 0; i <= 99; i += 1)                                          /*0007*/
      ;
//               <must be read   >: i
//               <must be written>: j
   //on attends qqch différent de "inconnu"
   j = i;                                                               /*0011*/
   return 0;                                                            /*0012*/
}

Parallelized code

int main(int argc, char **argv)
{
   int i;
   int j = 100;
   ;
   ;
   //on attends qqch différent de "inconnu"
   j = i;                                                               /*0011*/
   return 0;                                                            /*0012*/
}

Parallelized code seen as sequential

int main(int argc, char **argv)
{
   int i;
   int j = 100;
   ;
   ;
//               <must be read   >: i
//               <must be written>: j
   //on attends qqch différent de "inconnu"
   j = i;                                                               /*0011*/
   return 0;                                                            /*0012*/
}

Parallelized code with preconditions


//  P() {j==100}

int main(int argc, char **argv)
{
   int i;
   int j = 100;
   ;
   ;

//  P() {j==100}

   //on attends qqch différent de "inconnu"
   j = i;                                                               /*0011*/

//  P(j) {i==j}

   return 0;                                                            /*0012*/
}

