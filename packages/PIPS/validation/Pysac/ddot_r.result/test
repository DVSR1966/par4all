float ddot_r(int n, float b[n], float c[n])
{
   int i;
   float a = 0;
   for(i = 0; i <= n-1; i += 1)
      a += b[i]*c[i];
   return a;
}
float ddot_r(int n, float b[n], float c[n])
{
   //PIPS generated variable
   int LU_IND0;
   //PIPS generated variable
   float RED0[1], RED1[4], a0, a1, F_04;
   //PIPS generated variable
   int LU_IB00, LU_NUB00;
   //PIPS generated variable
   float a2;
   //PIPS generated variable
   v4sf vec00_0, vec10_0, vec20_0, vec30_0;
   a2 = 0;
   LU_NUB00 = n;
   RED0[0] = 0.000000;
   LU_IB00 = MOD(LU_NUB00, 4);
   for(LU_IND0 = 0; LU_IND0 <= LU_IB00-1; LU_IND0 += 1) {
      F_04 = b[LU_IND0]*c[LU_IND0];
      RED0[0] = RED0[0]+F_04;
   }
   a1 = RED0[0]+a2;
   RED1[0] = 0.000000;
   RED1[1] = 0.000000;
   RED1[2] = 0.000000;
   RED1[3] = 0.000000;
   SIMD_LOAD_V4SF(vec30_0, &RED1[0]);
   for(LU_IND0 = LU_IB00; LU_IND0 <= LU_NUB00-1; LU_IND0 += 4) {
      //PIPS:SAC generated v4sf vector(s)
      SIMD_LOAD_V4SF(vec20_0, &c[LU_IND0]);
      SIMD_LOAD_V4SF(vec10_0, &b[LU_IND0]);
      SIMD_MULPS(vec00_0, vec10_0, vec20_0);
      SIMD_ADDPS(vec30_0, vec30_0, vec00_0);
   }
   SIMD_STORE_V4SF(vec30_0, &RED1[0]);
   a0 = RED1[3]+RED1[2]+RED1[1]+RED1[0]+a1;
   return a0;
}
