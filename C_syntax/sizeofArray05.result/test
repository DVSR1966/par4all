foo

Declarations for module foo with type () -> void
Variable list:

Declared entity TOP-LEVEL:*STATIC*	with type area with size 4
Declared entity foo:*DYNAMIC*	with type area with size 0
Declared entity foo:*STACK*	with type area with size 0
Declared entity foo:*STATIC*	with type area with size 0
Declared entity foo:array2	with type variable INTEGER*4
Declared entity sizeofArray05!:*STATIC*	with type area with size 0

Layouts for areas (commons):

Layout for common /TOP-LEVEL:*STATIC*/ of size 4:
	Variable TOP-LEVEL:b	offset = 0	size = 4


Layout for common /foo:*DYNAMIC*/ of size 0:
	* empty area *


Layout for common /foo:*STACK*/ of size 0:
	Dynamic Variablefoo:array2	offset = UNKNOWN, 	size = DYNAMIC


Layout for common /foo:*STATIC*/ of size 0:
	* empty area *


Layout for common /sizeofArray05!:*STATIC*/ of size 0:
	* empty area *

End of declarations for module foo

sizeofArray05!

Declarations for module sizeofArray05! with type () -> unknow
Variable list:

Declared entity TOP-LEVEL:*STATIC*	with type area with size 4
Declared entity TOP-LEVEL:b	with type variable INTEGER*4
Declared entity TOP-LEVEL:foo	with type functional  () -> void
Declared entity sizeofArray05!:*DYNAMIC*	with type area with size 0
Declared entity sizeofArray05!:*STACK*	with type area with size 0
Declared entity sizeofArray05!:*STATIC*	with type area with size 0

Layouts for areas (commons):

Layout for common /TOP-LEVEL:*STATIC*/ of size 4:
	Variable TOP-LEVEL:b	offset = 0	size = 4


Layout for common /sizeofArray05!:*DYNAMIC*/ of size 0:
	* empty area *


Layout for common /sizeofArray05!:*STACK*/ of size 0:
	* empty area *


Layout for common /sizeofArray05!:*STATIC*/ of size 0:
	* empty area *

End of declarations for module sizeofArray05!

void foo()
{
   int array2[b-1+1];
}
   int b = 20;
   extern void foo();
