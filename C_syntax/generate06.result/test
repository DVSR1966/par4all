
Parsed printed file for generate 06

void generate06()
{
   int i = 0;
   double x = 1.;
   foo y;
   union either_or {
      int either;
      double or;
   };
   union either_or z;
   morning_t u;
   extern fii func(foo , union either_or , morning_t , double *);
   
   // use an undeclared function without source code, which returns
   // implictly an inta typedef type
   (void)func(y, z, u, &x);
}

Parsed printed file for func

fii func(foo f1, union either_or f2, morning_t f3, double *f4)
{
}

Printed synthesized file "func!"

typedef double fii;
enum count {zero, un, deux, trois, quatre};
enum us_count {one=un, two, three, four};
typedef struct {int bonjour:two; int hello:three;} morning_t;
union either_or {
   int either;
   double or;
};
typedef fii foo[deux];
fii func(foo , union either_or , morning_t , double *);

Compile the generated code

typedef double fii;
enum count {zero, un, deux, trois, quatre};
enum us_count {one=un, two, three, four};
typedef struct {int bonjour:two; int hello:three;} morning_t;
union either_or {
   int either;
   double or;
};
typedef fii foo[deux];
fii func(foo , union either_or , morning_t , double *);
//
//     This module was automatically generated by PIPS and should
//     be updated by the user with READ and WRITE effects on
//     formal parameters to be useful...
//
fii func(f1, f2, f3, f4)
foo f1;
union either_or  f2;
morning_t f3;
double * f4;
{}
