foo

Declarations for module foo with typeINTEGER*4 -> INTEGER*4
Variable list:

Declared entity TOP-LEVEL:*STATIC*	with type area with size 0
Declared entity foo:*DYNAMIC*	with type area with size 0
Declared entity foo:*STACK*	with type area with size 0
Declared entity foo:*STATIC*	with type area with size 0
Declared entity foo:X	with type variable INTEGER*4
Declared entity foo:Y	with type variable INTEGER*4
Declared entity foo:a	with type variable INTEGER*4
Declared entity sizeofArray03!:*STATIC*	with type area with size 0

Layouts for formal parameters:

	Variable foo:a	offset = 1
Layouts for areas (commons):

Layout for common /TOP-LEVEL:*STATIC*/ of size 0:
	* empty area *


Layout for common /foo:*DYNAMIC*/ of size 0:
	* empty area *


Layout for common /foo:*STACK*/ of size 0:
	Dynamic Variablefoo:X	offset = UNKNOWN, 	size = DYNAMIC
	Dynamic Variablefoo:Y	offset = UNKNOWN, 	size = DYNAMIC


Layout for common /foo:*STATIC*/ of size 0:
	* empty area *


Layout for common /sizeofArray03!:*STATIC*/ of size 0:
	* empty area *

End of declarations for module foo

sizeofArray03!

Declarations for module sizeofArray03! with type () -> unknow
Variable list:

Declared entity TOP-LEVEL:*STATIC*	with type area with size 0
Declared entity TOP-LEVEL:foo	with type functional INTEGER*4 -> INTEGER*4
Declared entity sizeofArray03!:*DYNAMIC*	with type area with size 0
Declared entity sizeofArray03!:*STACK*	with type area with size 0
Declared entity sizeofArray03!:*STATIC*	with type area with size 0

Layouts for areas (commons):

Layout for common /TOP-LEVEL:*STATIC*/ of size 0:
	* empty area *


Layout for common /sizeofArray03!:*DYNAMIC*/ of size 0:
	* empty area *


Layout for common /sizeofArray03!:*STACK*/ of size 0:
	* empty area *


Layout for common /sizeofArray03!:*STATIC*/ of size 0:
	* empty area *

End of declarations for module sizeofArray03!

int foo(int a)
{
   int X[a-1+1];
   int Y[a-1+1];
   return 0;
}
   extern int foo(int );
