
POINTS TO


// Points To IN:
// p -> _p_2[0] , EXACT
// q -> _q_3[0] , EXACT


// Points To OUT: none

void pointer01(int n, float *p, float *q)
{

// Points To:
// p -> _p_2[0] , EXACT
// q -> _q_3[0] , EXACT

   int i;

// Points To:
// p -> _p_2[0] , EXACT
// q -> _q_3[0] , EXACT


   for(i = 0; i <= n-1; i += 1)

// Points To:
// p -> _p_2[0] , EXACT
// q -> _q_3[0] , EXACT

      p[i] = q[i];
}

Proper effects with points-to

void pointer01(int n, float *p, float *q)
{
   int i;
//             <    is read   >: n
//             <    is written>: i

   for(i = 0; i <= n-1; i += 1)
//             <    is read   >: _q_3[i] i n p q
//             <    is written>: _p_2[i]
      p[i] = q[i];
}

Cumulated effects with points-to

//             <may be read   >: p q
//             <    is read   >: n
void pointer01(int n, float *p, float *q)
{
   int i;
//             <may be read   >: _q_3[*] i p q
//             <may be written>: _p_2[*]
//             <    is read   >: n
//             <    is written>: i

   for(i = 0; i <= n-1; i += 1)
//             <may be read   >: _q_3[*]
//             <may be written>: _p_2[*]
//             <    is read   >: i n p q
      p[i] = q[i];
}

Parallel code

void pointer01(int n, float *p, float *q)
{
   int i;

   forall(i = 0; i <= n-1; i += 1)
      p[i] = q[i];
}
