\documentstyle[12pt]{article}
\input{/usr/share/local/lib/tex/macroslocales/Dimensions.tex}

% pour importer des structures de donne'es Newgen
\newcommand{\domain}[2]{\paragraph{{#1}}\paragraph{}{\em #2}}

\newcommand{\titre}{PROJET PIPS \\
		LISTING DU MODULE GENERATEUR
}

\newcommand{\auteur}{
        	Franc,ois IRIGOIN \\
        	Pierre JOUVELOT \\
\vspace{0.5cm}
{\it Le pre'sent document a e'te' e'tabli en exe'cution du contrat
No.~88.017.01 passe' par la Direction des Recherches, Etudes et
Techniques (De'le'gation Ge'ne'rale pour l'Armement)}
}
\newcommand{\docdate}{De'cembre 1990}
\newcommand{\numero}{E142}

\begin{document}
\input{/usr/share/local/lib/tex/macroslocales/PageTitre.tex}

{\it Le pre'sent document a e'te' e'tabli en exe'cution du contrat
No.~88.017.01 passe' par la Direction des Recherches, Etudes et
Techniques (De'le'gation Ge'ne'rale pour l'Armement)}

\vspace{2cm}

\tableofcontents

\newpage

\section*{Introduction}

Le langage de sortie initialement pre'vu e'tait Fortran-8X qui a
finalement vu le jour sous forme d'une norme Fortran~90 en janvier de la
me^me anne'e.

Le ge'ne'rateur de programme paralle`le est une partie extre^mement
limite'e du projet, comme en te'moigne l'e'paisseur de ce rapport qui
contient les listings correspondants, a` l'exception d'une partie des
routines d'impressions qui font partie de la bibliothe'que lie'e a` la
repre'sentation interne. Un fichier de 200 lignes, {\em fortran90.c}, y
traite les proble`mes spe'cifiques a` la ge'ne'ration de code Fortran~90.

Suivant le choix de l'utilisateur, le code est ge'ne're' uniquement avec
des DO paralle`les de type MIMD ({\em DOALL}) ou avec une combinaison de
tels boucles DO et d'instructions vectorielles. Les instructions et
expressions vectorielles ont l'avantage de diminuer la taille du
programme ce qui en augmente potentiellement la lisibilite, surtout
apre`s une distribution de boucle. Malheureusement, la syntaxe de
Fortran~90 produit des instructions assez difficiles a` lire.

Au vu des machines disponibles et des re'sultats obtenus durant des deux
dernie`res anne'es, il est apparu inutile d'imple'menter des boucles
paralle`les avec synchronisations. De me^me les instructions de
mouvement de donne'es de'pendent extre^mement fortement de la machine
cible. Elles ne peuvent en aucun cas apporter du paralle'lisme ou e^tre
ge'ne'riques. Elles sont donc apparus sans objets dans le cadre du
contrat PIPS.

Il est aussi possible d'adjoindre au texte du programme ge'ne're' des
commentaires contenant une forme lisible de certaines des informations
calcule'es lors des phases d'analyse.

Les deux bibliothe`ques qui suivent contiennent l'une, {\em
prettyprint}, la routine de pilotage ge'ne'rique de ge'ne'ration de
programme, et l'autre, {\em text-util}, la bibliothe`que de base
associe'e a` la structure de donne'es {\em text} qui est utilise'e comme
interme'diaire pour passer de la repre'sentation interne ({\em ri}) a`
une repre'sentation ASCII.

Enfin, notons que les listings relatifs aux transformations de
programmes ont e'te' joints au rapport concernant la de'tection du
paralle'lisme vu la relation e'troite qui existe entre de'pendance,
transformation et paralle'lisation. La paralle'lisation peut d'ailleurs
e^tre vue comme une transformation de programme. Ceci explique aussi
pourquoi ce rapport n'est pas plus e'pais.

\section{Bibliothe`que {\em Prettyprint}}

La bibliothe`que {\em prettyprint} contient les routines d'impression du
code initial et du code paralle'lise'e. Ces routines sont tre`s courtes
parce qu'elles ne servent que d'interface avec {\em pipsmake} et les
toplevels et parce qu'elles font tout de suite appels a` des routines se
trouvant dans les bibliothe`ques associe'es aux objets a` imprimer,
c'est-a`-dire essentiellement a` la bibliothe`que {\em ri-util}.

\input{prettyprint.listing}

\section{Structure de donne'es {\em Text}}

La structure de donne'es {text} est extre^mement simple. Elle respecte
la forme des structures arborescentes qui re'sident en me'moire mais
elle en supprime toute information se`mantique. Elle est
de'clare'e par l'interme'diaire de NewGen pour des raisons d'uniformite'.
Sa compre'hension n'est pas importante pour arriver a` dominer
l'ensemble du projet PIPS.

\input{text.datastructure}

\section{Bibliothe`que {\em Text-util}}

La bibliothe'que {\em text-util}, comme toutes les bibliothe`ques
suffixe'e par {\em -util}, est associe'e a` la structure de donne'es
NewGen correspondante, {\em text}. Elle contient les routines permettant
de manipuler cette structure de donne'es et de la convertir en un
fichier ASCII, contenant re'ellement du texte.

\input{text-util.listing}

\end{document}
