\documentstyle{article}
\input{/usr/share/local/lib/tex/macroslocales/Dimensions.tex}

\addtolength{\textheight}{30pt}

\newcommand{\titre}{PROJET PIPS \\
		FICHE D'EXPLOITATION}
\newcommand{\auteur}{
        	Franc,ois IRIGOIN \\
        	Pierre JOUVELOT\\
\vspace{0.5cm}
{\it Le pre'sent document a e'te' e'tabli en exe'cution du contrat
No.~88.017.01 passe' par la Direction des Recherches, Etudes et
Techniques (De'le'gation Ge'ne'rale pour l'Armement)}
}
\newcommand{\docdate}{Avril 1993}
\newcommand{\numero}{E175}

\begin{document}
\input{/usr/share/local/lib/tex/macroslocales/PageTitre.tex}

{\it Le pre'sent document a e'te' e'tabli en exe'cution du contrat
No.~88.017.01 passe' par la Direction des Recherches, Etudes et
Techniques (De'le'gation Ge'ne'rale pour l'Armement)}

\vspace{2cm}

\begin{tabular}{||l|p{10cm}||} \hline\hline
Nume'ro du Contrat 	& 88.017.01 DRET/ARMINES \\ \hline
Auteur(s) du Re'sume'	& Mme. CORINNE ANCOURT \\
			& M. FRANCOIS IRIGOIN \\
			& M. PIERRE JOUVELOT \\ \hline\hline
Re'sume'		&
{PIPS est un paralle'liseur automatique et interproce'dural de programmes
scientifiques. Ce paralle'liseur prend en entre'e des programmes Fortran
77 se'quentiel et fournit en sortie des programmes e'quivalents dont le
paralle'lisme a e'te' explicite' par des directives de micro-tasking
Cray CFT~77. L'objectif est
d'e'tudier l'effet des analyses interproce'durales pour
l'optimisation de la compilation de programmes Fortran a` partir de
l'exe'cution de benchmarks du CEA et de l'ONERA sur Cray Y-MP.
} \\ \hline\hline
Brevets			& Ne'ant \\ \hline\hline
\multicolumn{2}{||c||}{Publications effectue'es dans le cadre du contrat} \\ \hline
% \begin{tabular}{lp{6cm}}
Auteurs: & Franc,ois Irigoin, Pierre Jouvelot, Re'mi Triolet \\ 
Revue: & 1991 International Conference on Supercomputing, Cologne, June 1991 \\
Titre: & Semantical Interprocedural Parallelization: An Overview of the PIPS Project\\ \hline
Auteurs: & Franc,ois Irigoin \\
Revue: & Workshop on Environments and Tools for Parallel Scientific Computing,
CNRS-NSF, Saint-Hilaire du Touvet, Sept. 1992 \\
Titre: & Interprocedural Analyses for Programming Environments \\ \hline\hline
\end{tabular}

\newpage

\setcounter{section}{0}

Ce document pre'sente le rapport final de la convention DRET/ARMINES
87.017 (bon de commande 87.017.01.018, reconduction 1991) de'crivant la
prise en compte de machines Cray comme cible par le paralle'liseur
automatique et interproce'dural de programmes scientifiques PIPS. Ce
paralle'liseur prend en entre'e des programmes Fortran 77 se'quentiel et
fournit en sortie des programmes e'quivalents dont le paralle'lisme a
e'te' explicite' par des directives de micro-tasking Cray CFT~77.

\section{Objet de l'e'tude}

Cette e'tude entre dans le cadre de'fini formellement par les deux rubriques
suivantes:
\begin{itemize}
\item
	{\em Domaine II}: Etude d'outils logiciels de programmation et
d'exploitation des calculateurs scientifiques.
\item
	{\em The`me II.1}: Adaptation automatique de programmes
scientifiques aux calculateurs paralle`les.
\end{itemize}

Plus pre'cisement, son objectif est de permettre une e'valuation et,
e'ventuellement, une exploitation des avance'es effectue'es en matie`re
de paralle'lisation automatique de Fortran lors du pre'ce'dent contrat
dans le domaine des analyses interproce'durales. Une phase
d'exploitation du paralle'lisme {\em utile} pour machine Cray a e'te'
ajoute'e pour permettre les expe'rimentations.

\section{Inte're^t de l'e'tude}

Le domaine de la recherche des outils de programmation des calculateurs
scientifiques du type {\em supercalculateur} connai^t un de'veloppement
croissant depuis l'arrive'e des superordinateurs vectoriels. Ce
de'veloppement s'est encore amplifie' avec l'apparition de
super-microprocesseurs incluant divers types de paralle'lisme
(pipelining, unite's fonctionnelles multiples) et des hie'rarchies
me'moire complexes (cache secondaire). Ces machines, et leur
programmation efficace, sont une des clefs de la mai^trise technologique
de nombreux secteurs vitaux pour la De'fense Nationale.  Le
de'veloppement d'outils d'aide a` la programmation efficace s'ave`re
e^tre ne'cessaire pour mai^triser le cou^t et faciliter la conception de
logiciels qui tirent parti des caracte'ristiques architecturales de ces
machines.

\subsection{Objectifs de la recherche}

Les objectifs principaux de la recherche effectue'e dans le cadre de
ce contrat sont multiples:
\begin{itemize}
\item
	Etudier et concevoir un compilateur effectuant la {\em
paralle'lisation} efficace des programmes et non plus la simple mise en
e'vidence de paralle'lisme implicite,
\item
	Etudier l'inte're^t d'une paralle'lisation de grain
grossier, au niveau des proce'dures utilise'es dans les langages
scientifiques, 
\item
	Etudier l'impact des analyses interproce'durales
qui semblent devoir s'imposer dans les compilateurs/optimiseurs de demain.
\end{itemize}
Ils visent tous a` e'valuer la qualite' de l'exploitation qui peut e^tre
faite automatiquement du paralle'lisme de grain moyen ou fin pre'sent
dans les programmes scientifiques.

\subsection{Historique des e'tudes ante'rieures}

Les acteurs principaux sur ce terrain sont ame'ricains, comme les
machines cibles. Apre`s les travaux de pionniers de David Kuck a`
l'Universite' d'Urbana-Champaign (Illinois) , les groupes de Ken Kennedy
a` l'Universite' de Rice (Texas), de Michael Burke a` IBM Yorktown
Heights (New York) et de Monica Lam (Stanford) ont poursuivi et
de'veloppe' cet axe de recherche avec toute une famille de projets.
Ayant perc,u l'importance strate'gique de ce domaine, la DRET a lance'
un certain nombre de projets pour y soutenir la recherche francaise
(VESTA, VATIL, PIPS, PAF).

\subsection{Re'sultats acquis ante'rieurement}

L'essentiel des travaux effectue's pre'ce'demment dans le domaine de la
compilation pour superordinateurs e'tait axe' vers la vectorisation des
applications scientifiques. Les re'sultats primordiaux concernaient la
cre'ation de graphes de de'pendances aussi pre'cis que possible entre
instructions en vue de de'tecter celles qui sont vectorisables. 

La notion me^me de vectorisation e'tait incompatible avec le traitement
des appels de proce'dure puisqu'un call vectoriel n'a pas grand sens.
Les premiers re'sultats ont e'te' de'crits dans la the`se de Re'mi
Triolet (1984) et ce sont eux qui sont a` l'origine du projet. 

\section{De'roulement de l'e'tude}

Le projet PIPS-2 (Paralle'liseur Interproce'dural de Programmes
Scientifiques, adaptation aux multiprocesseurs Cray) s'est de'roule' sur
1 an. Le point qui s'est re've'le' le plus de'licat et qui nous a fait
perdre beaucoup de temps a e'te' l'acce`s a` une machine Cray, malgre' la
collaboration instaure'e entre l'Ecole des Mines et le CEA.

Une pre'sentation et une premie`re de'monstration de la nouvelle version
de PIPS a e'te' effectue'e en janvier 1993. Le syste`me a aussi e'te'
pre'sente' a` quelques socie'te's industrielles. L'une d'entre elles,
Connexite', envisage d'ailleurs d'inte'grer certaines des
fonctionnalite's de PIPS dans son environnement de programmation
paralle`le, FORESYS.

\subsection{Rappel des diffe'rentes e'tapes}

\begin{description}

\item[Etat d'Avancement 1 - Janvier 1992]
	Le rapport joint a` cet e'tat d'avancement pre'sente
rapidement les algorithmes utilise's pour effectuer la de'tection des
re'ductions ge'ne'ralise'es, le remplacement des constantes (e'valuation
partielle du code), la se'lection du paralle'lisme pour le Cray Y-MP et
pour le de'roulage de boucle.

\item[Rapport Interme'diaire - Avril 1992]
	Le rapport interme'diaire pre'sente la ge'ne'ration de code
paralle`le avec des directives Cray CFT77, les fonctionnalite's de la
phase d'e'valuation partielle et l'algorithme code' en LISP pour la
de'tection des re'ductions ge'ne'ralise'es.

\item[Etat d'avancement 2 - Juillet 1992]
	Les travaux effectue's pendant cette pe'riode sont de trois
natures. Tout d'abord, des expe'riences ont e'te' effectue'es sur Cray
Y-MP pour valider et invalider les optimisations pre'vues. Ensuite, la
de'tection des re'ductions ge'ne'ralise'es a e'te' ame'liore'e.  Enfin,
le portage de PIPS sous UNICOS a e'te' commence', puis abandonne'.

\item[Dernier trimestre - juillet 92 a` la fin du contrat]
	Cette dernie`re pe'riode a eu pour objectifs la re'alisation
d'expe'riences sur Cray avec les benchmarks de l'ONERA et du CEA.
L'essentiel du temps a e'te' consacre' au durcissement de PIPS pour que
toutes les options puissent e^tre utilise'es sur des programmes
complets et a` l'analyse des re'sultats obtenus sur Cray.

\item[Participation a` des confe'rences]
	PIPS a e'te' pre'sente' en de'monstration a` la confe'rence {\em
Third International Workshop on Compilers for Parallel Computers}
(juillet 92). Les analyses interproce'durales de PIPS ont aussi e'te'
pre'sente'es au {\em Workshop on Environments and Tools for
Parallel Scientific Computing} (septembre 1992).

\item[Pre'sentation a` la DRET]
	Les re'sultats obtenus ainsi que les proble`mes rencontre's ont
e'te' pre'sente's a` la DRET lors d'une re'union le 19 janvier 1993.

\end{description}

\subsection{Difficulte's, faits significatifs et re'sultats}

L'essentiel du project PIPS s'est de'roule' selon l'e'che'ancier pre'vu
pendant les 9 premiers mois mais a ensuite pris du retard pour deux
raisons: les difficulte's d'acce`s a` une machine Cray et le manque de
robustesse initial de PIPS.

Les expe'riences ont montre' qu'il e'tait indispensable de prendre en
compte des programmes mal structure's, que cela soit du^ aux traitements
d'exception ou a` l'anciennete' des codes traite's. L'utilisation d'un
restructureur automatique en amont de PIPS s'impose donc pour des
applications un peu anciennes.  Les expe'riences ont aussi mis en
e'vidence des proble`mes de complexite' dans les analyses
interproce'durales. Ces proble`mes ont e'te' surmonte's.

La comparaison qui a e'te' effectue'e par rapport a` FPP a montre' que
PIPS disposait bien des transformations de base mais qu'il serait utile
d'y ajouter au moins la privatisation de tableau.

Le couplage de l'analyse se'mantique et de l'e'valuation partielle a
permis de simplifier la ge'ne'ration de code paralle`le, d'appliquer
re'cursivement PIPS pour de'passer les habituelles contraintes de
line'arite', et de fournir une interface vers d'autres syste`mes.

Le test de de'pendance utilise' dans PIPS a e'te' reconnu comme efficace
aux Etats-Unis et, d'apre`s des e'tudes expe'rimentales, les autres
nouveaute's introduites font toutes parties des domaines dans lesquels
les paralle'liseurs commerciaux ont des faiblesses conduisant a` de
mauvais re'sultats.

\section{Re'capitulation des re'sultats}

Le paralle'liseur PIPS a e'te' conside'rablement durci ce qui a permis
de l'appliquer non seulement aux benchmarks requis mais a` ceux du
Perfect Club. La comparaison qui a e'te' effectue'e avec FPP a montre'
que PIPS pouvait appliquer les transformations les plus utiles de FPP et
qu'il allait au-dela` sur de nombreux points. La re'alisation du
ge'ne'rateur de micro-tasking permet maintenant d'effectuer des
e'valuations expe'rimentales comple`tes de PIPS.

\section{Conclusion}

Malgre' un retard de quelques mois du^ a` des difficulte's impre'vues
(acce`s a` des Cray, manque de fiabilite' du prototype), le projet PIPS-2 a abouti aux
re'sultats escompte's. Des programmes re'els ont e'te' paralle'lise's
interproce'duralement et du code Cray avec micro-tasking a e'te'
produit. PIPS a atteint un niveau de fiabilite' qui devrait permettre
a` des utilisateurs de l'appliquer sur leurs applications en
coope'ration avec le CRI.

\section{Perspectives ulte'rieures}

Trois directions semblent devoir e^tre explore'es simultane'ment. Tout
d'abord, les acquis en analyse interproce'durale devraient e^tre
transfe're's a` un produit commercial. Ensuite, des expe'rimen\-tations
de PIPS devraient e^tre re'alise'es conjointement par le CRI et par des
utilisateurs. Enfin, PIPS est la meilleure base actuellement disponible
pour re'aliser un compilateur pour machines a` me'moire re'partie, qu'il
soit base' sur HPF ou sur des techniques encore plus avance'es comme le
placement automatique des donne'es ou la me'moire virtuelle re'partie.

\end{document}
