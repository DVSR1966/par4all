\documentstyle[12pt]{article}
\input{/usr/share/local/lib/tex/macroslocales/Dimensions.tex}

% pour importer des structures de donne'es Newgen
\newcommand{\domain}[2]{\paragraph{{#1}}\paragraph{}{\em #2}}

\newcommand{\titre}{PROJET PIPS \\
		LISTING DU DETECTEUR DE PARALLELISME
}

\newcommand{\auteur}{
        	Franc,ois IRIGOIN \\
        	Pierre JOUVELOT \\
\vspace{0.5cm}
{\it Le pre'sent document a e'te' e'tabli en exe'cution du contrat
No.~88.017.01 passe' par la Direction des Recherches, Etudes et
Techniques (De'le'gation Ge'ne'rale pour l'Armement)}
}
\newcommand{\docdate}{De'cembre 1990}
\newcommand{\numero}{E140}

\begin{document}
\input{/usr/share/local/lib/tex/macroslocales/PageTitre.tex}

{\it Le pre'sent document a e'te' e'tabli en exe'cution du contrat
No.~88.017.01 passe' par la Direction des Recherches, Etudes et
Techniques (De'le'gation Ge'ne'rale pour l'Armement)}

\vspace{2cm}

\tableofcontents

\newpage

\section*{Introduction}

La de'tection du paralle'lisme comprend de nombreuses e'tapes. Une fois les
phases d'analyse termine'es (cf. rapport E139), il reste a` construire
le graphe de de'pendance, a` effectuer les transformations qui peuvent l'e^tre
pour augmenter le paralle'lisme et a` exhiber ce dernier.

Ce rapport couvre la normalisation des expressions, les structures de
donne'es utilise'es pour repre'senter le graphe de de'pendance ainsi que
les routines de bases exploitant ce graphe, le calcul du graphe de
de'pendance et le test de de'pendance associe', l'utilisation du graphe
de de'pendance pour la privatisation des variables scalaires, la
de'tection du paralle'lisme a` proprement parler, et finalement les
transformations unimodulaires de nid de boucle (par exemple, l'e'change
de boucles).

\newpage

\section{Bibliothe`que {\em Normalize}}

La bibliothe'que {\em normalize} recherche les expressions line'aires
qui pourront e^tre utilise'es dans les tests de de'pendance et dans le
calcul des pre'conditions et transforme les expressions qui peuvent
l'e^tre en structure {\em vecteur}.

\input{normalize.listing}

\section{Structure de donne'es {\em Graph}}

La structure de donne'es {\em graph} est une structure de donne'es
ge'ne'riques pouvant e^tre utilise'e pour construire et exploiter
n'importe quel type de graphe. Elle est de'crite ici pour faciliter le
compre'hension de la structure repre'sentant le graphe de de'pendance,
{\em ricedg}.

\input{graph.datastructure}

\section{Structure de donne'es {\em Dg}}

La structure de donne'es {\em dg} est de'clare'e en NewGen. Elle encode
le graphe de de'pendance en utilisant la structure ge'ne'rique {\em
graph}.

\input{dg.datastructure}

\section{Bibliothe`que {\em Dg-util}}

La bibliothe`que {\em dg-util} contient les routines de base de la
structure de donne'es {\em dg} qui n'ont pas e'te' ge'ne're'
automatiquement par Newgen.

\input{dg-util.listing}

\section{Bibliothe`que {\em Ricedg}}

La bibliothe`que {em ricedg} contient les routines ne'cessaires a` la
construction d'un graphe de de'pendance de type Allen \& Kennedy. Le
test de de'pendance utilise' est celui qui a e'te' de'veloppe' au CAII.

\input{ricedg.listing}

\section{Bibliothe`que {\em Privatize}}

Comme son nom l'indique cette bibliothe`que contient les routines
ne'cessaires a` la privatisation des variables. La bibliothe'que {\em
rice} contient aussi une passe de privatisation tre`s limite'e qui est
applique'e syste'matiquement.

\input{privatize.listing}

\section{Bibliothe`que {\em Rice}}

La bibliothe'que {\em Rice} contient les routines effectuant la
paralle'lisation effective des programmes. L'algorithme de
paralle'lisation est celui d'Allen \& Kennedy.

\input{rice.listing}

\section{Bibliothe`que {\em Hyperplane}}

La bibliothe'que {\em Hyperplane} contient toutes les transformations
unimodulaires sur les boucles, a` commencer par l'e'change de boucles
a` n'importe quel niveau et, comme son nom l'indique, la me'thode
hyperplane. Tous les algorithmes ont e'te' de'veloppe's au CAII.

\input{hyperplane.listing}

\end{document}
