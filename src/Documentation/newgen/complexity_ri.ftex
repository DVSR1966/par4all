\documentstyle{article}
\input{/usr/share/local/lib/tex/macroslocales/Dimensions.tex}

\newcommand{\domain}[2]{\paragraph{{#1}}{{#2}}}

\begin{document}
\section*{Structure de donne'e complexite' }
\today

\domain{Import statement from "ri.newgen"}
{
\paragraph{}
(Evite les conflits de nume'ros de type avec ceux de'finis par la RI)
}
\domain{External Ppolynome}
{
\paragraph{}
Le domaine {\bf Ppolynome} est utilise' pour repre'senter les
complexite's des {\bf statement} en fonction de parame`tres,
de variables et des indices de boucles englobantes.
Un Ppolynome est une liste de mono^mes, chaque mono^me e'tant constitue'
d'un coefficient flottant et d'un Pvecteur repre'sentant le produit
des variables avec leurs puissances.
}

\domain{Complexity = eval:Ppolynome x varcount x rangecount x ifcount}
{
\paragraph{}
Au cours de l'e'valuation, un champ {\bf complexite'} est associe'e a`
chaque {\bf statement}. Le sous-domaine {\bf eval} contient un polyno^me
approchant la complexite' du statement. Les sous-domaines
{\bf varcount}, {\bf rangecount} et {\bf ifcount} donnent des informations
statistiques sur la fac,on dont s'est de'roule' l'e'valuation de la
complexite', donc aussi sur la complexite' elle-me^me. Ils comptent
en les classant les diffe'rents types de variables/boucles/tests 
rencontre's au cours de l'e'valuation de la complexite'.
}

\domain{Varcount = symbolic:int x guessed:int x bounded:int x unknown:int} 
{
\begin{itemize}
\item	{\bf symbolic} = nombre de variables qu'on voulait voir
	apparaitre en symbolique dans l'expression de la complexite'
	("parameters" Fortran, indices de boucles, parame`tres formels
	d'une subroutine). Cela donne des re'sultats faux si ce type de
	variable est modifie'e au cours de l'exe'cution.

\item	{\bf guessed} = nombre de variables dont on a devine' la valeur
	gra^ce a` l'analyse se'mantique

\item	{\bf bounded} = nombre de variables qu'on a majore' ou minore'
	gra^ce a` l'analyse se'mantique

\item	{\bf unknown} = nombre de variables sur lesquelles on n'a trouve' aucune
	information, et que l'utilisateur n'a pas demande' de voir apparaitre
	dans la complexite'. Ces variables sont toutes remplace'es par la
	pseudo-variable UNKNOWN\_VARIABLE, qui prend a` la fin de l'e'valuation
	une valeur par de'faut.
\end{itemize}
}

\domain{Rangecount = profiled:int x guessed:int x bounded:int x unknown:int} 
{
\begin{itemize}
\item	{\bf profiled} = nombre de boucles dont les bornes ont ete
	mesure'es au moyen de profiling

\item	{\bf guessed} = nombre de boucles dont les bornes e'taient au
	pire des polyno^mes de variables du type {\bf symbolic} ou
	{\bf guessed}

\item	{\bf bounded} = nombre de boucles dont les bornes ont e'te'
	minore'es/majore'es gra^ce a` l'analyse se'mantique

\item	{\bf unknown} = nombre de boucles dont le nombre de tours n'a pu
	e^tre de'couvert. Force'ment nul apre`s une passe
	de profiling. Tous ces nombres sont remplace's par la
	pseudo-variable: UNKNOWN\_RANGE, qui prendra a` la fin de
	l'e'valuation une valeur par de'faut.
\end{itemize}
}

\domain{Ifcount = profiled:int x computed:int x halfhalf:int} 
{
\begin{itemize}
\item	{\bf profiled} = nombre de tests dont la probabilite' a ete
	mesure'e par du profiling

\item	{\bf computed} = nombre de tests dont la probabilite' a e'te'
	calcule'e. En particulier dans le cas ou` l'expression
	boole'enne ne de'pend que des indices des boucles englobantes
	et que leurs {\bf range}s sont du type {\bf guessed}.

\item	{\bf halfhalf} = nombre de tests dont la probabilite' a ete
	prise e'gale a $\frac{1}{2}$ par de'faut.
\end{itemize}

}

\end{document}
