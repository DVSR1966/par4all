#! /bin/bash

# Add remotes for git instances:
# - the SVN PIPS-related repositories from Mines ParisTech/CRI
# - the PolyLib library from Strasbourg University/ICPS

function enforce_P4A_TOP() {
    if [[ -z "$P4A_TOP" ]] ; then
	cat <<EOF
P4A_TOP variable is not set.
It should contain the directory name with the Par4All git repository
working copies in it:
- par4all at least
and according to what you want to do, also:
- par4all-priv
- CRI-git-svn/linear
- CRI-git-svn/newgen
- CRI-git-svn/nlpmake
- CRI-git-svn/pips
- CRI-git-svn/validation
EOF
	exit 1
    fi
    # Set variables pointing to various Par4All parts:
    # Where to get the git-svn instances from:
    P4A_CRI_GIT_SVN=$P4A_TOP/CRI-git-svn
    P4A_ROOT=$P4A_TOP/par4all
    P4A_PRIV_ROOT=$P4A_TOP/par4all-priv

    # To be change when the global installation infrastructure is more stable:
    source $P4A_TOP/par4all/src/dev/p4a_git_lib.bash
}

enforce_P4A_TOP

# Since everything is touchy, stop if anything fails:
stop_on_error

if (( $verb >= 2 )) ; then
    # Put shell tracing on:
    set -vx
fi

cd $P4A_ROOT

COMMIT_MESSAGE_FILE=`mktemp`

# Create the remote/CRI/<repository>
function import_git() {
    # Get the function parameters:
    REMOTE_NAME=$1
    REMOTE_GIT_URL=$2
    TARGET_LOCAL_DIR=$3

    echo Add the git svn as remote git repository:
    git remote add $REMOTE_NAME $REMOTE_GIT_URL

    echo Fetch the history:
    git fetch $REMOTE_NAME

    echo Extract a copy of the files of the remote repository into the local
    echo repository at packages/PIPS, merge it and update the files in the work
    echo tree:
    git read-tree --prefix=$TARGET_LOCAL_DIR -u $REMOTE_NAME/master

    # Build the merging message:
    echo "Merging from git-svn remotes/$REMOTE_NAME into $TARGET_LOCAL_DIR that is:" > $COMMIT_MESSAGE_FILE

    # Get the last commit message from the remote to branch from:
    git log -n 1 remotes/$REMOTE_NAME/master >> $COMMIT_MESSAGE_FILE

    # Commit with the built merging message:
    git commit --file=$COMMIT_MESSAGE_FILE

    echo Connect the SVN history to this one by fetching it and merging it with
    echo "the our strategy (since what we want is what we've just built up above"
    echo into packages/PIPS and not at the top level as each individual svn
    echo "repository):"
    git pull -s ours $REMOTE_NAME master

    rm $COMMIT_MESSAGE_FILE
}


# Create the remote/CRI/<repository> from <repository> given as parameter:
function import_PIPS_git_svn() {
    # Import from $P4A_CRI_GIT_SVN/<repository> URL as remote name
    # CRI/<repository> into packages/PIPS/<repository> local directory

    # Save the branch we are into:
    get_current_git_branch
    # Create a branch with a reflog representing the remote component by
    # its own directly into the "initial" branch that should point to the
    # first commit of the Par4All git repository:
    git branch -l $1 initial

    # Jump into the reserved branch to this module:
    git checkout $1

    # Put the import and merge in a specific branch
    import_git CRI/$1 $P4A_CRI_GIT_SVN/$1 packages/PIPS/$1

    # Revert to previous branch
    revert_current_git_branch
}

### To import a branch from PIPS :
# import_git CRI/pips-gfc ../CRI-git-svn/roosz-pips-gfc packages/pips-gfc/gcc/fortran
# exit

# Add the PIPS git svn repositories to Par4All:
for i in $PIPS_MODULES; do
    import_PIPS_git_svn $i
done

# Save the branch we are into:
get_current_git_branch

# http://icps.u-strasbg.fr/polylib
# Create a branch pointing to the polylib import:
git branch -l polylib initial

git checkout polylib
# Add the PolyLib git repository to Par4All in the packages/polylib
# directory as the polylib remote:
import_git polylib git://repo.or.cz/polylib.git packages/polylib

# Revert to previous branch
revert_current_git_branch


# There was a SVN reorganization of the CRI nlpmake repository to
# introduce branches, so put things in the correct order:
git checkout nlpmake
git mv packages/PIPS/nlpmake/trunk/makes packages/PIPS/nlpmake/makes
git rm -r packages/PIPS/nlpmake/{branches,tags}
git commit --message="There was a SVN reorganization of the CRI nlpmake repository
around revision 747-750 to introduce branches,
so put the makes directory at the top-level back"
# Since git do not track directories and trunk is now empty, use a simple
# directory deletion:
rm -rf packages/PIPS/nlpmake/{branches,tags,trunk}
git checkout master

echo 'Do not forget to use "merge -s subtree" when getting new CRI stuff later'
echo "For example you can get the last upstream version with:"
for i in $SVN_REPOSITORIES; do
    echo "    git fetch CRI/$i"
    echo "    git merge -s subtree CRI/$i/master"
done
echo "    git fetch polylib"
echo "    git merge -s subtree polylib/master"


# Some Emacs stuff:
### Local Variables:
### mode: sh
### mode: flyspell
### ispell-local-dictionary: "american"
### End:
