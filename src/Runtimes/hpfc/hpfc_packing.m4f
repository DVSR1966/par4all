c
c everything about packing
c
c $RCSfile: hpfc_packing.m4f,v $ ($Date: 1996/09/07 16:56:19 $, )
c version $Revision$
c got on %D%, %T%
c $Id$
c
c macros for code generation
c
define(`LIST_DECL_BOUNDS',`
     $ dl$1, du$1')dnl
define(`LIST_SECTION',`
     $ rl$1, ru$1, ri$1')dnl
define(`DO_LOOP',`
      do i$1 = rl$1, ru$1, ri$1')dnl
define(`ENDDO_LOOP',`
      enddo')dnl
define(`ARRAY_DECL',`dl$1:du$1')dnl
define(`INDEX_REF',`i$1')dnl
define(`GENERIC_PACKING',`dnl
pushdef(`LEVEL',$1)dnl
pushdef(`PVMFUNCTION',$2)dnl
pushdef(`NAME',$3)dnl
pushdef(`PVMTYPE',$4)dnl
pushdef(`TYPE',m4_type_name(PVMTYPE))dnl
c
c Packing LEVEL dimensional array
c
      subroutine build_name(HPFC,NAME,PVMTYPE,LEVEL)(
     $     array, dnl
COMMA_REPLICATE(LEVEL, `LIST_DECL_BOUNDS'),dnl
COMMA_REPLICATE(LEVEL, `LIST_SECTION')
     $)
      integer dnl
COMMA_REPLICATE(LEVEL, `LIST_DECL_BOUNDS'),dnl
COMMA_REPLICATE(LEVEL, `LIST_SECTION')
      TYPE
     $ array(COMMA_REPLICATE(LEVEL, `ARRAY_DECL'))
      include "fpvm3.h"
      include "hpfc_commons.h"
      integer info, nitem
      integer COMMA_REPLICATE(LEVEL, `INDEX_REF')
      i1=rl1
      nitem=(ru1-rl1+1)/ri1
REVERSE_BUT_LAST_REPLICATE(LEVEL, `DO_LOOP')
         call PVMFUNCTION
     $        (PVMTYPE,
     $         array(COMMA_REPLICATE(LEVEL, `INDEX_REF')),
     $         nitem, ri1, info)  dnl
SIMPLE_REPLICATE(eval(LEVEL - 1), `ENDDO_LOOP')
      end  
c
popdef(`LEVEL')dnl
popdef(`PVMFUNCTION')dnl
popdef(`NAME')dnl
popdef(`TYPE')dnl
popdef(`PVMTYPE')dnl')dnl
c
define(ONE_PACKING,`
GENERIC_PACKING($1,pvmfpack,PACK,$2)
GENERIC_PACKING($1,pvmfunpack,UNPACK,$2)')dnl
define(ALLPACK,`
c ----------------------------------------
c
c Packing serie for pvmtype $1
c
ONE_PACKING(1,$1)
ONE_PACKING(2,$1)
ONE_PACKING(3,$1)
ONE_PACKING(4,$1)
dnl ONE_PACKING(5,$1)
dnl ONE_PACKING(6,$1)
dnl ONE_PACKING(7,$1)
c')dnl
c
dnl ALLPACK(BYTE1)
dnl ALLPACK(INTEGER2)
ALLPACK(INTEGER4)
ALLPACK(REAL4)
ALLPACK(REAL8)
dnl ALLPACK(COMPLEX8)
dnl ALLPACK(COMPLEX16)
c
c that is all
c
