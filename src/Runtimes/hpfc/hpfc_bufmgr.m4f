c
c $RCSfile: hpfc_bufmgr.m4f,v $ (version $Revision$)
c $Date: 1995/12/01 11:49:19 $, 
c
c First routines to fake the pack/unpack of data.
c The issue is to allow quite simply to measure the different
c overheads in the enumaration/packing/message stuff.
c Counts the number of calls, say for some statistics.
c The the routines for doing the job...
c
define(`GENERIC_BUFFER_PACK',`dnl
pushdef(`PVMTYPE',$1)dnl
fake_buffers(dnl
      subroutine build_name(PVMTYPE,hpfc_fake_bufpck)()
      include "fpvm3.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      SEND_NOT_INITIALIZED=.FALSE.
      BUFINDEX=0
      hpfc_fake_bufpck=hpfc_fake_bufpck+1
      end)
      subroutine build_name(PVMTYPE,hpfc_bufpck)()
      integer info, bufid
      include "fpvm3.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      if (SEND_NOT_INITIALIZED) then
         call pvmfinitsend(BUFFER_ENCODING, bufid)
         debug(if (bufid.lt.0) 
     $        write (unit=0,fmt=*) "pvm_initsend error")
         SEND_NOT_INITIALIZED=.FALSE.
      endif
      call pvmfpack(PVMTYPE, build_name(PVMTYPE,BUFF),
     $     BUFINDEX, 1, info)
      BUFINDEX=0
      end
popdef(`PVMTYPE')')dnl
define(`GENERIC_BUFFER_UPCK',`dnl
pushdef(`PVMTYPE',$1)dnl
fake_buffers(dnl
      subroutine build_name(PVMTYPE,hpfc_fake_bufupk)(lid)
      integer lid
      include "fpvm3.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      if (RECEIVED_NOT_PERFORMED) then
         RECVCHANNELS(lid) = RECVCHANNELS(lid) + 2
         RECEIVED_NOT_PERFORMED = .FALSE.
      endif
      SIZEOFRECEIVEDBUFFER=build_name(PVMTYPE,BUFFSIZE)
      hpfc_fake_bufupk=hpfc_fake_bufupk+1
      end)
      subroutine build_name(PVMTYPE,hpfc_bufupk)(lid)
      integer lid
      integer info, bufid, length, tag, tid
      include "fpvm3.h"
      include "hpfc_commons.h"
      include "hpfc_includes.h"
      if (RECEIVED_NOT_PERFORMED) then
         debug(write (unit=0, fmt=*) 
     $        "RCV from ", lid, RECVCHANNELS(lid))
         call pvmfrecv(NODETIDS(lid), RECVCHANNELS(lid), bufid)
         RECVCHANNELS(lid) = RECVCHANNELS(lid) + 2
         RECEIVED_NOT_PERFORMED = .FALSE.
         debug(write (unit=0, fmt=*) "RCV done")
      endif
      call pvmfbufinfo(bufid, length, tag, tid, info)
      SIZEOFRECEIVEDBUFFER = length / M4_PVM_LENGTH(PVMTYPE)
      call pvmfunpack(PVMTYPE, build_name(PVMTYPE,BUFF),
     $     SIZEOFRECEIVEDBUFFER, 1, info)
      end
popdef(`PVMTYPE')')dnl
define(`GENERIC_BUFFER',`
GENERIC_BUFFER_PACK($1)
GENERIC_BUFFER_UPCK($1)')
dnl GENERIC_BUFFER(BYTE1)
dnl GENERIC_BUFFER(INTEGER2)
GENERIC_BUFFER(INTEGER4)
GENERIC_BUFFER(REAL4)
GENERIC_BUFFER(REAL8)
dnl GENERIC_BUFFER(COMPLEX8)
dnl GENERIC_BUFFER(COMPLEX16)
c
c that is all
c
