c
c $RCSfile: hpfc_broadcast.m4f,v $ (version $Revision$)
c $Date: 1996/09/07 16:56:19 $, 
c
c management of broadcasts
c typical call: hpfc broadcast x(lid, [number, step]*x)
c broadcast the current message to the described set of pe.
c fake version added...
c special guarded version for remappings:
c typical call: hpfc remapbrd x(an, lid, [number, step]*x)
c   where an is the source array arrangement of the remapping.
c
define(`LIST_DECL_AREA',`
     $     n$1, s$1')dnl
define(`LIST_INDEX_DECL',`
     $     i$1')dnl
define(`DO_LOOP',`
      do i$1 = i`'eval($1 - 1), i`'eval($1 - 1)+(n$1-1)*s$1, s$1')dnl
define(`ENDDO_LOOP',`
      enddo')dnl
c
c broadcast function
c
define(`GENERIC_BROADCAST',`
pushdef(`LEVEL',$1)dnl
fake_buffers(dnl
      subroutine build_name(hpfc fake broadcast,LEVEL)(
     $     i0`'LEVEL_ZERO(,``,'') dnl
COMMA_REPLICATE(LEVEL,`LIST_DECL_AREA'))
      integer
     $     i0`'LEVEL_ZERO(,``,'') dnl
COMMA_REPLICATE(LEVEL,`LIST_DECL_AREA')`'LEVEL_ZERO(,``,'')dnl
COMMA_REPLICATE(LEVEL,`LIST_INDEX_DECL')
      include "fpvm3.h"
      include "hpfc_commons.h"
SIMPLE_REPLICATE(LEVEL,`DO_LOOP')
      if (i`'LEVEL.ne.MYLID) then
         SENDCHANNELS(i`'LEVEL) = SENDCHANNELS(i`'LEVEL) + 2
      endif
SIMPLE_REPLICATE(LEVEL,`ENDDO_LOOP')
      hpfc fake bcasts=hpfc fake bcasts+1
      end)
      subroutine build_name(hpfc broadcast,LEVEL)(
     $     i0`'LEVEL_ZERO(,``,'') dnl
COMMA_REPLICATE(LEVEL,`LIST_DECL_AREA'))
      integer
     $     i0, dnl
COMMA_REPLICATE(LEVEL,`LIST_DECL_AREA')`'LEVEL_ZERO(,``,'')dnl
COMMA_REPLICATE(LEVEL,`LIST_INDEX_DECL')`'LEVEL_ZERO(,``,'')
     $     info
      include "fpvm3.h"
      include "hpfc_commons.h"
SIMPLE_REPLICATE(LEVEL,`DO_LOOP')
      if (i`'LEVEL.ne.MYLID) then
         debug(write (unit=0, fmt=*)
     $        "BRD to ", i`'LEVEL, SENDCHANNELS(i`'LEVEL))
         call pvmfsend(NODETIDS(i`'LEVEL), 
     $        SENDCHANNELS(i`'LEVEL), info)
         SENDCHANNELS(i`'LEVEL) = SENDCHANNELS(i`'LEVEL) + 2
      endif
SIMPLE_REPLICATE(LEVEL,`ENDDO_LOOP')
      end
      subroutine build_name(hpfc remapbrd,LEVEL)(
     $     an, i0`'LEVEL_ZERO(,``,'') dnl
COMMA_REPLICATE(LEVEL,`LIST_DECL_AREA'))
      integer
     $     an, i0, dnl
COMMA_REPLICATE(LEVEL,`LIST_DECL_AREA')`'LEVEL_ZERO(,``,'')dnl
COMMA_REPLICATE(LEVEL,`LIST_INDEX_DECL')`'LEVEL_ZERO(,``,'')
     $     info
      include "fpvm3.h"
      include "hpfc_commons.h"
      external HPFC TWIN P
      logical HPFC TWIN P
SIMPLE_REPLICATE(LEVEL,`DO_LOOP')
      if (i`'LEVEL.ne.MYLID.and..not.HPFC TWIN P(an, i`'LEVEL)) then
         debug(write (unit=0, fmt=*)
     $        "BRD to ", i`'LEVEL, SENDCHANNELS(i`'LEVEL))
         call pvmfsend(NODETIDS(i`'LEVEL), 
     $        SENDCHANNELS(i`'LEVEL), info)
         SENDCHANNELS(i`'LEVEL) = SENDCHANNELS(i`'LEVEL) + 2
      endif
SIMPLE_REPLICATE(LEVEL,`ENDDO_LOOP')
      end')dnl
GENERIC_BROADCAST(0)
GENERIC_BROADCAST(1)
GENERIC_BROADCAST(2)
GENERIC_BROADCAST(3)
dnl GENERIC_BROADCAST(4)
dnl GENERIC_BROADCAST(5)
dnl GENERIC_BROADCAST(6)
dnl GENERIC_BROADCAST(7)
c
c that is all
c
