#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Authors:
# - Ronan Keryell <ronan.keryell@hpc-project.com>
# - Grégoire Péan <gregoire.pean@hpc-project.com>
#

'''

Par4All setup script.

On Ubuntu/Debian you need to have these packages installed for running this script: libc6 python libncurses5 libreadline5 subversion cproto build-essential bison flex libreadline5-dev libtool autoconf \
libmcrypt-dev libmcrypt4 cproto indent gfortran tex4ht texlive-latex-extra swig git-core python-ply automake python-dev libgmp3-dev libmpfr-dev python3.1 fakeroot --
For running the binaries installed by this script, you only need these packages: libc6 libncurses5 libreadline5 python python-ply libmcrypt4 build-essential gfortran python3.1

'''
#(Optional packages for compiling non working GUIs: emacs23 tk8.5 sun-java6-jdk)

import string, sys, os, re, optparse, tempfile, shutil, traceback
from p4a_util import *
from p4a_rc import *
from p4a_git import *
from p4a_version import *
from p4a_opts import *

import p4a_setup


def main():
    '''The function called when this program is executed by its own.'''

    parser = optparse.OptionParser(description = __doc__, usage = "%prog [options]")

    p4a_setup.add_module_options(parser)

    add_common_options(parser)

    (options, args) = parser.parse_args()

    if process_common_options(options, args):
        p4a_setup.main(options, args)


if __name__ == "__main__":
    try:
        main()
    except p4a_error:
        (t, e, tb) = sys.exc_info()
        error(str(e))
        debug("".join(traceback.format_exception(t, e, tb)))
        if e.code == -2:
            error("Interrupted")
        else:
            error("To get verbose output, try passing -v, -vv, or -vvv", log = False)
            error("You can also try running again with --rebuild --clean (-RC) and see if it picks up", log = False)
            if report_enabled():
                send_report_email()
        sys.exit(e.code)
    except EnvironmentError: # IOError, OSError.
        (t, e, tb) = sys.exc_info()
        error(str(e))
        debug("".join(traceback.format_exception(t, e, tb)))
        if report_enabled():
                send_report_email()
        sys.exit(e.errno)
    except KeyboardInterrupt:
        error("Interrupted")
    except SystemExit:
        raise
    except:
        (t, e, tb) = sys.exc_info()
        error("Unhandled " + e.__class__.__name__ + ": " + str(e))
        error("".join(traceback.format_exception(t, e, tb)))
        if report_enabled():
            send_report_email()
        else:
            error("You may report this error to Par4All support by running again using --report", log = False)
        sys.exit(255)
    finally:
        stop_all_spinners() # Make sure no spinner thread is hindering script from exiting.


# Some Emacs stuff:
### Local Variables:
### mode: python
### mode: flyspell
### ispell-local-dictionary: "american"
### tab-width: 4
### End:
