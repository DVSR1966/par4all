#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Authors:
# - Ronan Keryell <ronan.keryell@hpc-project.com>
# - Grégoire Péan <gregoire.pean@hpc-project.com>
#

'''

Par4All setup script.

On Ubuntu/Debian you need to have these packages installed for running this script: libc6 python libncurses5 libreadline5 subversion cproto build-essential bison flex libreadline5-dev libtool autoconf \
libmcrypt-dev libmcrypt4 cproto indent gfortran tex4ht texlive-latex-extra swig git-core python-ply automake python-dev libgmp3-dev libmpfr-dev python3.1 fakeroot --
For running the binaries installed by this script, you only need these packages: libc6 libncurses5 libreadline5 python python-ply libmcrypt4 build-essential gfortran python3.1

'''
#(Optional packages for compiling non working GUIs: emacs23 tk8.5 sun-java6-jdk)

import string, sys, os, re, optparse, tempfile, shutil
from p4a_util import *
from p4a_rc import *
from p4a_git import *
from p4a_version import *

import p4a_setup


def main():
    '''The function called when this program is executed by its own.'''

    parser = optparse.OptionParser(description = __doc__, usage = "%prog [options]")

    p4a_setup.add_module_options(parser)
    
    main_group = optparse.OptionGroup(parser, "General Options")
    
    main_group.add_option("--verbose", "-v", action = "count", default = get_verbosity(),
        help = "Run in verbose mode (you can have several -v, such as -vvv which will display the most debugging information).")
    
    main_group.add_option("--no-color", action = "store_true", default = False,
        help = "Disable coloring of terminal output.")
    
    main_group.add_option("-V", dest = "script_version", action = "store_true", default = False,
        help = "Display script version and exit.")
    
    parser.add_option_group(main_group)

    (options, args) = parser.parse_args()

    if options.no_color:
        p4a_term.disabled = True
    
    set_verbosity(options.verbose)
    
    if options.script_version:
        print(guess_file_revision(__file__))
        return

    p4a_setup.main(options, args)


if __name__ == "__main__":
    try:
        main()
    except p4a_error:
        error(str(sys.exc_info()[1]))
        error("To get verbose output from the build, try passing -v, -vv, or -vvv")
        error("You can also try running again with --rebuild --clean (-RC) and see if it picks up")
        sys.exit(1)
    except:
        raise
    finally:
        stop_all_spinners() # Make sure no spinner thread is hindering script from exiting.
    

# Some Emacs stuff:
### Local Variables:
### mode: python
### mode: flyspell
### ispell-local-dictionary: "american"
### tab-width: 4
### End:
