add[3] {
	SIMD_ADDB: 8,QI_REF QI_REF QI_REF,-7;
	SIMD_ADDW: 4,HI_REF HI_REF HI_REF,-3;
	SIMD_ADDD: 2,SI_REF SI_REF SI_REF,-1;
	SIMD_ADDPS: 4,SF_REF SF_REF SF_REF,-3;
}

add: = REFERENCE + REFERENCE REFERENCE ;
add: = REFERENCE + REFERENCE CONSTANT ;
add: = REFERENCE + CONSTANT REFERENCE ;
add: = REFERENCE REFERENCE : ,,0 ;

sub[3] {
	SIMD_SUBB: 8,QI_REF QI_REF QI_REF,-7;
	SIMD_SUBW: 4,HI_REF HI_REF HI_REF,-3;
	SIMD_SUBD: 2,SI_REF SI_REF SI_REF,-1;
	SIMD_SUBPS: 4,SF_REF SF_REF SF_REF,-3;
}

sub: = REFERENCE - REFERENCE REFERENCE ;
sub: = REFERENCE - REFERENCE CONSTANT ;
sub: = REFERENCE - CONSTANT REFERENCE ;
sub: = REFERENCE REFERENCE : ,,0 ;

mul[3] {
	SIMD_MULB: 8,QI_REF QI_REF QI_REF,-7;
	SIMD_MULW: 4,HI_REF HI_REF HI_REF,-3;
	SIMD_MULPS: 4,SF_REF SF_REF SF_REF,-3;
}

mul: = REFERENCE * REFERENCE REFERENCE ;
mul: = REFERENCE * CONSTANT REFERENCE ;
mul: = REFERENCE * REFERENCE CONSTANT ;
mul: = REFERENCE REFERENCE : ,,1 ;

div[3] {
	SIMD_DIVB: 8,QI_REF QI_REF QI_REF,-7;
	SIMD_DIVW: 4,HI_REF HI_REF HI_REF,-3;
	SIMD_DIVD: 2,SI_REF SI_REF SI_REF,-1;
	SIMD_DIVPS: 4,SF_REF SF_REF SF_REF,-3;
}

div: = REFERENCE / REFERENCE REFERENCE ;
div: = REFERENCE / CONSTANT REFERENCE ;
div: = REFERENCE / REFERENCE CONSTANT ;

gt[3] {
	SIMD_GTB:  8, SI_REF QI_REF QI_REF,-7;
	SIMD_GTW:  4, SI_REF HI_REF HI_REF,-3;
	SIMD_GTD:  2, SI_REF SI_REF SI_REF,-1;
	SIMD_GTPS: 4, SI_REF SF_REF SF_REF,-3;
}

gt: = REFERENCE > REFERENCE REFERENCE ;
gt: = REFERENCE > CONSTANT REFERENCE ;
gt: = REFERENCE > REFERENCE CONSTANT ;

phi[4] {
	SIMD_GTB:  8, QI_REF  SI_REF QI_REF QI_REF,-7;
	SIMD_GTW:  4, HI_REF  SI_REF HI_REF HI_REF,-3;
	SIMD_GTD:  2, SI_REF  SI_REF SI_REF SI_REF,-1;
	SIMD_GTPS: 4, SF_REF  SI_REF SF_REF SF_REF,-3;
}

phi: = REFERENCE PHI REFERENCE REFERENCE REFERENCE;
phi: = REFERENCE PHI REFERENCE CONSTANT REFERENCE;
phi: = REFERENCE PHI REFERENCE REFERENCE CONSTANT;
phi: = REFERENCE PHI CONSTANT REFERENCE REFERENCE;
