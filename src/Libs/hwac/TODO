* pre
+ inlining, full_unroll, dead code elim, flatten_code
+ image reuse
+ scalar deps with proper effects
- check => ok => deadcode (#define)

* input
+ may skip unrelated statements?
+ deal with |= ||= and similars
+ detect redundant operations? replace them with copies?
- what about full expressions: aipo_x() || aipo_y() || aipo_z()? atomizer?
- check that there are references where expected?
- handle different type of images (e.g. distinct BPP)
- check/remove more implicit hypothesis

* code
+ cleanup data structures?
- record scalar deps in dag...
- remove type ctxcontent?
- should make elementary ops absdiff(x,y) = abs(diff(x, y)) (no.. unsigned)
- and then match back of necessary to available low level ops.

* output
+ symmetry (flipping)
+ compaction
+ handle wiring
+ tell pipsdbm about generated files
+ pipe overflow
+ show DAG!
+ select node shape depending on hardware?
+ add more comments to generated code
+ improve generated comments
+ if only one image is used as input, put it anyway on both sides?
  may help some schedules if there are multiple successors.
+ use commutator to detect more redundancy
- add checks in generated code (img size and so)?
- parametric img size/depth? same as code?
- the generated code is just a file to pips. ok???
- must not handle copies through the pipeline... (see freia_17 for instance)
- freia_skip_07 should be in 1 pass?
- freia_aa0a and freia_aa1a should be 1 pass instead of 3?
- should also detect "duplicate" measurements with a copy of the scalars
- should detect "included" measurements (maxcoord includes max)

* post
+ remove malloc/free if not used
+ cleanup declarations

* validation
- check all AIPO
+ add more (elementary) tests?

* bugs
+ allocs may be in the middle of the calls
- reuse of images in some cases
