# $Id$

TARGET	= sc

DERIVED_CFILES = sc_gram.c sc_lex.c

INC_CFILES = 	sc_alloc.c \
	        sc_projection.c \
	        sc_read.c \
	        sc.c \
	        sc_integer_analyze.c \
	        sc_feasibility.c \
	        sc_intersection.c \
	        sc_integer_projection.c \
	        sc_normalize.c \
	        sc_build_sc_nredund.c \
	        sc_oppose.c \
	        sc_triang_elim_redond.c \
	        sc_elim_redund.c \
	        sc_elim_simple_redund.c \
		sc_insert_eq.c \
		sc_transformation.c\
		sc_var.c \
	        sc_eval.c \
		sc_unaires.c \
		sc_error.c \
		sc_io.c \
		sc_new_loop_bound.c \
		sc_simplexe_feasibility.c \
		sc_debug.c \
		sc_janus_feasibility.c

LIB_CFILES= $(INC_CFILES) $(DERIVED_CFILES)

OTHER_HEADERS=	sc-local.h \
		sc-private.h \
		sc_gram.y \
		sc_lex.l

DERIVED_HEADERS = sc_gram.h

LIB_TARGET	= lib$(TARGET).a

INC_TARGET	= $(TARGET).h

################################################################## COMMON STUFF

ifdef LINEAR_ROOT
ROOT    = $(LINEAR_ROOT)
else
ROOT    = ../..
endif
PROJECT = linear
include $(ROOT)/makes/main.mk


YY2SYST	= sed '/extern char \*malloc/d;/^FILE *\*/s,=[^,;]*,,g;\
	s/YY/SYST_/g;s/yy/syst_/g;' 

sc_lex.c: sc_lex.l sc_gram.h
	$(SCAN) $< | $(YY2SYST)	> $@

sc_gram.c: sc_gram.y
	$(PARSE) -d $<
	$(YY2SYST) y.tab.c > sc_gram.c
	$(YY2SYST) y.tab.h > sc_gram.h
	$(RM) y.tab.c y.tab.h

sc_gram.h: sc_gram.c

clean: local-clean

local-clean:
	$(RM) $(DERIVED_HEADERS) $(DERIVED_CFILES)
