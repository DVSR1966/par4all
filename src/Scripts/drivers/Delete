#! /bin/sh

# Delete
#
# Delete removes a list of workspaces whose names are provided
# after the command, no matter which the current workspace is.
# Filename generation rules can be used to expres the workspace 
# name, provided that special characters are quoted.
#
# Exemples equivalents:
# Delete foo
# Delete foo.database
# Delete foo.database/
# Delete `pwd`/foo.database
# Delete = Delete *.database
#

if [ $# -eq 0 ] 
then 
  echo "$0: deleting all databases in $PWD"
  set *.database
fi

for WS 
do
  WS=`echo $WS | sed 's/\/$//'`
  # delete .PIPS_CURRENT_PROGRAM
  rm -f `dirname $WS`/$PIPS_CURRENT_PROGRAM
  # so that both zzz.database and zzz are good workspace names
  WS=`dirname $WS`/`basename $WS .database`.database
  if [ ! -d "$WS" ]
  then
    echo $0: No such directory \`$WS\' >&2
    exit 2
  else
  # echo rm -r $WS
    if /bin/rm -r $WS
    then
      true
    else
      echo Cannot remove $WS >/dev/tty
      exit 3
    fi
  fi
done
