#! /bin/sh
#
# $RCSfile: hpfc_compile,v $ version $Revision$
# $Date: 1995/03/23 17:29:58 $, 
# got on %D%, %T%
#

script=`basename $0`
VERBOSE=':'
DEBUG=':'
DELETE=':'
MAKE=':'
PIPS='pips'
TMP="/tmp/hpfc_tmp.`hostname`.$$"
INSTALL="$HPFC_TOOLS/hpfc_install"
PIPSARGS='-s MUST_REGIONS -p HPFC_CLOSE'

unset HPFFILE MODULE WORKSPACE
rm -f $TMP.*

# for suff in a b c d e i k n p s t y ;
# do 
#   echo "      subroutine hpfc$suff"
#   echo "      print *, 'hpfc$suff'"
#   echo "      end"
# done > $TMP.1

#
# functions

verbose()
{
  echo "$script: $@"
}

debug()
{
  echo "$script: $@" 1>&2
}

#
# not very convincing. stdin is taken as stdout and stderr...

output_tty()
{
  if tty -s
  then
    tty
  else
    echo /dev/null
  fi
}

STDOUT=`output_tty`
STDERR="$STDOUT"

default_module()
{
  sed -n 's,^       *[Pp][Rr][Oo][Gg][Rr][Aa][Mm] \([^ ]*\),\1,p' $1 |
  tr 'a-z' 'A-Z'
}

#
# source ~/.hpfcrc if exists. May be used to modify the defaults

[ -r "$HOME/.hpfcrc" ] && . $HOME/.hpfcrc

#

usage()
{
  cat <<-EOF
	Usage: $script [-vDdhMqs] [ -w ws ] [ -m mod ] [-n n | file[.f]]
	  version is $Revision$
	  -v: verbose about what is being done
	  -D: debug messages
	  -d: delete the pips database
	  -h: help, this help is displayed
	  -M: make (compile and link) the generated codes
	  -q: quiet  (stdout=/dev/null)
	  -s: silent (stderr=/dev/null - for demonstations:-)
	  -w ws: workspace ws is used for pips and hpfc
	  -m mod: module mod is compiled (should be the main)
	  -n n: source number n
	  file: source file
	EOF
  exit ${1:-1}
}

while getopts vDdMqsn:hm:w: OPT
do
  case $OPT in
    v) VERBOSE='verbose' ;;
    D) DEBUG='debug' ; 
       STDOUT=`output_tty` ; 
       STDERR="$STDOUT" ;;
    d) DELETE='Delete' ;;
    M) MAKE='gmake' ;;
    q) STDOUT='/dev/null' ;;
    s) STDERR='/dev/null' ;;
    n) HPFFILE="$HPFC_DIR/Tests/hpftest$OPTARG.f" ;;
    m) MODULE="$OPTARG" ;;
    w) WORKSPACE="$OPTARG" ;;
    h|*) usage 1 ;;
  esac
done

shift `expr $OPTIND - 1`

[ "$#" -eq 1 ] && { HPFFILE=`dirname $1`/`basename $1 .f`.f ; shift; }
[ "$#" -eq 0 ] || usage 2

[ "$MODULE" ] || MODULE=`default_module $HPFFILE .f`
[ "$WORKSPACE" ] || WORKSPACE=`echo $MODULE | tr 'A-Z' 'a-z'`

$VERBOSE "applying hpfc on file $HPFFILE"
$DEBUG "`type $PIPS`"

set -e
$PIPS -f $HPFFILE $PIPSARGS -m $MODULE $WORKSPACE > $STDOUT 2> $STDERR
set +e

$VERBOSE "installing generated codes"

[ -d "$WORKSPACE.hpfc" ] || mkdir $WORKSPACE.hpfc
${INSTALL} -b $WORKSPACE.database -r $HPFFILE -i -t $WORKSPACE.hpfc -n $MODULE

[ "$DELETE" = : ] ||
{
  $VERBOSE "deleting $WORKSPACE workspace"
  $DELETE $WORKSPACE
}

[ "$MAKE" = : ] ||
{
  $VERBOSE "making $WORKSPACE"
  (cd $WORKSPACE.hpfc ; $MAKE all) > $STDOUT 2> $STDERR
}

$VERBOSE "done"

#
# that is all
#
