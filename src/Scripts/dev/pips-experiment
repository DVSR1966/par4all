#!/bin/sh

# Francois Irigoin, 28 May 1993

# Bugs:
#  - only one file-name argument is accepted because of the existence test [ -f $FILE_NAMES ];
#    a loop should be programmed to check that every file exists; CA, FI: 7 July 1993
#  - the default options should not be used if the workspace already exists; it is
#    usually more convenient to restart execution with the same options without having
#    to set them again; also, default options are quite arbitrary! FI, 7 July 1993; changed;

USAGE="Usage: $0 [-d] [-f source_file[,source_file]...] [-s selected_rule[,selected_rule]...] [-p performed_rule[,performed_rule]...] [-b build_resource] workspace"

if [ $# -eq 0 ]
then	echo $USAGE >&2
	exit 2
fi

FILE_NAMES=""

# Default options:

DEFAULT_TO_BE_SELECTED="tfinter pcinter rsdg"
# TO_BE_PERFORMED="privatizer partial_eval"
DEFAULT_TO_BE_PERFORMED=""
DEFAULT_TO_BE_BUILT="dg"
DELETE="FALSE"

# retrieve parameters:

while getopts ds:b:p:f: opt
do
	case $opt in
	b)	TO_BE_BUILT=$OPTARG;;
	d)	DELETE="TRUE";;
	f)	FILE_NAMES="$FILES_NAMES $OPTARG";;
	p)	TO_BE_PERFORMED="$TO_BE_PERFORMED $OPTARG";;
	s)	TO_BE_SELECTED="$TO_BE_SELECTED $OPTARG";;
	\?)	echo $USAGE >&2
		exit 2;;
	esac
done
shift `expr $OPTIND - 1`
if [ $# -eq 1 ]
then
	WORKSPACE=$1
	shift
else
	echo $USAGE >&2
	exit 1
fi

# exploit default options if a new workspace is created

if [ ! -d $WORKSPACE.database -a "$DELETE" != "TRUE" ]
then
	if [ -z "$FILE_NAMES" ]
	then
		FILE_NAMES=$WORKSPACE.f
	fi
	
	if [ -z "$TO_BE_SELECTED" ]
	then
		TO_BE_SELECTED=$DEFAULT_TO_BE_SELECTED;
	fi
fi
	
# exploit these default options inconditionnally

if [ -z "$TO_BE_BUILT" ]
then
	TO_BE_BUILT=$DEFAULT_TO_BE_BUILT;
fi

if [ -z "$TO_BE_PERFORMED" ]
then
	TO_BE_PERFORMED=$DEFAULT_TO_BE_PERFORMED;
fi

# see if the workspace must be initialized, re-initialized or just open

if [ -d $WORKSPACE.database ]
then
	if [ "$DELETE" = "TRUE" ]
	then
		for file in $FILE_NAMES
		do
			if [ ! -f $file ]
			then
				echo no such source file "$file"
				exit
			fi
		done
		echo Init -d -f "$FILE_NAMES" $WORKSPACE
		Init -d -f "$FILE_NAMES" $WORKSPACE
		stf-workspace $WORKSPACE
	else
		echo Init $WORKSPACE
		Init $WORKSPACE
	fi
else
	for file in $FILE_NAMES
	do
		if [ ! -f $file ]
		then
			echo no such source file "$file"
			exit
		fi
	done
	echo Init -f "$FILE_NAMES" $WORKSPACE
	Init -f "$FILE_NAMES" $WORKSPACE
	stf-workspace $WORKSPACE
fi

# select optional rules

if [ ! -z "$TO_BE_SELECTED" ]
then
	echo Select $TO_BE_SELECTED
	Select $TO_BE_SELECTED
fi

# loop on modules

for source in $WORKSPACE.database/*.f
do
	module=`basename $source .f`
	module=`echo $module | tr a-z A-Z`
	if [ -z "$TO_BE_PERFORMED" ]
	then
		command="Pips -m $module -b $TO_BE_BUILT"
	else
		command="Pips -m $module -p $TO_BE_PERFORMED -b $TO_BE_BUILT"
	fi
	echo $command
	if $command
	then
		echo Pips succeeded for module $module
	else
		echo Pips failed for module $module
		exit
	fi
#	exit
done

