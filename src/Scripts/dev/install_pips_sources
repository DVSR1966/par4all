#! /bin/sh
#
# $Id$
# 
# $Log: install_pips_sources,v $
# Revision 1.15  1997/05/22 06:55:35  coelho
# *** empty log message ***
#
# Revision 1.14  1997/05/20 14:49:56  coelho
# debug and verbose off.
#
# Revision 1.13  1997/05/20 14:48:40  coelho
# ok for both RCS and SCCS?
#
# Revision 1.12  1997/03/26 13:50:25  coelho
# RCS headers.
#
#

script=`basename $0`
verb=':'
debg=':'

#verb='verbose'
#debg='debug'

unset source_dir target_dir comment options clean_cs files 
only_diff=':'

#
# prefer rcs files
#

subdir=RCS
export subdir

verbose()
{
  echo "$script:" "$@" 
}

debug()
{
  echo "$script:" "$@" 1>&2
}

error()
{
  echo "$script:" "$@" 1>&2
  exit 2
}

is_rcs()
{
   test $subdir = RCS
   return $?
}

is_sccs()
{
   test $subdir = SCCS
   return $?
}

cs_tell()
{
    is_sccs && sccs tell
    is_rcs && { rlog -L -R RCS/* | sed 's/RCS\/\([a-zA-Z0-9-_\.]*\),v/\1/g' ;}
}

cs_all()
{
    is_sccs && { ls SCCS/s.* | sed 's,SCCS/s\.,,g' }
    is_rcs && { ls RCS/*,v | sed 's/RCS\/\(.*\),v/\1/g' }
}

move_old()
{
    for i in "$@"
    do
	$verb moving ${i} RCS/SCCS file to OLD
	is_sccs && mv SCCS/s.${i} OLD/
	is_rcs && mv RCS/${i},v OLD/
	rm -f ${i}
    done
}

usage()
{
  cat 1>&2 <<-EOM
	Usage: install_pips_sources [-hvdaDr] [-y comment] [-t dir] [-s dir] files
	  version $Revision$
	  -h: help
	  -v: verbose
	  -d: install only if different. (default)
	  -a: install all files.
	  -r: clean not installed files from SCCS/RCS
	  -D: debug
	  -t dir: target directory (default image of source in \$PIPS_ROOT/Src)
	  -s dir: source directory (default .)
	  -y comment: comment for the installation
	EOM
  exit ${1:-1}
}


#
# get options
#

while getopts hvDdart:s:y: OPT
do
  case $OPT in
    h) usage 0 ;;
    v) verb='verbose' ; 
       options="$options -v" ;;
    D) debg='debug' ; 
       options="$options -D" ;;
    d) only_diff=':' ; 
       options="$options -d" ;;
    a) only_diff= ; 
       options="$options -a" ;;
    r) clean_cs='yes' ; 
       options="$options -r" ;;
    t) target_dir="$OPTARG" ;;
    s) source_dir="$OPTARG" ;;
    y) comment="$OPTARG" ;;
    *) usage 1 ;;
  esac
done

shift `expr $OPTIND - 1`

#
# default values
#

[ "$comment" ] || comment='none'
[ "$source_dir" ] || source_dir=`pwd`
[ "$target_dir" ] || 
  target_dir=$PIPS_ROOT/Src/`echo "$source_dir" | sed 's,.*/\([^/]*/[^/]*\)$,\1,'`

$debg "source directory is $source_dir"
$debg "target directory is $target_dir"

#
# needed subdirectories...  
#

$verb "entering directory $target_dir [$@]"

[ -d "$target_dir" ] || mkdir $target_dir 
cd $target_dir
[ -d OLD ] || mkdir OLD

[ -d SCCS ] && subdir=SCCS
[ -d $subdir ] || mkdir $subdir

[ "$only_diff" ] ||
{
  #
  # EDIT ALL
  #
  is_sccs && sccs edit SCCS 
  is_rcs && co -l RCS/*
  rm -f `cs_tell` ; 
}

#
# main loop over all items...
#

for item
do
  $verb "dealing with $item"
  src_item="$source_dir/$item"
  trg_item="$target_dir/$item"

  if [ "`echo $item | sed 's,[^/],,g'`" ] 
  then
    #
    # ITEM IN SUBDIRECTORY
    #
    $verb "something in a directory, recursing"
    eval $0 $options -y "$comment" \
    	-s "`dirname $src_item`" -t "`dirname $trg_item`" \
	"`basename $item`"
    $debg "end of recursion"
    continue
  fi

  # else

  if [ -d "$src_item" ]
  then
    #
    # SUBDIRECTORY
    #
    $verb "directory, recursing"
    $0 $options -y "$comment" -s "$src_item" -t "$trg_item" \
    	`cd $src_item ; ls -d * | sed '/~/d;/SCCS/d;/RCS/d;/OLD/d'`
    $debg "end of recursion"
    continue
  fi

  #else
  
  files="$files $item"

  if [ -f $src_item ] 
  then
    if [ "$only_diff" -a -f $trg_item ]
    then

      #
      # CS EDIT
      #
      cmp -s $src_item $trg_item  && continue
      is_sccs && sccs edit $item 
      is_rcs && co -l $item
      rm -f $item
    fi

    cp $src_item $trg_item

    if [ -f "$target_dir/SCCS/s.$item" -o -f "$target_dir/RCS/$item,v" ]
    then

      #
      # CS DELTA
      #
      is_sccs && sccs delget -y"$comment" "$item"
      is_rcs && ci -u -m"$comment" "$item" 
    else

      #
      # CS CREATION
      #
      is_sccs && {
	sccs create "$item"
	cmp -s $item ,$item && rm -f ,$item
      }
      is_rcs && { 
	ci -u "$item"
	rcs -ko "$item"
      }
    fi
  else
    error "$item is neither a file nor a directory"
  fi
done

#
# some files have desappeared from the sources...
#
LOST_files="`cs_tell`"
[ "$LOST_files" ] &&
{
  $verb "no more $LOST_files"
  is_sccs && sccs unedit $LOST_files
  is_rcs && ci $LOST_files
  rm -f $LOST_files

  #
  # clean the SCCS directory as well

  move_old $LOST_files
}

#
# ???
#
[ "$clean_cs" ] && 
{
  [ "`cs_tell`" ] && error "some files being edited!"

  for item in `cs_all` ;
  do
    $debg "whether $item was installed"
    [ ! "`echo $files | grep $item`" ] && 
	move_old $item
  done
}

$verb "done"

#
# end of file.
#
