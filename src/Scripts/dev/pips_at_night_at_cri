#! /usr/local/bin/bash
#
# $Id$
#
# what to do at night from the pips account at cri on chailly.
#



#
# SET some variables

script=/projects/Pips/Production/Utils/pips_at_night
mailto=pips_validation
remote=rsh
verb=:
add=



#
# FUNCTIONS

function usage()
{
    cat <<-EOF 
	$0 [-a address] [-dDhnvV] [keyword]
	    -a address: email address for messages
	    -d: debug script (just do echo)
	    -D: debug forwarded to pips_at_night
	    -h: this help
	    -v: verbose
	    -V: verbose forwarded to pips_at_night
	    -n: do nothing in pips_at_night
	    keyword: usual|long|short|compile|validate|debug
	    return status is ${1:-1}
	EOF
    exit ${1:-1}
}

function verb()
{
    echo "[pips_at_night_at_cri]" "$@" `date`;
}



#
# OPTIONS

while getopts a:dDhvVn opt
do
    case ${opt} in
        a) mailto=${OPTARG} ;;
	d) script=echo ;;
	D) add=${add}D ;;
	h) usage 0 ;;
	v) verb=verb ;;
	V) add=${add}v ;;
	n) add=${add}CNLPV ;;
	*) usage 1;;
    esac
done

shift $(( $OPTIND - 1 ))

job=${1:-usual}



# 
# to get the ENVIRONMENT when launched by cron...
# done *after* getting options because the args are destroyed somewhere...

test -f ~/.bashrc && source ~/.bashrc



#
# FUNCTIONS for the various jobs to be performed.


# what host dir archs
function doit()
{
    local what=$1 host=$2 dir=$3 archs=$4

    $verb "[doit $#] ${script} ${mailto}" \""$@"\"

    ${PIPS_PING:-ping} ${host} && ${remote} ${host} \
	${script} -${what}${add}va ${mailto} -d ${dir} -c \""${archs}"\"
}


# GENERAL cleaning:  host dir archs
function general()
{
    ${verb} "[general] $@"
    doit CNLPV "$@" ;
}


# COMPILE: host dir archs
function compile()
{
    ${verb} "[compile] $@"
    doit GV "$@" ;
}


# VALIDATE (*** in background ***): host dir archs
function validate()
{
    ${verb} "[validate] $@"
    doit GCNLP "$@" &
    ${verb} "[validate] background pid: $!"
}


# COmpile and VALIDate: host dir arch
function covalid()
{
    ${verb} "[covalid] $@"
    compile "$@" ;
    validate "$@" ;
}



#
# DO THE JOB!


case ${job} in

    usual)
	${verb} "USUAL stuff" ;
	general chailly 	/projects/Pips GNUSOL1 ;
	covalid recanati 	/projects/Pips/Experiments2 GNUSOL2LL ;
	covalid chailly 	/projects/Pips GNUSOL1 ;
	covalid coulommiers 	/tmp LINUXI86 ;
	compile recanati 	/projects/Pips/Experiments2 SOL2LL ;
	compile chailly 	/projects/Pips "GNU SUN4" ;;

    long)
	${verb} "LONG stuff (more compilations)" ;
	general chailly 	/projects/Pips GNUSOL1 ;
	covalid chailly 	/projects/Pips GNU ;
	covalid recanati 	/projects/Pips/Experiments2 GNUSOL2LL ;
	covalid coulommiers 	/tmp LINUXI86 ;
	compile recanati 	/projects/Pips SOL2LL ;
	compile chailly 	/projects/Pips "GNUSOL1 SUN4 GPROF" ;;

    short)
	${verb} "SHORT stuff (one validation)" ;
	covalid chailly 	/projects/Pips GNUSOL1 ;
	compile recanati 	/projects/Pips/Experiments2 GNUSOL2LL ;
	compile coulommiers 	/tmp LINUXI86 ;;

    compile)
	${verb} "COMPILE stuff" ;
	compile coulommiers 	/tmp LINUXI86 ;
	compile chailly 	/projects/Pips "GNU GNUSOL1 SUN4 GPROF" ;
	compile recanati 	/projects/Pips "GNUSOL2LL SOL2LL" ;;

    validate)
	${verb} "VALIDATE stuff (with necessary compilation)" ;
	covalid chailly 	/projects/Pips GNUSOL1 ;
	covalid coulommiers 	/tmp LINUXI86 ;
	covalid recanati 	/projects/Pips/Experiments2 GNUSOL2LL ;;

    debug)
	${verb} "DEBUG stuff..." ;
	validate chailly 	/projects/Pips GNUSOL1 ;;

    *)
	${verb} "unexpected job=${job}" ;
	usage 2 ;;

esac



#
# WAIT...

${verb} waiting

wait

${verb} done



# DONE
#
