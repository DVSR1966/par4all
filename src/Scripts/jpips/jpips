#!/bin/sh
#
# $Id$
#
# a shell wrapper for "JPips", the java-based pips interface.
#

usage()
{
    cat <<-EOF >&2
	jpips [-m menu] [-hnde]
	-m menu: the type of menu that should be used (default: test)
	-h: some help
	-n: no console with jpips
	-d: debug
	-e: launched by emacs
EOF
}

error()
{
    ret=${1}
    shift
    echo "jpips: $@" >&2
    usage
    exit ${ret}
}

unset jpips forward menu_type

props="";
java_root=${JAVA_ROOT:-/usr/local/java1.2}
jar=jpips.jar
gif=DownArrow.gif

while getopts m:hnde opt
do
    case ${opt} in
	m) menu_type=$OPTARG ;;
	h) usage ;;
	n) forward="${forward} -n" ;;
	d) props="${props} -Djava.compiler=NONE";;
	e) props="${props} -Djpips.emacs=true";;
	*) error 1 "unexpected option ${opt}" ;;
    esac
done

shift `expr $OPTIND - 1`

forward="${forward} $@"

# default menu is jpips_menus.basic.
men=jpips_menus.${menu_type:-basic}

#
# which jpips.zip file

if [ -f ${jar} ]
then
    jpips=${jar}
else
    if [ -f ${PIPS_ROOT}/Share/${jar} ]
    then
	jpips=${PIPS_ROOT}/Share/${jar}
    fi
fi

[ "$jpips" ] || error 2 "cannot find jpips.jar"

#
# which DownArrow.gif file

if [ -f ${gif} ]
then
    props="${props} -Djpips.downarrow=${gif}"
else
    if [ -f ${PIPS_ROOT}/Share/${gif} ]
    then
	props="${props} -Djpips.downarrow=${PIPS_ROOT}/Share/${gif}"
    fi
fi

#
# which menu

if [ -f ${men} ]
then
    props="${props} -Djpips.menus=${men}"
    unset men
else
    if [ -f ${PIPS_ROOT}/Share/${men} ]
    then
	props="${props} -Djpips.menus=${PIPS_ROOT}/Share/${men}"
	unset men
    fi
fi

[ ! "${men}" ] || error 3 "menu ${men} not found"

PATH="${JAVA_ROOT:-/usr/local/jdk1.2beta4}/bin:${PATH}"

#
# now do the job

if [ -d ${java_root} ] 
then
    java_bin="${java_root}/bin/"
else
    java_bin=''
fi

export CLASSPATH

# always as a shell...

TPIPS_IS_A_SHELL=1
export TPIPS_IS_A_SHELL

# verbose execution...
set -x
CLASSPATH=${jpips}:${java_root}/lib/classes.zip:${CLASSPATH}
exec ${java_bin}java ${props} JPips.JPips ${forward}
