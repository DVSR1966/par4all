#! /bin/sh
#
# $RCSfile: make_release,v $ (version $Revision$)
# $Date: 1997/03/26 17:51:54 $, 
#
# (c) Fabien COELHO 1996

# creates a release, with sources / executables ???
# namely a compressed tar file?

unset name dirs root trgt oths edit
tar=${PIPS_TAR:-gtar}
taropt=cf
make=${PIPS_MAKE:-gmake}
verb=:

verbose()
{ echo "$RCSfile: make_release,v $: $@" >&2;}

error()
{ ret=$1; shift; verbose "$@"; exit $ret;}

usage()
{
    ret=$1; shift
    cat <<-EOF
	$RCSfile: make_release,v $ (version $Revision$): $@
	usage: $RCSfile: make_release,v $ [options] dirs...
	 -h: print this help
	 -v: verbose
	 -e: edit list
	 -r dir: Root directory -- absolute!
	 -t dir: Target directory -- idem!
	 -s dir: Source directories -- with release!
	 -d dir: Other directories -- direct!
	 dirs: direct directories relative to root -- cleaned!
	EOF
    exit $ret
}

while getopts hver:s:t:d: opt
do
    case $opt in
	h) usage 0 "some help" ;;
	v) verb=verbose ; taropt=cvf ;;
	e) edit=1 ;;
	r) root=$OPTARG ;;
	s) dirs="$dirs $OPTARG" ;;
	t) trgt=$OPTARG ;;
	d) oths="$oths $OPTARG" ;;
	*) error 2 invalid option -$opt ;;
    esac
done

shift `expr $OPTIND - 1`

$verb going to $root
cd $root || error 3 "cannot cd to $root"
test -d $trgt || mkdir $trgt || error 4 "cannot mkdir $trgt"

#
# tmp files

tmp=$trgt/$RCSfile: make_release,v $.`whoami`.$$
rm -f $tmp.*

$verb in `pwd`

# Sources
for dir in $dirs 
do
    $verb "considering $dir (source)"
    $make --no-print-directory -C $dir \
	FWD_MKFLAGS='--no-print-directory' \
	FWD_ROOT="./$dir" \
	RELEASE_OUT=">> $tmp.tmp" release
    # all Makefiles should be collected...
    find ./$dir -name 'Makefile' -print >> $tmp.tmp
done 

# Direct 
for dir in $oths "$@"
do
    $verb "considering $dir (direct)"
    find ./$dir ! -type d -print >> $tmp.tmp
done

sed '/\/OLD/d;/\/SCCS/d;/\/RCS/d;/~/d;/\.database/d;/\.out$/d;/core/d;' \
    $tmp.tmp | sort -u > $tmp.list

#
# suggest editing the file now

test "$edit" &&
{
    echo "You can edit $tmp.list from $root to your convenience now!"
    echo "press return to continue"
    read x
}

#
# target 

$verb copying files in $trgt
$verb taring...

# well, the list is potentially too big for being put as an argument:-(
# hence this very slow version...
#
# cat $tmp.list |
# while read file 
# do
#     $tar $taropt $tmp.tar $file
# done
#
# or this one, which relies on the -T option (from GNU tar)

$tar $taropt $tmp.tar -T $tmp.list || error 5 "tar returned $? while taring"

# ls -l $tmp.tar 

$verb untaring in $trgt...
cd $trgt || error 6 "cannot cd to $trgt"
$tar xf $tmp.tar || error 7 "tar returned $? while untaring"

$verb done

#
# cleaning

rm -f $tmp.*

# end of $RCSfile: make_release,v $ 
#
