#! /bin/sh
#
# $RCSfile: make-pips,v $ version $Revision$
# $Date: 1996/07/11 12:51:30 $, 
#
# (c) Fabien COELHO July 1996
#
# changed a lot. it happens that -r does what you expect from it...
# for building pips on installation, do make-pips -b
# type '$RCSfile: make-pips,v $ -h' for help.

umask 2
script=`basename $0`
unset sides parts commands dirs libs pips newgen linear
verb=':'
job=$PIPS_MAKE

usage()
{
    ret=$1
    shift
    cat >&2 <<-EOF
	$script (version $Revision$): $@
	usage: $script [options] [targets]
	  -h: print this help and exit
	  -v: verbose
	  -N: do nothing, print what would be done
	 possible softs
	  -p: Pips (default)
	  -l: Linear
	  -n: Newgen
	 possible sides
	  -P: Production (default)
	  -R: Release
	  -D: Development
	 misc
	  -b: build (Production, Pips+Linear+Newgen, recompile)
	  -r: recompile (Production, Pips, clean+recompile)
	  -d dir: specifies a directory
	  -o file: log file to report to (default is /dev/tty)
	 targets: make targets to require (e.g. clean all recompile diff...)
EOF
    exit $ret
}

verbose()
{
    echo "$script: $@" >&2
}

while getopts hvNRPDplnbd:o: OPT
do
    case $OPT in
	h) usage 0 "here is some help!" ;;
	v) verb=verbose ;;
	N) job="echo $PIPS_MAKE" ;;
	R) sides="$sides RELEASEDIR" ;;
	P) sides="$sides SRCDIR" ;;
	D) sides="$sides DEVEDIR" ;;
	p) parts="$parts PIPS" ; pips='1' ;;
	l) parts="$parts LINEAR" ; linear='1' ;;
	n) parts="$parts NEWGEN" ; newgen='1' ;;
	b) commands="$commands recompile" ;
	   parts="NEWGEN LINEAR PIPS" ;
	   sides="SRCDIR" ;
	   pips='1' ; linear='1' ; newgen='1' ;;
	r) commands="$commands clean recompile" ;
	   parts="PIPS" ;
	   sides="SRCDIR" ;
	   pips='1' ; linear='1' ; newgen='1' ;;
	o) commands="FWD_REPORT=$OPTARG $commands" ;;
	d) dirs="$dirs $OPTARG" ;;
	*) usage 2 "invalid option" ;;
    esac
done
shift `expr $OPTIND - 1`

commands="$commands $@"

#
# defaults:

[ "$sides" ] || sides="SRCDIR"
[ "$parts" ] || { parts="PIPS" ; pips='1' ; }

[ "$pips" ] && libs="$libs Lib Passes Scripts Runtime $PIPS_ORDERED_LIBS"
[ "$linear" ] && libs="$libs $LINEAR_ORDERED_LIBS"
[ "$newgen" ] && libs="$libs $NEWGEN_ORDERED_LIBS"
[ "$libs" ]  && libs="FWD_DIRS=\"$libs\""

#
# build the directories to visit

$verb "sides=$sides"
$verb "parts=$parts"

for p in $parts ;
do 
    for s in $sides ;
    do
	dirs="$dirs "`eval echo \$"${p}_${s}"`
    done
done

#
# do the job here

$verb "dirs=$dirs"
$verb "commands=$commands"

for d in $dirs
do
    $verb "dealing with $d"
    $job -C $d $libs $commands
done

$verb "done"

# end of $RCSfile: make-pips,v $
#
