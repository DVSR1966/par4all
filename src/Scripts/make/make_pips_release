#! /bin/sh
#
# $RCSfile: make_pips_release,v $ (version $Revision$)
# $Date: 1996/09/02 22:47:30 $, 
#
# (c) Fabien COELHO 1996

unset pack what tz zip name tostrip strip

tar=${PIPS_TAR:-gtar}
taropt=cf
zip=${PIPS_ZIP:-"gzip -v9"}
verb=:

verbose()
{ echo "$RCSfile: make_pips_release,v $: $@" >&2;}

error()
{ ret=$1; shift; verbose "$@"; exit $ret;}

usage()
{
    ret=$1
    shift
    cat <<-EOF
	$RCSfile: make_pips_release,v $ (version $Revision$): $@
	usage: $RCSfile: make_pips_release,v $ [options] name
	  misc:
	    -h: this help
	    -v: verbose
	    -s: strip binaries
	    -z: tar and zip
	    -w: additional what options for make_release
	  release content:
	    -S: include sources (Include, Src, Utils)
	    -B arch: include executables for arch
	    -L arch: include libraries for this arch
	  software:
	    -p: Pips
	    -n: Newgen
	    -l: Linear
	    -e: Extern (other softs...)
	  name: target (a date & content-dependent default is provided)
	EOF
    exit $ret
}

what="-d Share -d Doc -d Runtime -d Examples" 

while getopts hvszw:SB:L:pnle opt
do
    case $opt in
	h) usage 0 some help ;;
	v) verb=verbose ; what="$what -v" ; taropt=cvf ;;
	s) strip='strip' ;;
	z) tz='1' ;;
	w) what="$what $OPTARG" ;;
	S) what="$what -s Src -d Include -d Utils" ; name="${name}S" ;;
	B) what="$what -d Bin/$OPTARG" ;
	   name="${name}B$OPTARG" ;
	   tostrip="$tostrip Bin/$OPTARG" ;;
	L) what="$what -d Lib/$OPTARG" ; name="${name}L$OPTARG" ;;
	p) pack="$pack PIPS" ; name="${name}p" ;;
	n) pack="$pack NEWGEN" ; name="${name}n" ;;
	l) pack="$pack LINEAR" ; name="${name}l" ;;
	e) pack="$pack EXTERN" ; name="${name}e" ;;
	*) usage 1 "invalid option -$opt" ;;
    esac
done

shift `expr $OPTIND - 1 `

# default:
name=${1:-${PIPS_DIR}/Release/pips_${name}_`date +"%y%m%d%H$RCSfile: make_pips_release,v $S"`}

$verb "target release name: $name"

test -d $name || mkdir $name || error 2 "cannot create directory $name"

#
# get the files

for p in $pack
do
    case $p in
	PIPS)   root=$PIPS_ROOT   ; trg=$name/Pips   ;;
	NEWGEN) root=$NEWGEN_ROOT ; trg=$name/Newgen ;;
	LINEAR) root=$LINEAR_ROOT ; trg=$name/Linear ;;
	EXTERN) root=$EXTERN_ROOT ; trg=$name/Extern ;;
    esac
    $verb "packing for $p ($root) in $trg:"
    $verb "what=$what"
    make_release -v -r $root -t $trg $what
done

#
# strip if required

test "$tostrip" -a "$strip" &&
{
    $verb stripping binaries
    for d in $tostrip ; do $strip $d/* ; done
}

#
# tar and zip if required

test "$tz" && 
{
    $verb "taring ($tar $taropt) and zipping ($zip)"
    cd `dirname $name`
    base=`basename $name`
    $tar $taropt $base.tar $base
    $zip $base.tar
    rm -rf $base
}

# end of $RCSfile: make_pips_release,v $
#
