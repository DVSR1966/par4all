
Points-to for call36


// Points To IN:
// q[*] -> *NULL_POINTER* , MAY
// q[*] -> _q_2[*][0] , MAY


// Points To OUT:
// q[*] -> _q_2[*][0] , EXACT

void call36(int i, int *q[10])
{

// Points To:
// q[*] -> *NULL_POINTER* , MAY
// q[*] -> _q_2[*][0] , MAY

   /* This is going to lead to _q_2[*][0] since any pointer points
        implicitly to an array */
   *q[i] = 3;

// Points To:
// q[*] -> _q_2[*][0] , EXACT

   return;
}

Proper effects with points-to for call36

void call36(int i, int *q[10])
{
//             <may be written>: _q_2[*][0]
//             <    is read   >: i q[i]
   /* This is going to lead to _q_2[*][0] since any pointer points
        implicitly to an array */
   *q[i] = 3;
   return;
}

Cumulated effects with points-to for call36

//             <may be read   >: q[*]
//             <may be written>: _q_2[*][0]
//             <    is read   >: i
void call36(int i, int *q[10])
{
//             <may be read   >: q[*]
//             <may be written>: _q_2[*][0]
//             <    is read   >: i
   /* This is going to lead to _q_2[*][0] since any pointer points
        implicitly to an array */
   *q[i] = 3;
   return;
}

Points-to for "main"

