
PROPER  EFFECTS 

int main()
{
   int *p, *q, i, j;
//             <    is written>: i

   i = 1;
//             <    is written>: j
   j = 0;
//             <    is written>: p
   /* Initialisation des pointeurs*/
   p = &i;
//             <    is written>: q
   q = &j;
//             <    is read   >: q
//             <    is written>: p
   
   /* Les deux pointeurs pointent vers la meme case memoire j */
   p = q;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p
   
   /* Dereferencement du pointeur p -> acces à la variable j */
   *p = 1;

   return 0;
}

POINTS-TO


// Points To: none

int main()
{

// Points To: none

   int *p, *q, i, j;

// Points To:
// p -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// q -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT


   i = 1;

// Points To:
// p -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// q -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT

   j = 0;

// Points To:
// p -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT
// q -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT

   /* Initialisation des pointeurs*/
   p = &i;

// Points To:
// p -> &i , EXACT
// q -> &*ANY_MODULE*:*NOWHERE*_b0 , EXACT

   q = &j;

// Points To:
// p -> &i , EXACT
// q -> &j , EXACT

   
   /* Les deux pointeurs pointent vers la meme case memoire j */
   p = q;

// Points To:
// p -> &j , EXACT
// q -> &j , EXACT

   
   /* Dereferencement du pointeur p -> acces à la variable j */
   *p = 1;

// Points To:
// p -> &j , EXACT
// q -> &j , EXACT


   return 0;
}

PROPER  EFFECTS WITH POINTS TO

int main()
{
   int *p, *q, i, j;
//             <    is written>: i

   i = 1;
//             <    is written>: j
   j = 0;
//             <    is written>: p
   /* Initialisation des pointeurs*/
   p = &i;
//             <    is written>: q
   q = &j;
//             <    is read   >: q
//             <    is written>: p
   
   /* Les deux pointeurs pointent vers la meme case memoire j */
   p = q;
//             <    is read   >: p
//             <    is written>: j
   
   /* Dereferencement du pointeur p -> acces à la variable j */
   *p = 1;

   return 0;
}

 *********************** Use-Def Chains *********************

	11 --> 14 with conflicts
		from <p-W-EXACT> to <p-R-EXACT>
	08 --> 11 with conflicts
		from <q-W-EXACT> to <q-R-EXACT>
	07 --> 11 with conflicts
		from <p-W-EXACT> to <p-W-EXACT>
	05 --> 14 with conflicts
		from <j-W-EXACT> to <j-W-EXACT>

****************** End of Dependence Graph ******************
