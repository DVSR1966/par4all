
Points-to for "init_s"


// Points To IN:
// stderr -> *NULL_POINTER* , MAY
// stderr -> _stderr_[0] , MAY


// Points To OUT:
// stderr -> *NULL_POINTER* , MAY
// stderr -> _stderr_[0] , MAY

void init_s(s_t s, int max)
{

// Points To: none


   s.tab = (float *) malloc(max*sizeof(float));

// Points To:
// s.tab -> *HEAP*_l_14[0] , MAY

   s.max = max;

// Points To:
// s.tab -> *HEAP*_l_14[0] , MAY
// stderr -> *NULL_POINTER* , MAY
// stderr -> _stderr_[0] , MAY

   fprintf(stderr, "In init_s, s.tab=%p\n", s.tab);
}

Proper effects with points-to for "init_s"

void init_s(s_t s, int max)
{
//             <    is read   >: max _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: s.tab _MALLOC_EFFECTS:_MALLOC_

   s.tab = (float *) malloc(max*sizeof(float));
//             <    is read   >: max
//             <    is written>: s.max
   s.max = max;
//             <may be read   >: stderr[0]
//             <may be written>: stderr[0]
//             <    is read   >: s.tab stderr __IO_EFFECTS:LUNS[2]
//             <    is written>: __IO_EFFECTS:LUNS[2]
   fprintf(stderr, "In init_s, s.tab=%p\n", s.tab);
}

Points-to for "compute_s"


// Points To IN: none


// Points To OUT: none

void compute_s(s_t s, int max)
{

// Points To: none

   int i;

// Points To: none


   for(i = 0; i <= max-1; i += 1)

// Points To: none

      (s.tab)[i] = i*2.0;
}

Proper effects with points-to for "compute_s"

void compute_s(s_t s, int max)
{
   int i;
//             <    is read   >: max
//             <    is written>: i

   for(i = 0; i <= max-1; i += 1)
//             <    is read   >: i max s.tab
      (s.tab)[i] = i*2.0;
}

Points-to for "main"


// Points To IN:
// stderr -> *NULL_POINTER* , MAY
// stderr -> _stderr_[0] , MAY


// Points To OUT: unreachable

int main()
{

// Points To: none

   s_t s;

// Points To:
// s.tab -> undefined , EXACT

   int j;

// Points To:
// s.tab -> undefined , EXACT


   init_s(s, 10);

// Points To:
// s.tab -> undefined , EXACT
// stderr -> *NULL_POINTER* , MAY
// stderr -> _stderr_[0] , MAY

   fprintf(stderr, "In main, s.tab=%p\n", s.tab);

// Points To: unreachable


   compute_s(s, 10);

// Points To: unreachable

   
   
   return 0;
}

Proper effects with points-to for "main"

int main()
{
   s_t s;
   int j;
//             <may be read   >: stderr[0]
//             <may be written>: stderr[0]
//             <    is read   >: s.max s.tab stderr 
//                               _MALLOC_EFFECTS:_MALLOC_ 
//                               __IO_EFFECTS:LUNS[2]
//             <    is written>: _MALLOC_EFFECTS:_MALLOC_ 
//                               __IO_EFFECTS:LUNS[2]

   init_s(s, 10);
//             <may be read   >: stderr[0]
//             <may be written>: stderr[0]
//             <    is read   >: s.tab stderr __IO_EFFECTS:LUNS[2]
//             <    is written>: __IO_EFFECTS:LUNS[2]
   fprintf(stderr, "In main, s.tab=%p\n", s.tab);
//             <    is read   >: s.max s.tab

   compute_s(s, 10);
   
   
   return 0;
}

 *********************** Use-Def Chains *********************

	34 --> 35 with conflicts
		from <stderr[0]-W-MAY> to <stderr[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[2]-W-EXACT> to <__IO_EFFECTS:LUNS[2]-W-EXACT>
		from <stderr[0]-W-MAY> to <stderr[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[2]-W-EXACT> to <__IO_EFFECTS:LUNS[2]-R-EXACT>
		from <stderr[0]-R-MAY> to <stderr[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[2]-R-EXACT> to <__IO_EFFECTS:LUNS[2]-W-EXACT>

****************** End of Dependence Graph ******************

Warnings (A memory leak should be detected when exiting init_s)

INTERPROCEDURAL_POINTS_TO_ANALYSIS[init_s] (CSafeSizeOfArray) Varying size for array "pointer_modif04!:_IO_FILE^_unused2"
INTERPROCEDURAL_POINTS_TO_ANALYSIS[init_s] (CSafeSizeOfArray) Not yet supported properly by PIPS
INTERPROCEDURAL_POINTS_TO_ANALYSIS[init_s] (potential_to_effective_memory_leaks) Memory cell *HEAP*_l_14[0] leaked.
unknown[unknown] (activate_phase) Rule `PROPER_EFFECTS_WITH_POINTS_TO' already active
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (internal_pointer_assignment_to_points_to) Assignment of an undefined value at line 34.
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (user_call_to_points_to_interprocedural) Function "compute_s" has no side effect on its formal context via pointer variables.
unknown[unknown] (activate_phase) Rule `PROPER_EFFECTS_WITH_POINTS_TO' already active
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (pointer_assignment_to_points_to) Assignment of an undefined value at line 34.
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (source_to_sinks) 
Uninitialized or null pointer dereferenced: Sink missing for a source based on "s".
Update points-to property POINTS_TO_UNINITIALIZED_POINTER_DEREFERENCING and/or POINTS_TO_UNINITIALIZED_NULL_DEREFERENCING according to needs.
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (binary_intrinsic_call_to_points_to_sinks) Some kind of execution error has been encountered.
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (pointer_assignment_to_points_to) Assignment of an undefined value at line 34.
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (source_to_sinks) 
Uninitialized or null pointer dereferenced: Sink missing for a source based on "s".
Update points-to property POINTS_TO_UNINITIALIZED_POINTER_DEREFERENCING and/or POINTS_TO_UNINITIALIZED_NULL_DEREFERENCING according to needs.
INTERPROCEDURAL_POINTS_TO_ANALYSIS[main] (binary_intrinsic_call_to_points_to_sinks) Some kind of execution error has been encountered.
