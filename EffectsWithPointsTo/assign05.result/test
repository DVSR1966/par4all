
PROPER  EFFECTS 

void assign05()
{
   int *r;
   int i;
//             <    is read   >: i
//             <    is written>: r

   r = bar(i);
//             <    is written>: i
   i = 1;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: r
   *r = 0;
}
/* To be out of Emami's patterns with a user call */

int *bar(int j);

void assign05();

void foo();
int * bar(int j)
{
   return &j;
}
void foo()
{
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   assign05();
}

POINTS-TO

//  {}
void assign05()
{
//  {}
   int *r;
//  {(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   int i;
//  {(r,*ANY_MODULE*:*NOWHERE*_b0,-Exact-)}

   r = bar(i);
//  {(r,*ANY_MODULE*:*ANYWHERE*_b0,-Exact-)}
   i = 1;
//  {(r,*ANY_MODULE*:*ANYWHERE*_b0,-Exact-)}
   *r = 0;
}
//  {}
/* To be out of Emami's patterns with a user call */

//  {}
int *bar(int j);

//  {}
void assign05();

//  {}
void foo();
//  {}
int * bar(int j)
{
//  {}
   return &j;
}
//  {}
void foo()
{
//  {}
   assign05();
}

PROPER  EFFECTS WITH POINTS TO

void assign05()
{
   int *r;
   int i;
//             <    is read   >: i
//             <    is written>: r

   r = bar(i);
//             <    is written>: i
   i = 1;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: r
   *r = 0;
}
/* To be out of Emami's patterns with a user call */

int *bar(int j);

void assign05();

void foo();
int * bar(int j)
{
   return &j;
}
void foo()
{
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   assign05();
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
