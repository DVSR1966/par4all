
PROPER  EFFECTS 

void assign04()
{
   int ***p;
   int **q;
   int *r;
   int i;
//             <    is written>: r

   r = &i;
//             <    is written>: p
   //q = &r;
   p = &q;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   **p = r;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   ***p = 0;
   return;
}
/* To be out of Emami's patterns
 *
 * assign04 segfaults...
 */

void assign04();

void foo();
void foo()
{
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   assign04();
   return;
}

POINTS-TO


// Points To IN: none


// Points To OUT: unreachable

void assign04()
{

// Points To: none

   int ***p;

// Points To:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   int **q;

// Points To:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// q -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT

   int *r;

// Points To:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// q -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT
// r -> *ANY_MODULE*:*NOWHERE*_b2 , EXACT

   int i;

// Points To:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// q -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT
// r -> *ANY_MODULE*:*NOWHERE*_b2 , EXACT


   r = &i;

// Points To:
// p -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT
// q -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT
// r -> i , EXACT

   //q = &r;
   p = &q;

// Points To:
// p -> q , EXACT
// q -> *ANY_MODULE*:*NOWHERE*_b1 , EXACT
// r -> i , EXACT

   **p = r;

// Points To: unreachable

   ***p = 0;

// Points To: unreachable

   return;
}

// Points To IN: none


// Points To OUT: none

/* To be out of Emami's patterns
 *
 * assign04 segfaults...
 */


// Points To: none

void assign04();


// Points To: none

void foo();

// Points To IN: none


// Points To OUT: unreachable

void foo()
{

// Points To: none

   assign04();

// Points To: unreachable

   return;
}

PROPER  EFFECTS WITH POINTS TO

void assign04()
{
   int ***p;
   int **q;
   int *r;
   int i;
//             <    is written>: r

   r = &i;
//             <    is written>: p
   //q = &r;
   p = &q;
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: p q r
   **p = r;
   ***p = 0;
   return;
}
/* To be out of Emami's patterns
 *
 * assign04 segfaults...
 */

void assign04();

void foo();
void foo()
{
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   assign04();
   return;
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
