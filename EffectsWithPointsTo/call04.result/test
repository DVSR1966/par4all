
PROPER  EFFECTS 

void call04(int n, int m, int x[n][m])
{
   int i, j;
//             <    is read   >: n
//             <    is written>: i

   for(i = 0; i <= n-1; i += 1)
//             <    is read   >: m n
//             <    is written>: j
      for(j = 0; j <= m-1; j += 1)
//             <    is read   >: i j m n
//             <    is written>: x[i][j]
         x[i][j] = 0;
}
int main()
{
//             <    is written>: d1
   int d1 = 10;
//             <    is written>: d2
   int d2 = 10;
   int y[d1][d2];
//             <may be written>: y[*][*]
//             <    is read   >: d1 d2

   call04(d1, d2, y);
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

void call04(int n, int m, int x[n][m])
{

// Points To: none

   int i, j;

// Points To: none


   for(i = 0; i <= n-1; i += 1)

// Points To: none

      for(j = 0; j <= m-1; j += 1)

// Points To: none

         x[i][j] = 0;
}

// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int d1 = 10;

// Points To: none

   int d2 = 10;

// Points To: none

   int y[d1][d2];

// Points To: none


   call04(d1, d2, y);
}

PROPER  EFFECTS WITH POINTS TO

void call04(int n, int m, int x[n][m])
{
   int i, j;
//             <    is read   >: n
//             <    is written>: i

   for(i = 0; i <= n-1; i += 1)
//             <    is read   >: m n
//             <    is written>: j
      for(j = 0; j <= m-1; j += 1)
//             <    is read   >: i j m n
//             <    is written>: x[i][j]
         x[i][j] = 0;
}
int main()
{
//             <    is written>: d1
   int d1 = 10;
//             <    is written>: d2
   int d2 = 10;
   int y[d1][d2];
//             <may be written>: y[*][*]
//             <    is read   >: d1 d2

   call04(d1, d2, y);
}

 *********************** Use-Def Chains *********************

	14 --> 18 with conflicts
		from <d1-W-EXACT> to <d1-R-EXACT>
	15 --> 18 with conflicts
		from <d2-W-EXACT> to <d2-R-EXACT>

****************** End of Dependence Graph ******************
