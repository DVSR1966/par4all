
PROPER  EFFECTS 

FLGR_Data2D * flgr2d_create_pixmap_link(FLGR_Data2D *datain, int partsNumber, int partIndex, int overlapSize)
{
   FLGR_Data2D *dat;
   int i, k, nbrow, startin;
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: dat _MALLOC_EFFECTS:_MALLOC_
   /* dat = (FLGR_Data2D*) flgr_malloc(sizeof(FLGR_Data2D)); */
   dat = (FLGR_Data2D *) malloc(sizeof(FLGR_Data2D));
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
//             <    is read   >: dat overlapSize
   dat->link_overlap = overlapSize;
//             <    is read   >: nbrow overlapSize
//             <    is written>: i

   for(i = 0; i <= nbrow-overlapSize-1; i += 1) {
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
      (dat->row)[i] = (datain->row)[i];
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
      (dat->row)[i]->dim = i;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
      (dat->array)[i] = (dat->row)[i]->array;
   }
}

POINTS-TO


// Points To IN:
// datain -> *NULL_POINTER* , MAY
// datain -> _datain_1 , MAY


// Points To OUT:
// *HEAP*_l_33.row -> undefined , EXACT
// *HEAP*_l_33.array -> undefined , EXACT

FLGR_Data2D * flgr2d_create_pixmap_link(FLGR_Data2D *datain, int partsNumber, int partIndex, int overlapSize)
{

// Points To: none

   FLGR_Data2D *dat;

// Points To:
// dat -> undefined , EXACT

   int i, k, nbrow, startin;

// Points To:
// dat -> undefined , EXACT

   /* dat = (FLGR_Data2D*) flgr_malloc(sizeof(FLGR_Data2D)); */
   dat = (FLGR_Data2D *) malloc(sizeof(FLGR_Data2D));

// Points To:
// *HEAP*_l_33.row -> undefined , EXACT
// *HEAP*_l_33.array -> undefined , EXACT
// dat -> *HEAP*_l_33 , MAY

   dat->link_overlap = overlapSize;

// Points To:
// *HEAP*_l_33.row -> undefined , EXACT
// *HEAP*_l_33.array -> undefined , EXACT
// dat -> *HEAP*_l_33 , MAY


   for(i = 0; i <= nbrow-overlapSize-1; i += 1) {

// Points To:
// *HEAP*_l_33.row -> undefined , EXACT
// *HEAP*_l_33.array -> undefined , EXACT
// dat -> *HEAP*_l_33 , MAY
// datain -> *NULL_POINTER* , MAY
// datain -> _datain_1 , MAY

      (dat->row)[i] = (datain->row)[i];

// Points To: none

      (dat->row)[i]->dim = i;

// Points To: none

      (dat->array)[i] = (dat->row)[i]->array;
   }
}

PROPER  EFFECTS WITH POINTS TO

FLGR_Data2D * flgr2d_create_pixmap_link(FLGR_Data2D *datain, int partsNumber, int partIndex, int overlapSize)
{
   FLGR_Data2D *dat;
   int i, k, nbrow, startin;
//             <    is read   >: _MALLOC_EFFECTS:_MALLOC_
//             <    is written>: dat _MALLOC_EFFECTS:_MALLOC_
   /* dat = (FLGR_Data2D*) flgr_malloc(sizeof(FLGR_Data2D)); */
   dat = (FLGR_Data2D *) malloc(sizeof(FLGR_Data2D));
//             <may be written>: *HEAP*_l_33.link_overlap
//             <    is read   >: dat overlapSize
   dat->link_overlap = overlapSize;
//             <    is read   >: nbrow overlapSize
//             <    is written>: i

   for(i = 0; i <= nbrow-overlapSize-1; i += 1) {
//             <may be read   >: *HEAP*_l_33.row
//             <may be written>: *HEAP*_l_33.row[i]
//             <    is read   >: _datain_1.row dat datain i nbrow 
//                               overlapSize
      (dat->row)[i] = (datain->row)[i];
//             <    is read   >: dat i nbrow overlapSize
      (dat->row)[i]->dim = i;
//             <    is read   >: dat i nbrow overlapSize
      (dat->array)[i] = (dat->row)[i]->array;
   }
}

 *********************** Use-Def Chains *********************

	33 --> 34 with conflicts
		from <dat-W-EXACT> to <dat-R-EXACT>
	33 --> 37 with conflicts
		from <dat-W-EXACT> to <dat-R-EXACT>
	33 --> 38 with conflicts
		from <dat-W-EXACT> to <dat-R-EXACT>
	33 --> 39 with conflicts
		from <dat-W-EXACT> to <dat-R-EXACT>
	37 --> 37 with conflicts
		from <*HEAP*_l_33.row[i]-W-MAY> to <*HEAP*_l_33.row[i]-W-MAY>
		from <*HEAP*_l_33.row[i]-W-MAY> to <*HEAP*_l_33.row-R-MAY>
		from <*HEAP*_l_33.row-R-MAY> to <*HEAP*_l_33.row[i]-W-MAY>

****************** End of Dependence Graph ******************
