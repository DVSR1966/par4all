
PROPER  EFFECTS 

void call16(int _i, int *_a, int *_b, int *_c)
{
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   _a[_i] = _b[_i]+_c[_i];
}
void call16(int _i, int *_a, int *_b, int *_c);

void dotprod(int *a, int *b, int *c);
void dotprod(int *a, int *b, int *c)
{
   int i;
//             <    is written>: i
   for(i = 0; i <= 999999; i += 1)
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
      call16(i, a, b, c);
   
   
   return;
}

POINTS-TO


// Points To IN:
// _a -> __a_2[0] , EXACT
// _b -> __b_3[0] , EXACT
// _c -> __c_4[0] , EXACT


// Points To OUT: none

void call16(int _i, int *_a, int *_b, int *_c)
{

// Points To:
// _a -> __a_2[0] , EXACT
// _b -> __b_3[0] , EXACT
// _c -> __c_4[0] , EXACT

   _a[_i] = _b[_i]+_c[_i];
}

// Points To IN: none


// Points To OUT: none


// Points To: none

void call16(int _i, int *_a, int *_b, int *_c);


// Points To: none

void dotprod(int *a, int *b, int *c);

// Points To IN:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT


// Points To OUT: none

void dotprod(int *a, int *b, int *c)
{

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT

   int i;

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT

   for(i = 0; i <= 999999; i += 1)

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT

      call16(i, a, b, c);

// Points To:
// a -> _a_1[0] , EXACT
// b -> _b_2[0] , EXACT
// c -> _c_3[0] , EXACT

   
   
   return;
}

PROPER  EFFECTS WITH POINTS TO

void call16(int _i, int *_a, int *_b, int *_c)
{
//             <    is read   >: __b_3[_i] __c_4[_i] _a _b _c _i
//             <    is written>: __a_2[_i]
   _a[_i] = _b[_i]+_c[_i];
}
void call16(int _i, int *_a, int *_b, int *_c);

void dotprod(int *a, int *b, int *c);
void dotprod(int *a, int *b, int *c)
{
   int i;
//             <    is written>: i
   for(i = 0; i <= 999999; i += 1)
//             <may be read   >: _b_2[*] _c_3[*]
//             <may be written>: _a_1[*]
//             <    is read   >: a b c i
      call16(i, a, b, c);
   
   
   return;
}

 *********************** Use-Def Chains *********************

	11 --> 11 with conflicts
		from <_a_1[*]-W-MAY> to <_a_1[*]-W-MAY>

****************** End of Dependence Graph ******************
