
//  <in[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1+1<=numrows, 0<=PHI2,
//    PHI2+1<=numcols}>
//  <out[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1+1<=numcols, 0<=PHI2,
//    PHI2+1<=numrows}>

void ct(int numrows, int numcols, float in[numrows][numcols], float out[numcols][numrows])
{
   unsigned int i, j;

//  <in[PHI1][PHI2]-R-EXACT-{0<=PHI1, PHI1+1<=numrows, 0<=PHI2,
//    PHI2+1<=numcols}>
//  <out[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1+1<=numcols, 0<=PHI2,
//    PHI2+1<=numrows}>


   for(i = 0; i <= numrows-1; i += 1)

//  <in[PHI1][PHI2]-R-EXACT-{PHI1==i, 0<=PHI2, PHI2+1<=numcols, 0<=i,
//    i+1<=numrows}>
//  <out[PHI1][PHI2]-W-EXACT-{PHI2==i, 0<=PHI1, PHI1+1<=numcols, 0<=i,
//    i+1<=numrows}>

      for(j = 0; j <= numcols-1; j += 1)

//  <in[PHI1][PHI2]-R-EXACT-{PHI1==i, PHI2==j, 0<=i, i+1<=numrows,
//    0<=j, j+1<=numcols}>
//  <out[PHI1][PHI2]-W-EXACT-{PHI1==j, PHI2==i, 0<=i, i+1<=numrows,
//    0<=j, j+1<=numcols}>

         out[j][i] = in[i][j];
}

