
Initial code

void foo(void)
{
   int i;
   int s = 0;
   for (i = 0;i<3;i++)                                                  /*0006*/
      s += kernel[i];                                                   /*0007*/
}
void inlining19(void)
{
   foo();                                                               /*0004*/
   foo();                                                               /*0005*/
}

Code after inlining

void inlining19(void)
{
   {
      int i;
      int s = 0;
      extern const  int kernel[3];
      for (i = 0;i<3;i++)                                               /*0007*/
         /*0006*/
         s += kernel[i];                                                /*0008*/
      /*0007*/
   }
   {
      int i;
      int s = 0;
      extern const  int kernel[3];
      for (i = 0;i<3;i++)                                               /*0015*/
         /*0006*/
         s += kernel[i];                                                /*0016*/
      /*0007*/
   }
}

Code after flattening

void inlining19(void)
{
   {
      int i;
      int s = 0;
      extern const  int kernel[3];
      for (i = 0;i<3;i++)                                               /*0007*/
         /*0006*/
         s += kernel[i];                                                /*0008*/
      /*0007*/
   }
   {
      int i;
      int s = 0;
      extern const  int kernel[3];
      for (i = 0;i<3;i++)                                               /*0015*/
         /*0006*/
         s += kernel[i];                                                /*0016*/
      /*0007*/
   }
}

Unsplit resulting code

