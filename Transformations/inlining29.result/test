
Initial code

typedef unsigned int size_t;
typedef int wchar_t;
typedef struct {int quot; int rem;} div_t;
typedef struct {long quot; long rem;} ldiv_t;
extern size_t __ctype_get_mb_cur_max(void);
extern double atof(const char *__nptr);
extern int atoi(const char *__nptr);
extern long atol(const char *__nptr);
extern double strtod(const char *__nptr, char **__endptr);
extern long strtol(const char *__nptr, char **__endptr, int __base);
extern unsigned long strtoul(const char *__nptr, char **__endptr, int __base);
extern char *l64a(long __n);
extern long a64l(const char *__s);
typedef unsigned char __u_char;
typedef unsigned short __u_short;
typedef unsigned int __u_int;
typedef unsigned long __u_long;
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short __int16_t;
typedef unsigned short __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;
typedef struct {long __val[2];} __quad_t;
typedef struct {__u_long __val[2];} __u_quad_t;
typedef __u_quad_t __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long __ino_t;
typedef __u_quad_t __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef long __off_t;
typedef __quad_t __off64_t;
typedef int __pid_t;
typedef struct {int __val[2];} __fsid_t;
typedef long __clock_t;
typedef unsigned long __rlim_t;
typedef __u_quad_t __rlim64_t;
typedef unsigned int __id_t;
typedef long __time_t;
typedef unsigned int __useconds_t;
typedef long __suseconds_t;
typedef int __daddr_t;
typedef long __swblk_t;
typedef int __key_t;
typedef int __clockid_t;
typedef void *__timer_t;
typedef long __blksize_t;
typedef long __blkcnt_t;
typedef __quad_t __blkcnt64_t;
typedef unsigned long __fsblkcnt_t;
typedef __u_quad_t __fsblkcnt64_t;
typedef unsigned long __fsfilcnt_t;
typedef __u_quad_t __fsfilcnt64_t;
typedef int __ssize_t;
typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;
typedef int __intptr_t;
typedef unsigned int __socklen_t;
typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;
typedef __loff_t loff_t;
typedef __ino_t ino_t;
typedef __dev_t dev_t;
typedef __gid_t gid_t;
typedef __mode_t mode_t;
typedef __nlink_t nlink_t;
typedef __uid_t uid_t;
typedef __off_t off_t;
typedef __pid_t pid_t;
typedef __id_t id_t;
typedef __ssize_t ssize_t;
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;
typedef __key_t key_t;
typedef __time_t time_t;
typedef __clockid_t clockid_t;
typedef __timer_t timer_t;
typedef unsigned long ulong;
typedef unsigned short ushort;
typedef unsigned int uint;
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef unsigned char u_int8_t;
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef int register_t;
typedef int __sig_atomic_t;
typedef struct {unsigned long __val[1024/(8*sizeof(unsigned long))];} __sigset_t;
typedef __sigset_t sigset_t;
struct timespec {
   __time_t tv_sec;
   long tv_nsec;
};
struct timeval {
   __time_t tv_sec;
   __suseconds_t tv_usec;
};
typedef __suseconds_t suseconds_t;
typedef long __fd_mask;
typedef struct {__fd_mask __fds_bits[1024/(8*sizeof(__fd_mask))];} fd_set;
typedef __fd_mask fd_mask;
extern int select(int __nfds, fd_set *__readfds, fd_set *__writefds, fd_set *__exceptfds, struct timeval *__timeout);
extern int pselect(int __nfds, fd_set *__readfds, fd_set *__writefds, fd_set *__exceptfds, const struct timespec *__timeout, const __sigset_t *__sigmask);
typedef __blkcnt_t blkcnt_t;
typedef __fsblkcnt_t fsblkcnt_t;
typedef __fsfilcnt_t fsfilcnt_t;
typedef unsigned long pthread_t;
typedef union {char __size[36]; long __align;} pthread_attr_t;
struct __pthread_internal_slist {
   struct __pthread_internal_slist *__next;
};
typedef struct __pthread_internal_slist __pthread_slist_t;
struct __pthread_mutex_s {
   int __lock;
   unsigned int __count;
   int __owner;
   int __kind;
   unsigned int __nusers;
   union {int __spins; __pthread_slist_t __list;} PIPS_MEMBER_11;
};
typedef union {struct __pthread_mutex_s __data; char __size[24]; long __align;} pthread_mutex_t;
typedef union {char __size[4]; int __align;} pthread_mutexattr_t;
typedef union {struct {int __lock; unsigned int __futex; unsigned long long __total_seq; unsigned long long __wakeup_seq; unsigned long long __woken_seq; void *__mutex; unsigned int __nwaiters; unsigned int __broadcast_seq;} __data; char __size[48]; long long __align;} pthread_cond_t;
typedef union {char __size[4]; int __align;} pthread_condattr_t;
typedef unsigned int pthread_key_t;
typedef int pthread_once_t;
typedef union {struct {int __lock; unsigned int __nr_readers; unsigned int __readers_wakeup; unsigned int __writer_wakeup; unsigned int __nr_readers_queued; unsigned int __nr_writers_queued; unsigned char __flags; unsigned char __shared; unsigned char __pad1; unsigned char __pad2; int __writer;} __data; char __size[32]; long __align;} pthread_rwlock_t;
typedef union {char __size[8]; long __align;} pthread_rwlockattr_t;
typedef volatile int pthread_spinlock_t;
typedef union {char __size[20]; long __align;} pthread_barrier_t;
typedef union {char __size[4]; int __align;} pthread_barrierattr_t;
extern long random(void);
extern void srandom(unsigned int __seed);
extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen);
extern char *setstate(char *__statebuf);
struct random_data {
   int32_t *fptr;
   int32_t *rptr;
   int32_t *state;
   int rand_type;
   int rand_deg;
   int rand_sep;
   int32_t *end_ptr;
};
extern int random_r(struct random_data *__buf, int32_t *__result);
extern int srandom_r(unsigned int __seed, struct random_data *__buf);
extern int initstate_r(unsigned int __seed, char *__statebuf, size_t __statelen, struct random_data *__buf);
extern int setstate_r(char *__statebuf, struct random_data *__buf);
extern int rand(void);
extern void srand(unsigned int __seed);
extern int rand_r(unsigned int *__seed);
extern double drand48(void);
extern double erand48(unsigned short __xsubi[3]);
extern long lrand48(void);
extern long nrand48(unsigned short __xsubi[3]);
extern long mrand48(void);
extern long jrand48(unsigned short __xsubi[3]);
extern void srand48(long __seedval);
extern unsigned short *seed48(unsigned short __seed16v[3]);
extern void lcong48(unsigned short __param[7]);
struct drand48_data {
   unsigned short __x[3];
   unsigned short __old_x[3];
   unsigned short __c;
   unsigned short __init;
   unsigned long long __a;
};
extern int drand48_r(struct drand48_data *__buffer, double *__result);
extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *__buffer, double *__result);
extern int lrand48_r(struct drand48_data *__buffer, long *__result);
extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *__buffer, long *__result);
extern int mrand48_r(struct drand48_data *__buffer, long *__result);
extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *__buffer, long *__result);
extern int srand48_r(long __seedval, struct drand48_data *__buffer);
extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer);
extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer);
extern void *malloc(size_t __size);
extern void *calloc(size_t __nmemb, size_t __size);
extern void *realloc(void *__ptr, size_t __size);
extern void free(void *__ptr);
extern void cfree(void *__ptr);
extern void *alloca(size_t __size);
extern void *valloc(size_t __size);
extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size);
extern void abort(void);
extern int atexit(void (*__func)(void));
extern int on_exit(void (*__func)(int __status, void *__arg), void *__arg);
extern void exit(int __status);
extern char *getenv(const char *__name);
extern char *__secure_getenv(const char *__name);
extern int putenv(char *__string);
extern int setenv(const char *__name, const char *__value, int __replace);
extern int unsetenv(const char *__name);
extern int clearenv(void);
extern char *mktemp(char *__template);
extern int mkstemp(char *__template);
extern char *mkdtemp(char *__template);
extern int system(const char *__command);
extern char *realpath(const char *__name, char *__resolved);
typedef int (*__compar_fn_t)(void *, void *);
extern void *bsearch(void *__key, void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
extern int abs(int __x);
extern long labs(long __x);
extern div_t div(int __numer, int __denom);
extern ldiv_t ldiv(long __numer, long __denom);
extern char *ecvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *fcvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *gcvt(double __value, int __ndigit, char *__buf);
extern char *qecvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *qfcvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *qgcvt(double __value, int __ndigit, char *__buf);
extern int ecvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, size_t __len);
extern int fcvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, size_t __len);
extern int qecvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, size_t __len);
extern int qfcvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, size_t __len);
extern int mblen(const char *__s, size_t __n);
extern int mbtowc(wchar_t *__pwc, const char *__s, size_t __n);
extern int wctomb(char *__s, wchar_t __wchar);
extern size_t mbstowcs(wchar_t *__pwcs, const char *__s, size_t __n);
extern size_t wcstombs(char *__s, const wchar_t *__pwcs, size_t __n);
extern int rpmatch(const char *__response);
extern int posix_openpt(int __oflag);
extern int getloadavg(double __loadavg[], int __nelem);
typedef struct farray_t *farray;
extern farray farray_new(unsigned int n);
extern void farray_delete(farray a);
extern float farray_get(farray a, unsigned int i);
extern void farray_set(farray a, unsigned int i, float f);
struct farray_t {
   unsigned int size;
   float *data;
};
extern farray farray_new(unsigned int n);
extern void farray_delete(farray a);
extern float farray_get(farray a, unsigned int i);
extern void farray_set(farray a, unsigned int i, float f);
void farray_delete(farray a)
{
   free(a->data);
   free(a);
}
float farray_get(farray a, unsigned int i)
{
   return (a->data)[i];
}
farray farray_new(unsigned int n)
{
   farray a;
   a = (farray) malloc(sizeof(*a));
   if (a) {
      a->size = n;
      a->data = (float *) malloc(n*sizeof(*a->data));
      if (a->data)
         return a;
      else
         free(a);
   }
   return (void *) 0;
}
void farray_set(farray a, unsigned int i, float f)
{
   (a->data)[i] = f;
}
typedef struct farray_t *farray;
farray farray_new(unsigned int n);
void farray_delete(farray a);
float farray_get(farray a, unsigned int i);
void farray_set(farray a, unsigned int i, float f);
typedef unsigned int size_t;
typedef unsigned char __u_char;
typedef unsigned short __u_short;
typedef unsigned int __u_int;
typedef unsigned long __u_long;
typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short __int16_t;
typedef unsigned short __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;
typedef struct {long __val[2];} __quad_t;
typedef struct {__u_long __val[2];} __u_quad_t;
typedef __u_quad_t __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long __ino_t;
typedef __u_quad_t __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef long __off_t;
typedef __quad_t __off64_t;
typedef int __pid_t;
typedef struct {int __val[2];} __fsid_t;
typedef long __clock_t;
typedef unsigned long __rlim_t;
typedef __u_quad_t __rlim64_t;
typedef unsigned int __id_t;
typedef long __time_t;
typedef unsigned int __useconds_t;
typedef long __suseconds_t;
typedef int __daddr_t;
typedef long __swblk_t;
typedef int __key_t;
typedef int __clockid_t;
typedef void *__timer_t;
typedef long __blksize_t;
typedef long __blkcnt_t;
typedef __quad_t __blkcnt64_t;
typedef unsigned long __fsblkcnt_t;
typedef __u_quad_t __fsblkcnt64_t;
typedef unsigned long __fsfilcnt_t;
typedef __u_quad_t __fsfilcnt64_t;
typedef int __ssize_t;
typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;
typedef int __intptr_t;
typedef unsigned int __socklen_t;
typedef struct _IO_FILE FILE;
typedef struct _IO_FILE __FILE;
typedef struct {int __count; union {unsigned int __wch; char __wchb[4];} __value;} __mbstate_t;
typedef struct {__off_t __pos; __mbstate_t __state;} _G_fpos_t;
typedef struct {__off64_t __pos; __mbstate_t __state;} _G_fpos64_t;
typedef int _G_int16_t;
typedef int _G_int32_t;
typedef unsigned int _G_uint16_t;
typedef unsigned int _G_uint32_t;
typedef __builtin_va_list __gnuc_va_list;
typedef void _IO_lock_t;
struct _IO_marker {
   struct _IO_marker *_next;
   struct _IO_FILE *_sbuf;
   int _pos;
};
enum __codecvt_result {__codecvt_ok, __codecvt_partial, __codecvt_error, __codecvt_noconv};
struct _IO_FILE {
   int _flags;
   char *_IO_read_ptr;
   char *_IO_read_end;
   char *_IO_read_base;
   char *_IO_write_base;
   char *_IO_write_ptr;
   char *_IO_write_end;
   char *_IO_buf_base;
   char *_IO_buf_end;
   char *_IO_save_base;
   char *_IO_backup_base;
   char *_IO_save_end;
   struct _IO_marker *_markers;
   struct _IO_FILE *_chain;
   int _fileno;
   int _flags2;
   __off_t _old_offset;
   unsigned short _cur_column;
   signed char _vtable_offset;
   char _shortbuf[1];
   _IO_lock_t *_lock;
   __off64_t _offset;
   void *__pad1;
   void *__pad2;
   void *__pad3;
   void *__pad4;
   size_t __pad5;
   int _mode;
   char _unused2[15*sizeof(int)-4*sizeof(void *)-sizeof(size_t)];
};
typedef struct _IO_FILE _IO_FILE;
extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
typedef __ssize_t __io_read_fn(void *__cookie, char *__buf, size_t __nbytes);
typedef __ssize_t __io_write_fn(void *__cookie, const char *__buf, size_t __n);
typedef int __io_seek_fn(void *__cookie, __off64_t *__pos, int __w);
typedef int __io_close_fn(void *__cookie);
extern int __underflow(_IO_FILE *);
extern int __uflow(_IO_FILE *);
extern int __overflow(_IO_FILE *, int);
extern int _IO_getc(_IO_FILE *__fp);
extern int _IO_putc(int __c, _IO_FILE *__fp);
extern int _IO_feof(_IO_FILE *__fp);
extern int _IO_ferror(_IO_FILE *__fp);
extern int _IO_peekc_locked(_IO_FILE *__fp);
extern void _IO_flockfile(_IO_FILE *);
extern void _IO_funlockfile(_IO_FILE *);
extern int _IO_ftrylockfile(_IO_FILE *);
extern int _IO_vfscanf(_IO_FILE *, const char *, __gnuc_va_list, int *);
extern int _IO_vfprintf(_IO_FILE *, const char *, __gnuc_va_list);
extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
extern void _IO_free_backup_area(_IO_FILE *);
typedef _G_fpos_t fpos_t;
extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;
extern int remove(const char *__filename);
extern int rename(const char *__old, const char *__new);
extern FILE *tmpfile(void);
extern char *tmpnam(char *__s);
extern char *tmpnam_r(char *__s);
extern char *tempnam(const char *__dir, const char *__pfx);
extern int fclose(FILE *__stream);
extern int fflush(FILE *__stream);
extern int fflush_unlocked(FILE *__stream);
extern FILE *fopen(const char *__filename, const char *__modes);
extern FILE *freopen(const char *__filename, const char *__modes, FILE *__stream);
extern FILE *fdopen(int __fd, const char *__modes);
extern void setbuf(FILE *__stream, char *__buf);
extern int setvbuf(FILE *__stream, char *__buf, int __modes, size_t __n);
extern void setbuffer(FILE *__stream, char *__buf, size_t __size);
extern void setlinebuf(FILE *__stream);
extern int fprintf(FILE *__stream, const char *__format, ...);
extern int printf(const char *__format, ...);
extern int sprintf(char *__s, const char *__format, ...);
extern int vfprintf(FILE *__s, const char *__format, __gnuc_va_list __arg);
extern int vprintf(const char *__format, __gnuc_va_list __arg);
extern int vsprintf(char *__s, const char *__format, __gnuc_va_list __arg);
extern int snprintf(char *__s, size_t __maxlen, const char *__format, ...);
extern int vsnprintf(char *__s, size_t __maxlen, const char *__format, __gnuc_va_list __arg);
extern int fscanf(FILE *__stream, const char *__format, ...);
extern int scanf(const char *__format, ...);
extern int sscanf(const char *__s, const char *__format, ...);
extern int fgetc(FILE *__stream);
extern int getc(FILE *__stream);
extern int getchar(void);
extern int getc_unlocked(FILE *__stream);
extern int getchar_unlocked(void);
extern int fgetc_unlocked(FILE *__stream);
extern int fputc(int __c, FILE *__stream);
extern int putc(int __c, FILE *__stream);
extern int putchar(int __c);
extern int fputc_unlocked(int __c, FILE *__stream);
extern int putc_unlocked(int __c, FILE *__stream);
extern int putchar_unlocked(int __c);
extern int getw(FILE *__stream);
extern int putw(int __w, FILE *__stream);
extern char *fgets(char *__s, int __n, FILE *__stream);
extern char *gets(char *__s);
extern int fputs(const char *__s, FILE *__stream);
extern int puts(const char *__s);
extern int ungetc(int __c, FILE *__stream);
extern size_t fread(void *__ptr, size_t __size, size_t __n, FILE *__stream);
extern size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s);
extern size_t fread_unlocked(void *__ptr, size_t __size, size_t __n, FILE *__stream);
extern size_t fwrite_unlocked(void *__ptr, size_t __size, size_t __n, FILE *__stream);
extern int fseek(FILE *__stream, long __off, int __whence);
extern long ftell(FILE *__stream);
extern void rewind(FILE *__stream);
extern int fseeko(FILE *__stream, __off_t __off, int __whence);
extern __off_t ftello(FILE *__stream);
extern int fgetpos(FILE *__stream, fpos_t *__pos);
extern int fsetpos(FILE *__stream, const fpos_t *__pos);
extern void clearerr(FILE *__stream);
extern int feof(FILE *__stream);
extern int ferror(FILE *__stream);
extern void clearerr_unlocked(FILE *__stream);
extern int feof_unlocked(FILE *__stream);
extern int ferror_unlocked(FILE *__stream);
extern void perror(const char *__s);
extern int sys_nerr;
extern const char *sys_errlist[];
extern int fileno(FILE *__stream);
extern int fileno_unlocked(FILE *__stream);
extern FILE *popen(const char *__command, const char *__modes);
extern int pclose(FILE *__stream);
extern char *ctermid(char *__s);
extern void flockfile(FILE *__stream);
extern int ftrylockfile(FILE *__stream);
extern void funlockfile(FILE *__stream);
typedef int wchar_t;
typedef struct {int quot; int rem;} div_t;
typedef struct {long quot; long rem;} ldiv_t;
extern size_t __ctype_get_mb_cur_max(void);
extern double atof(const char *__nptr);
extern int atoi(const char *__nptr);
extern long atol(const char *__nptr);
extern double strtod(const char *__nptr, char **__endptr);
extern long strtol(const char *__nptr, char **__endptr, int __base);
extern unsigned long strtoul(const char *__nptr, char **__endptr, int __base);
extern char *l64a(long __n);
extern long a64l(const char *__s);
typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;
typedef __loff_t loff_t;
typedef __ino_t ino_t;
typedef __dev_t dev_t;
typedef __gid_t gid_t;
typedef __mode_t mode_t;
typedef __nlink_t nlink_t;
typedef __uid_t uid_t;
typedef __off_t off_t;
typedef __pid_t pid_t;
typedef __id_t id_t;
typedef __ssize_t ssize_t;
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;
typedef __key_t key_t;
typedef __time_t time_t;
typedef __clockid_t clockid_t;
typedef __timer_t timer_t;
typedef unsigned long ulong;
typedef unsigned short ushort;
typedef unsigned int uint;
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef unsigned char u_int8_t;
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef int register_t;
typedef int __sig_atomic_t;
typedef struct {unsigned long __val[1024/(8*sizeof(unsigned long))];} __sigset_t;
typedef __sigset_t sigset_t;
struct timespec {
   __time_t tv_sec;
   long tv_nsec;
};
struct timeval {
   __time_t tv_sec;
   __suseconds_t tv_usec;
};
typedef __suseconds_t suseconds_t;
typedef long __fd_mask;
typedef struct {__fd_mask __fds_bits[1024/(8*sizeof(__fd_mask))];} fd_set;
typedef __fd_mask fd_mask;
extern int select(int __nfds, fd_set *__readfds, fd_set *__writefds, fd_set *__exceptfds, struct timeval *__timeout);
extern int pselect(int __nfds, fd_set *__readfds, fd_set *__writefds, fd_set *__exceptfds, const struct timespec *__timeout, const __sigset_t *__sigmask);
typedef __blkcnt_t blkcnt_t;
typedef __fsblkcnt_t fsblkcnt_t;
typedef __fsfilcnt_t fsfilcnt_t;
typedef unsigned long pthread_t;
typedef union {char __size[36]; long __align;} pthread_attr_t;
struct __pthread_internal_slist {
   struct __pthread_internal_slist *__next;
};
typedef struct __pthread_internal_slist __pthread_slist_t;
struct __pthread_mutex_s {
   int __lock;
   unsigned int __count;
   int __owner;
   int __kind;
   unsigned int __nusers;
   union {int __spins; __pthread_slist_t __list;} PIPS_MEMBER_15;
};
typedef union {struct __pthread_mutex_s __data; char __size[24]; long __align;} pthread_mutex_t;
typedef union {char __size[4]; int __align;} pthread_mutexattr_t;
typedef union {struct {int __lock; unsigned int __futex; unsigned long long __total_seq; unsigned long long __wakeup_seq; unsigned long long __woken_seq; void *__mutex; unsigned int __nwaiters; unsigned int __broadcast_seq;} __data; char __size[48]; long long __align;} pthread_cond_t;
typedef union {char __size[4]; int __align;} pthread_condattr_t;
typedef unsigned int pthread_key_t;
typedef int pthread_once_t;
typedef union {struct {int __lock; unsigned int __nr_readers; unsigned int __readers_wakeup; unsigned int __writer_wakeup; unsigned int __nr_readers_queued; unsigned int __nr_writers_queued; unsigned char __flags; unsigned char __shared; unsigned char __pad1; unsigned char __pad2; int __writer;} __data; char __size[32]; long __align;} pthread_rwlock_t;
typedef union {char __size[8]; long __align;} pthread_rwlockattr_t;
typedef volatile int pthread_spinlock_t;
typedef union {char __size[20]; long __align;} pthread_barrier_t;
typedef union {char __size[4]; int __align;} pthread_barrierattr_t;
extern long random(void);
extern void srandom(unsigned int __seed);
extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen);
extern char *setstate(char *__statebuf);
struct random_data {
   int32_t *fptr;
   int32_t *rptr;
   int32_t *state;
   int rand_type;
   int rand_deg;
   int rand_sep;
   int32_t *end_ptr;
};
extern int random_r(struct random_data *__buf, int32_t *__result);
extern int srandom_r(unsigned int __seed, struct random_data *__buf);
extern int initstate_r(unsigned int __seed, char *__statebuf, size_t __statelen, struct random_data *__buf);
extern int setstate_r(char *__statebuf, struct random_data *__buf);
extern int rand(void);
extern void srand(unsigned int __seed);
extern int rand_r(unsigned int *__seed);
extern double drand48(void);
extern double erand48(unsigned short __xsubi[3]);
extern long lrand48(void);
extern long nrand48(unsigned short __xsubi[3]);
extern long mrand48(void);
extern long jrand48(unsigned short __xsubi[3]);
extern void srand48(long __seedval);
extern unsigned short *seed48(unsigned short __seed16v[3]);
extern void lcong48(unsigned short __param[7]);
struct drand48_data {
   unsigned short __x[3];
   unsigned short __old_x[3];
   unsigned short __c;
   unsigned short __init;
   unsigned long long __a;
};
extern int drand48_r(struct drand48_data *__buffer, double *__result);
extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *__buffer, double *__result);
extern int lrand48_r(struct drand48_data *__buffer, long *__result);
extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *__buffer, long *__result);
extern int mrand48_r(struct drand48_data *__buffer, long *__result);
extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *__buffer, long *__result);
extern int srand48_r(long __seedval, struct drand48_data *__buffer);
extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer);
extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer);
extern void *malloc(size_t __size);
extern void *calloc(size_t __nmemb, size_t __size);
extern void *realloc(void *__ptr, size_t __size);
extern void free(void *__ptr);
extern void cfree(void *__ptr);
extern void *alloca(size_t __size);
extern void *valloc(size_t __size);
extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size);
extern void abort(void);
extern int atexit(void (*__func)(void));
extern int on_exit(void (*__func)(int __status, void *__arg), void *__arg);
extern void exit(int __status);
extern char *getenv(const char *__name);
extern char *__secure_getenv(const char *__name);
extern int putenv(char *__string);
extern int setenv(const char *__name, const char *__value, int __replace);
extern int unsetenv(const char *__name);
extern int clearenv(void);
extern char *mktemp(char *__template);
extern int mkstemp(char *__template);
extern char *mkdtemp(char *__template);
extern int system(const char *__command);
extern char *realpath(const char *__name, char *__resolved);
typedef int (*__compar_fn_t)(void *, void *);
extern void *bsearch(void *__key, void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
extern int abs(int __x);
extern long labs(long __x);
extern div_t div(int __numer, int __denom);
extern ldiv_t ldiv(long __numer, long __denom);
extern char *ecvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *fcvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *gcvt(double __value, int __ndigit, char *__buf);
extern char *qecvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *qfcvt(double __value, int __ndigit, int *__decpt, int *__sign);
extern char *qgcvt(double __value, int __ndigit, char *__buf);
extern int ecvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, size_t __len);
extern int fcvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, size_t __len);
extern int qecvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, size_t __len);
extern int qfcvt_r(double __value, int __ndigit, int *__decpt, int *__sign, char *__buf, size_t __len);
extern int mblen(const char *__s, size_t __n);
extern int mbtowc(wchar_t *__pwc, const char *__s, size_t __n);
extern int wctomb(char *__s, wchar_t __wchar);
extern size_t mbstowcs(wchar_t *__pwcs, const char *__s, size_t __n);
extern size_t wcstombs(char *__s, const wchar_t *__pwcs, size_t __n);
extern int rpmatch(const char *__response);
extern int posix_openpt(int __oflag);
extern int getloadavg(double __loadavg[], int __nelem);
extern int main(int argc, char *argv[]);
int main(int argc, char *argv[])
{
   int i;
   int n = atoi(argv[1]);
   float sum;
   farray a = farray_new(n);
   for(i = 0; i <= n-1; i += 1)
      farray_set(a, i, (float) i);
   sum = 0;
   for(i = 0; i <= n-1; i += 1)
      sum += farray_get(a, i);
   printf("%f\n", sum/n);
   return 0;
}

Code after inlining

int main(int argc, char *argv[])
{
   int i;
   int n = atoi(argv[1]);
   float sum;
   farray a = farray_new(n);
   float _return0;
   for(i = 0; i <= n-1; i += 1)
      (a->data)[i] = i;
   sum = 0;
   for(i = 0; i <= n-1; i += 1) {
      _return0 = (a->data)[i];
      sum += _return0;
   }
   printf("%f\n", sum/n);
   return 0;
}

Unsplit resulting code


Diff, must be empty

