
Initial code

int main(int argc, char *argv[])
{
   int i = 0;
   int j = i++;
   int k = 0;
   for(i = 0; i <= 9; i += 1)
      for(j = 0; j <= 9; j += 1)
         k = k+i*j;
   // This would prevent the privatization
   //printf("%d\n",k);
   return 0;
}

Code after privatize_module

int main(int argc, char *argv[])
{
   int i = 0;
   int j = i++;
   int k = 0;
   for(i = 0; i <= 9; i += 1)
      for(j = 0; j <= 9; j += 1)
         k = k+i*j;
   // This would prevent the privatization
   //printf("%d\n",k);
   return 0;
}

Code after privatization12

int main(int argc, char *argv[])
{
   int i = 0;
   int j = i++;
   int k = 0;
   {
      int i1;
      for(i1 = 0; i1 <= 9; i1 += 1) {
         int j1;
         for(j1 = 0; j1 <= 9; j1 += 1)
            k = k+i1*j1;
      }
   }
   // This would prevent the privatization
   //printf("%d\n",k);
   return 0;
}

Code after declaration cleaning

int main(int argc, char *argv[])
{
   int i = 0;
   int j = i++;
   int k = 0;
   {
      int i1;
      for(i1 = 0; i1 <= 9; i1 += 1) {
         int j1;
         for(j1 = 0; j1 <= 9; j1 += 1)
            k = k+i1*j1;
      }
   }
   // This would prevent the privatization
   //printf("%d\n",k);
   return 0;
}

Unsplit resulting code


Run code

