
Execute initial code

foo=1
foo=2
foo=3
foo=4

Initial code

void flatten_code11(void)
{
// (0,1)
   // BEGIN BLOCK
   int i;
// (0,2)

   for(i = 0; i <= 3; i += 1) {                                         /*0006*/
// (0,3)
      // BEGIN BLOCK
      static int foo = 0;
// (0,4)

      foo++;                                                            /*0009*/
// (0,5)

      fprintf(stdout, "foo=%d\n", foo);                                 /*0011*/
      // END BLOCK
   }
   // END BLOCK
}

Code with preconditions


//  P() {}

void flatten_code11(void)
{

//  P() {}

// (0,1)
   // BEGIN BLOCK
   int i;

//  P() {}

// (0,2)

   for(i = 0; i <= 3; i += 1) {                                         /*0006*/

//  P(foo,i) {0<=i, i<=3}

// (0,3)
      // BEGIN BLOCK
      static int foo = 0;

//  P(foo,i) {0<=i, i<=3}

// (0,4)

      foo++;                                                            /*0009*/

//  P(foo,i) {0<=i, i<=3}

// (0,5)

      fprintf(stdout, "foo=%d\n", foo);                                 /*0011*/
      // END BLOCK
   }
   // END BLOCK
}

Code after code flattening

void flatten_code11(void)
{
// (0,1)
   // BEGIN BLOCK
   int i;
   static int foo_0 = 0;
// (0,2)

   foo_0++;                                                             /*0009*/
// (0,3)

   fprintf(stdout, "foo=%d\n", foo_0);                                  /*0011*/
// (0,4)

   foo_0++;                                                             /*0009*/
// (0,5)

   fprintf(stdout, "foo=%d\n", foo_0);                                  /*0011*/
// (0,6)

   foo_0++;                                                             /*0009*/
// (0,7)

   fprintf(stdout, "foo=%d\n", foo_0);                                  /*0011*/
// (0,8)

   foo_0++;                                                             /*0009*/
// (0,9)

   fprintf(stdout, "foo=%d\n", foo_0);                                  /*0011*/
// (0,10)
   i = 4;
   // END BLOCK
}

Unsplit and compile resulting code


Execute resulting code

foo=1
foo=2
foo=3
foo=4
