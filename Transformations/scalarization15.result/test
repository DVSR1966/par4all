
Privatized regions

int func(int n)
{

//  <i-PRIVATE-EXACT-{}>
//  <j-PRIVATE-EXACT-{}>
//  <x[PHI1]-PRIVATE-EXACT-{0<=PHI1, PHI1<=99}>
//  <y[PHI1][PHI2]-PRIVATE-EXACT-{0<=PHI1, PHI1<=99, 0<=PHI2,
//    PHI2<=99}>

   // BEGIN BLOCK
   int x[100];
   int y[100][100];
   int t[100];
   int i;
   int j;

   for(i = 0; i <= 99; i += 1) {

//  <j-PRIVATE-EXACT-{}>
//  <x[PHI1]-PRIVATE-EXACT-{PHI1==i, 0<=i, i<=99}>
//  <y[PHI1][PHI2]-PRIVATE-EXACT-{PHI1==i, 0<=PHI2, PHI2<=99, 0<=i,
//    i<=99}>


//  <y[PHI1][PHI2]-COPYOUT-EXACT-{PHI1==i, PHI1==1, PHI2==1}>

      // BEGIN BLOCK
      PRIVATE i,j,x[100],y[100][100]
      x[i] = i;
      for(j = 0; j <= 99; j += 1)
         PRIVATE j,y[100][100]

//  <y[PHI1][PHI2]-PRIVATE-EXACT-{PHI1==i, PHI2==j, 0<=i, i<=99, 0<=j,
//    j<=99}>


//  <y[PHI1][PHI2]-COPYOUT-EXACT-{PHI1==i, PHI1==1, j==PHI2, PHI2==1}>

         //t[i] = x[i];
         y[i][j] = x[i]+j;
      // END BLOCK
   }
   return y[1][1];
   // END BLOCK
}

Code after scalarization

