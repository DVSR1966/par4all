
Compile initial code


Initial code

int flatten_code13(void)
{
// (0,1)
   // BEGIN BLOCK
   int i1, i2;                                                          /*0015*/
// (0,3)
   i1 = foo1();                                                         /*0016*/
// (0,4)
   i2 = foo2();                                                         /*0017*/
// (0,5)
   return i1+i2;                                                        /*0018*/
   // END BLOCK
}
int foo1(void)
{
// (0,1)
   // BEGIN BLOCK
   int bla(void);                                                       /*0004*/
// (0,3)
   return bla();                                                        /*0005*/
   // END BLOCK
}
int foo2(void)
{
// (0,1)
   // BEGIN BLOCK
   int bla(void);                                                       /*0004*/
// (0,3)
   return bla();                                                        /*0005*/
   // END BLOCK
}
 flatten_code13
     foo1
         bla
     foo2
         bla
int flatten_code13(void)
{
// (0,1)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   int i1, i2;                                                          /*0007*/
   /*0005*/
   /*0015*/
   //PIPS generated variable
   int _return0;                                                        /*0010*/
   /*0007*/
   //PIPS generated variable
   int _return1;                                                        /*0012*/
   {
// (0,5)
      // BEGIN BLOCK
      // (0,4)
      // BEGIN BLOCK
      // (0,1)
      // BEGIN BLOCK
      int bla(void);                                                    /*0018*/
// (0,7)
      /*0013*/
      // (0,6)
      /*0004*/
      // (0,3)
      // BEGIN BLOCK
      // (statement ordering unavailable)
      _return0 = bla();                                                 /*0024*/
// (0,8)
      /*0017*/
      // (0,7)
      // (statement ordering unavailable)
      // END BLOCK
      // (statement ordering unavailable)
      ;
      // END BLOCK
   }
// (0,9)
   // (0,8)
   // (statement ordering unavailable)
   i1 = _return0;                                                       /*0034*/
   {
// (0,10)
      // BEGIN BLOCK
      /*0026*/
      // (statement ordering unavailable)
      // BEGIN BLOCK
      // (statement ordering unavailable)
      // END BLOCK
      // (0,4)
      // (0,1)
      // BEGIN BLOCK
      int bla(void);                                                    /*0046*/
// (0,12)
      /*0004*/
      // (0,3)
      // BEGIN BLOCK
      // (statement ordering unavailable)
      _return1 = bla();                                                 /*0050*/
// (0,13)
      // (statement ordering unavailable)
      // END BLOCK
      // (statement ordering unavailable)
      ;
      // END BLOCK
   }
// (0,14)
   // (statement ordering unavailable)
   i2 = _return1;                                                       /*0059*/
// (0,15)
   // END BLOCK
   // END BLOCK
   // (0,10)
   /*0017*/
   // (0,5)
   return i1+i2;                                                        /*0065*/
   // END BLOCK
}
int flatten_code13(void)
{
// (0,1)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   int i1, i2;                                                          /*0007*/
   /*0005*/
   /*0015*/
   //PIPS generated variable
   int _return0;                                                        /*0010*/
   /*0007*/
   //PIPS generated variable
   int _return1;                                                        /*0012*/
// (0,5)
   // (0,4)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   /*0013*/
   // (0,6)
   /*0004*/
   // (0,3)
   // BEGIN BLOCK
   // (statement ordering unavailable)
   _return0 = bla();                                                    /*0024*/
// (0,6)
   /*0017*/
   // (0,7)
   // (statement ordering unavailable)
   // END BLOCK
   // (statement ordering unavailable)
   // (0,8)
   // (statement ordering unavailable)
   i1 = _return0;                                                       /*0034*/
// (0,7)
   /*0026*/
   // (statement ordering unavailable)
   // BEGIN BLOCK
   // (statement ordering unavailable)
   // END BLOCK
   // (0,4)
   // (0,1)
   // BEGIN BLOCK
   /*0004*/
   // (0,3)
   // BEGIN BLOCK
   // (statement ordering unavailable)
   _return1 = bla();                                                    /*0050*/
// (0,8)
   // (statement ordering unavailable)
   // END BLOCK
   // (statement ordering unavailable)
   // (statement ordering unavailable)
   i2 = _return1;                                                       /*0059*/
// (0,9)
   // END BLOCK
   // END BLOCK
   // (0,10)
   /*0017*/
   // (0,5)
   return i1+i2;                                                        /*0065*/
   // END BLOCK
}
int flatten_code13(void)
{
// (0,1)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   int i1, i2;                                                          /*0038*/
   /*0007*/
   /*0005*/
   /*0015*/
   //PIPS generated variable
   int _return0;                                                        /*0042*/
   /*0010*/
   /*0007*/
   //PIPS generated variable
   int _return1;                                                        /*0045*/
// (0,5)
   /*0012*/
   // (0,5)
   // (0,4)
   // BEGIN BLOCK
   // (0,1)
   // BEGIN BLOCK
   /*0013*/
   // (0,6)
   /*0004*/
   // (0,3)
   // BEGIN BLOCK
   // (statement ordering unavailable)
   _return0 = bla();                                                    /*0057*/
// (0,6)
   /*0024*/
   // (0,6)
   /*0017*/
   // (0,7)
   // (statement ordering unavailable)
   // END BLOCK
   // (statement ordering unavailable)
   // (0,8)
   // (statement ordering unavailable)
   i1 = _return0;                                                       /*0066*/
// (0,7)
   /*0034*/
   // (0,7)
   /*0026*/
   // (statement ordering unavailable)
   // BEGIN BLOCK
   // (statement ordering unavailable)
   // END BLOCK
   // (0,4)
   // (0,1)
   // BEGIN BLOCK
   /*0004*/
   // (0,3)
   // BEGIN BLOCK
   // (statement ordering unavailable)
   _return1 = bla();                                                    /*0080*/
// (0,8)
   /*0050*/
   // (0,8)
   // (statement ordering unavailable)
   // END BLOCK
   // (statement ordering unavailable)
   // (statement ordering unavailable)
   i2 = _return1;                                                       /*0086*/
// (0,9)
   /*0059*/
   // (0,9)
   // END BLOCK
   // END BLOCK
   // (0,10)
   /*0017*/
   // (0,5)
   return i1+i2;                                                        /*0093*/
   // END BLOCK
}
