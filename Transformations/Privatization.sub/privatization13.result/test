//
// Code after privatize_module for module main
//
int main()
{
   int i, j;
   int tmp;
   int a[10][10];
   
   // tmp must be declared as private for the parallel loop
   // even if it initially belongs to the loop locals of the
   // inner loop which is not parallel
#pragma omp for private(i,j,tmp)
   for(i = 0; i <= 9; i += 1) {
      a[i][0] = i;
#pragma omp for private(j,tmp)
      for(j = 1; j <= 9; j += 1) {
         tmp = a[i][j-1];
         a[i][j] = tmp+j;
      }
   }
   return 0;
}
//
// Code after localize_declaration for module main
//
int main()
{
   int a[10][10];
   {
      //PIPS generated variable
      int i;
      
      // tmp must be declared as private for the parallel loop
      // even if it initially belongs to the loop locals of the
      // inner loop which is not parallel
#pragma omp for private(i)
      for(i = 0; i <= 9; i += 1) {
         //PIPS generated variable
         int j1, tmp1;
         a[i][0] = i;
#pragma omp for private(j1,tmp1)
         for(j1 = 1; j1 <= 9; j1 += 1) {
            tmp1 = a[i][j1-1];
            a[i][j1] = tmp1+j1;
         }
      }
   }
   return 0;
}
