
Proper effects for "init_s"

void init_s(s_t s, int max)
{
   // BEGIN BLOCK
   extern char *malloc(int);
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_ max
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ s[2]

   s.tab = (float *) malloc(max*sizeof(float));
//               <must be read   >: max
//               <must be written>: s[1]
   s.max = max;
   // END BLOCK
}

Cumulated effects for "init_s"

//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_ max
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ s[1] s[2]
void init_s(s_t s, int max)
{
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_ max
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ s[1] s[2]
   // BEGIN BLOCK
   extern char *malloc(int);
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_ max
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ s[2]

   s.tab = (float *) malloc(max*sizeof(float));
//               <must be read   >: max
//               <must be written>: s[1]
   s.max = max;
   // END BLOCK
}

Proper effects for "main"

int main()
{
   // BEGIN BLOCK
   s_t s;
   int j;
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_ s
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ s[1] s[2]

   init_s(s, 10);
//               <may be written >: s[2][*]
//               <must be read   >: s s[2]

   compute_s(s, 10);
   
   
   return 0;
   // END BLOCK
}

Cumulated effects for "main"

//               <may be read    >: TOP-LEVEL:*MEMORY*
//               <may be written >: TOP-LEVEL:*MEMORY*
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_
int main()
{
//               <may be read    >: TOP-LEVEL:*MEMORY*
//               <may be written >: TOP-LEVEL:*MEMORY*
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_ s
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ s[1] s[2]
   // BEGIN BLOCK
   s_t s;
   int j;
//               <must be read   >: _MALLOC_EFFECTS:_MALLOC_ s
//               <must be written>: _MALLOC_EFFECTS:_MALLOC_ s[1] s[2]

   init_s(s, 10);
//               <may be written >: s[2][*]
//               <must be read   >: s s[2]

   compute_s(s, 10);
   
   
   return 0;
   // END BLOCK
}
