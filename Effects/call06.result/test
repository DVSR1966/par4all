
Parsed code for "call06"

void call06(int r, int m, int *x)
{
   int j;

   for (j = 0;j<m;j++)
      x[j] = 10*r+j;
}

Code for "call06"

void call06(int r, int m, int *x)
{
   int j;

   for(j = 0; j <= m-1; j += 1)
      x[j] = 10*r+j;
}

Proper effects for "call06"

void call06(int r, int m, int *x)
{
   int j;
//               <must be read   >: m
//               <must be written>: j

   for(j = 0; j <= m-1; j += 1)
//               <must be read   >: j m r
//               <must be written>: x[j]
      x[j] = 10*r+j;
}

Cumulated effects for "call06"

//               <may be read    >: r
//               <may be written >: x[*]
//               <must be read   >: m
void call06(int r, int m, int *x)
{
   int j;
//               <may be read    >: j r
//               <may be written >: x[*]
//               <must be read   >: m
//               <must be written>: j

   for(j = 0; j <= m-1; j += 1)
//               <may be written >: x[*]
//               <must be read   >: j m r
      x[j] = 10*r+j;
}

Proper effects for "main"

main()
{
   int d1 = 4;
   int d2 = 4;
   int y[d1][d2];
   int i;
   int j;
//               <must be read   >: d1
//               <must be written>: i

   for(i = 0; i <= d1-1; i += 1)
//               <may be written >: y[i][*]
//               <must be read   >: d1 d2 i
      call06(i, d2, &y[i][0]);
}

Cumulated effects for "main"

main()
{
   int d1 = 4;
   int d2 = 4;
   int y[d1][d2];
   int i;
   int j;
//               <may be read    >: d2 i
//               <may be written >: y[*][*]
//               <must be read   >: d1
//               <must be written>: i

   for(i = 0; i <= d1-1; i += 1)
//               <may be written >: y[*][*]
//               <must be read   >: d1 d2 i
      call06(i, d2, &y[i][0]);
}

Regions for "call06"


//  <m-R-EXACT-{}>
//  <r-R-EXACT-{}>
//  <x[PHI1]-W-MAY-{0<=PHI1, PHI1+1<=m}>

void call06(int r, int m, int *x)
{
   int j;

//  <j-R-EXACT-{}>
//  <j-W-EXACT-{}>
//  <m-R-EXACT-{}>
//  <r-R-EXACT-{}>
//  <x[PHI1]-W-MAY-{0<=PHI1, PHI1+1<=m}>


   for(j = 0; j <= m-1; j += 1)

//  <j-R-EXACT-{}>
//  <m-R-EXACT-{}>
//  <r-R-EXACT-{}>
//  <x[PHI1]-W-EXACT-{PHI1==j, 0<=j, 1+j<=m}>

      x[j] = 10*r+j;
}

Regions for "main"

main()
{
   int d1 = 4;
   int d2 = 4;
   int y[d1][d2];
   int i;
   int j;

//  <d1-R-EXACT-{}>
//  <d2-R-EXACT-{}>
//  <i-R-EXACT-{}>
//  <i-W-EXACT-{}>


   for(i = 0; i <= d1-1; i += 1)

//  <d1-R-EXACT-{}>
//  <d2-R-EXACT-{}>
//  <i-R-EXACT-{}>

      call06(i, d2, &y[i][0]);
}
