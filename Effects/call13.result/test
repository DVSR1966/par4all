
Parsed code for "call13"

void call13(int nrec, int nsa, int ntt, Cplfloat ptrin[nrec][nsa], Cplfloat ptrout[nrec-ntt+1][ntt][nsa][ntt][nsa])
{
   int i;
   int j1;
   int j2;
   int k1;
   int k2;
   float R;
   float I;

   R = 0.0;
   I = 0.0;

   for (i = 0;i<nrec-ntt+1;i++)
      //    MOTIF     
      for (j1 = 0;j1<ntt;j1++)
         for (j2 = 0;j2<nsa;j2++)
            for (k1 = 0;k1<ntt;k1++)
               for (k2 = 0;k2<nsa;k2++)
                  R = ptrin[i+j1][j2].re*ptrin[i+k1][k2].re+ptrin[i+j1][j2].im*ptrin[i+k1][k2].im;
}

Code for "call13"

void call13(int nrec, int nsa, int ntt, Cplfloat ptrin[nrec][nsa], Cplfloat ptrout[nrec-ntt+1][ntt][nsa][ntt][nsa])
{
   int i;
   int j1;
   int j2;
   int k1;
   int k2;
   float R;
   float I;

   R = 0.0;
   I = 0.0;

   for(i = 0; i <= nrec-ntt+1-1; i += 1)
      //    MOTIF     
      for(j1 = 0; j1 <= ntt-1; j1 += 1)
         for(j2 = 0; j2 <= nsa-1; j2 += 1)
            for(k1 = 0; k1 <= ntt-1; k1 += 1)
               for(k2 = 0; k2 <= nsa-1; k2 += 1)
                  R = ptrin[i+j1][j2].re*ptrin[i+k1][k2].re+ptrin[i+j1][j2].im*ptrin[i+k1][k2].im;
}

Proper effects for "call13"

void call13(int nrec, int nsa, int ntt, Cplfloat ptrin[nrec][nsa], Cplfloat ptrout[nrec-ntt+1][ntt][nsa][ntt][nsa])
{
   int i;
   int j1;
   int j2;
   int k1;
   int k2;
   float R;
   float I;
//               <must be written>: R

   R = 0.0;
//               <must be written>: I
   I = 0.0;
//               <must be read   >: nrec ntt
//               <must be written>: i

   for(i = 0; i <= nrec-ntt+1-1; i += 1)
//               <must be read   >: nrec ntt
//               <must be written>: j1
      //    MOTIF     
      for(j1 = 0; j1 <= ntt-1; j1 += 1)
//               <must be read   >: nrec nsa ntt
//               <must be written>: j2
         for(j2 = 0; j2 <= nsa-1; j2 += 1)
//               <must be read   >: nrec nsa ntt
//               <must be written>: k1
            for(k1 = 0; k1 <= ntt-1; k1 += 1)
//               <must be read   >: nrec nsa ntt
//               <must be written>: k2
               for(k2 = 0; k2 <= nsa-1; k2 += 1)
//               <must be read   >: i j1 j2 k1 k2 nrec nsa ntt 
//                                  ptrin[i+k1][k2][2] 
//                                  ptrin[i+j1][j2][2] 
//                                  ptrin[i+k1][k2][1] 
//                                  ptrin[i+j1][j2][1]
//               <must be written>: R
                  R = ptrin[i+j1][j2].re*ptrin[i+k1][k2].re+ptrin[i+j1][j2].im*ptrin[i+k1][k2].im;
}

Cumulated effects for "call13"

//               <may be read    >: nsa ptrin[*][*][2] ptrin[*][*][1]
//               <must be read   >: DUMMY-PARAMETER-138577896:nrec 
//                                  DUMMY-PARAMETER-138577896:nsa 
//                                  DUMMY-PARAMETER-138577896:ntt nrec
//                                  nrec nsa ntt ntt
void call13(int nrec, int nsa, int ntt, Cplfloat ptrin[nrec][nsa], Cplfloat ptrout[nrec-ntt+1][ntt][nsa][ntt][nsa])
{
   int i;
   int j1;
   int j2;
   int k1;
   int k2;
   float R;
   float I;
//               <must be written>: R

   R = 0.0;
//               <must be written>: I
   I = 0.0;
//               <may be read    >: i j1 j2 k1 k2 nsa ptrin[*][*][1] 
//                                  ptrin[*][*][2]
//               <may be written >: R j1 j2 k1 k2
//               <must be read   >: nrec ntt
//               <must be written>: i

   for(i = 0; i <= nrec-ntt+1-1; i += 1)
//               <may be read    >: i j1 j2 k1 k2 nsa ptrin[*][*][2] 
//                                  ptrin[*][*][1]
//               <may be written >: R j2 k1 k2
//               <must be read   >: nrec ntt
//               <must be written>: j1
      //    MOTIF     
      for(j1 = 0; j1 <= ntt-1; j1 += 1)
//               <may be read    >: i j1 j2 k1 k2 ptrin[*][*][1] 
//                                  ptrin[*][*][2]
//               <may be written >: R k1 k2
//               <must be read   >: nrec nsa ntt
//               <must be written>: j2
         for(j2 = 0; j2 <= nsa-1; j2 += 1)
//               <may be read    >: i j1 j2 k1 k2 ptrin[*][*][2] 
//                                  ptrin[*][*][1]
//               <may be written >: R k2
//               <must be read   >: nrec nsa ntt
//               <must be written>: k1
            for(k1 = 0; k1 <= ntt-1; k1 += 1)
//               <may be read    >: i j1 j2 k1 k2 ptrin[*][*][1] 
//                                  ptrin[*][*][2]
//               <may be written >: R
//               <must be read   >: nrec nsa ntt
//               <must be written>: k2
               for(k2 = 0; k2 <= nsa-1; k2 += 1)
//               <may be read    >: ptrin[*][*][2] ptrin[*][*][1]
//               <must be read   >: i j1 j2 k1 k2 nrec nsa ntt
//               <must be written>: R
                  R = ptrin[i+j1][j2].re*ptrin[i+k1][k2].re+ptrin[i+j1][j2].im*ptrin[i+k1][k2].im;
}
