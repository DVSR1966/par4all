
// IN Pointer values: none


// OUT Pointer values: none

void dereferencing02()
{

// Pointer values: none

   double x = 1.;

// Pointer values: none

   double *p = &x;

// Pointer values:
// p == &x (exact);

   double **q = &p;

// Pointer values:
// p == &x (exact);
// q == &p (exact);

   double **w;

// Pointer values:
// p == &x (exact);
// q == &p (exact);
// w == *ANY_MODULE*:*UNDEFINED* (exact);

   int i = 1;

// Pointer values:
// p == &x (exact);
// q == &p (exact);
// w == *ANY_MODULE*:*UNDEFINED* (exact);

   
   
   **q = 2.;

// Pointer values:
// p == &x (exact);
// q == &p (exact);
// w == *ANY_MODULE*:*UNDEFINED* (exact);

   **(q+(i = 0)) = 3.;

// Pointer values:
// p == &x (exact);
// q == &p (exact);
// w == *ANY_MODULE*:*UNDEFINED* (exact);

   **(w+(i = 2)) = 4.;

// Pointer values:
// p == &x (exact);
// q == &p (exact);
// w == *ANY_MODULE*:*UNDEFINED* (exact);

   x = **q;

// Pointer values:
// p == &x (exact);
// q == &p (exact);
// w == *ANY_MODULE*:*UNDEFINED* (exact);

   q++;

// Pointer values:
// p == &x (exact);
// q == &*ANY_MODULE*:*ANYWHERE* (may);
// w == *ANY_MODULE*:*UNDEFINED* (exact);

   *q++;
}

// IN Pointer values: none


// OUT Pointer values: none

int main()
{

// Pointer values: none

   dereferencing02();

// Pointer values: none

   return 1;
}
void dereferencing02()
{
//             <    is written>: x
   double x = 1.;
//             <    is written>: p
   double *p = &x;
//             <    is written>: q
   double **q = &p;
   double **w;
//             <    is written>: i
   int i = 1;
//             <    is read   >: p q
//             <    is written>: x
   
   
   **q = 2.;
//             <    is read   >: p q
//             <    is written>: i x
   **(q+(i = 0)) = 3.;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <may be written>: *ANY_MODULE*:*ANYWHERE*
   **(w+(i = 2)) = 4.;
//             <    is read   >: p q x
//             <    is written>: x
   x = **q;
//             <    is read   >: q
//             <    is written>: q
   q++;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <    is written>: q
   *q++;
}
int main()
{
   dereferencing02();
   return 1;
}
void dereferencing02()
{

//  <x-W-EXACT-{}>

   double x = 1.;

//  <p-W-EXACT-{}>

   double *p = &x;

//  <q-W-EXACT-{}>

   double **q = &p;
   double **w;

//  <i-W-EXACT-{}>

   int i = 1;

//  <p-R-EXACT-{i==1}>
//  <q-R-EXACT-{}>
//  <x-W-EXACT-{}>

   
   
   **q = 2.;

//  <i-W-EXACT-{}>
//  <p-R-EXACT-{i==1}>
//  <q-R-EXACT-{}>
//  <x-W-EXACT-{}>

   **(q+(i = 0)) = 3.;

//  <*ANY_MODULE*:*ANYWHERE*-R-MAY-{}>
//  <*ANY_MODULE*:*ANYWHERE*-W-MAY-{}>

   **(w+(i = 2)) = 4.;

//  <p-R-EXACT-{}>
//  <q-R-EXACT-{}>
//  <x-R-EXACT-{}>
//  <x-W-EXACT-{}>

   x = **q;

//  <q-R-EXACT-{}>
//  <q-W-EXACT-{}>

   q++;

//  <q-W-EXACT-{}>
//  <*ANY_MODULE*:*ANYWHERE*-R-MAY-{}>

   *q++;
}
int main()
{
   dereferencing02();
   return 1;
}
void dereferencing02()
{

//  <x-W-EXACT-{}>

   double x = 1.;

//  <p-W-EXACT-{}>

   double *p = &x;

//  <q-W-EXACT-{}>

   double **q = &p;
   double **w;

//  <i-W-EXACT-{}>

   int i = 1;

//  <p-R-EXACT-{i==1}>
//  <q-R-EXACT-{}>
//  <x-W-EXACT-{}>

   
   
   **q = 2.;

//  <i-W-EXACT-{}>
//  <p-R-EXACT-{i==1}>
//  <q-R-EXACT-{}>
//  <x-W-EXACT-{}>

   **(q+(i = 0)) = 3.;

//  <*ANY_MODULE*:*ANYWHERE*-R-MAY-{}>
//  <*ANY_MODULE*:*ANYWHERE*-W-MAY-{}>

   **(w+(i = 2)) = 4.;

//  <p-R-EXACT-{}>
//  <q-R-EXACT-{}>
//  <x-R-EXACT-{}>
//  <x-W-EXACT-{}>

   x = **q;

//  <q-R-EXACT-{}>
//  <q-W-EXACT-{}>

   q++;

//  <q-W-EXACT-{}>
//  <*ANY_MODULE*:*ANYWHERE*-R-MAY-{}>

   *q++;
}
int main()
{
   dereferencing02();
   return 1;
}
