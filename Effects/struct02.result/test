
Parsed printed file for "struct02"

int struct02()
{
   struct two {
      int first;
      int second;
   };
   struct two x[10];
   int i = 0;

   for (i = 0;i<10;i++)
      if (1) {
         x[i].first = 1;
         x[i].second = 0;
      }
      else {
         x[i].first = 0;
         x[i].second = 1;
      }
}

Proper effetcs for "struct02"

int struct02()
{
   struct two {
      int first;
      int second;
   };
   struct two x[10];
   int i = 0;
//               <must be written>: i

   for(i = 0; i <= 9; i += 1)
      if (1) {
//               <must be read   >: i
//               <must be written>: x[i][1]
         x[i].first = 1;
//               <must be read   >: i
//               <must be written>: x[i][2]
         x[i].second = 0;
      }
      else {
//               <must be read   >: i
//               <must be written>: x[i][1]
         x[i].first = 0;
//               <must be read   >: i
//               <must be written>: x[i][2]
         x[i].second = 1;
      }
}

Cumulated effetcs for "struct02"

int struct02()
{
   struct two {
      int first;
      int second;
   };
   struct two x[10];
   int i = 0;
//               <may be read    >: i
//               <may be written >: x[*][1] x[*][2]
//               <must be written>: i

   for(i = 0; i <= 9; i += 1)
//               <may be written >: x[*][1] x[*][2]
//               <must be read   >: i
      if (1) {
//               <may be written >: x[*][1]
//               <must be read   >: i
         x[i].first = 1;
//               <may be written >: x[*][2]
//               <must be read   >: i
         x[i].second = 0;
      }
      else {
//               <may be written >: x[*][1]
//               <must be read   >: i
         x[i].first = 0;
//               <may be written >: x[*][2]
//               <must be read   >: i
         x[i].second = 1;
      }
}

Transformers for "main"


//  T() {}

int struct02()
{
   struct two {
      int first;
      int second;
   };
   struct two x[10];
   int i = 0;

//  T(i) {0<=i}


   for(i = 0; i <= 9; i += 1)

//  T() {0<=i, i<=9}

      if (1) {

//  T() {0<=i, i<=9}

         x[i].first = 1;

//  T() {0<=i, i<=9}

         x[i].second = 0;
      }
      else {

//  T() {0==-1}

         x[i].first = 0;

//  T() {0==-1}

         x[i].second = 1;
      }
}

Preconditions for "main"


//  P() {}

int struct02()
{
   struct two {
      int first;
      int second;
   };
   struct two x[10];
   int i = 0;

//  P() {i==0}


   for(i = 0; i <= 9; i += 1)

//  P(i) {0<=i, i<=9}

      if (1) {

//  P(i) {0<=i, i<=9}

         x[i].first = 1;

//  P(i) {0<=i, i<=9}

         x[i].second = 0;
      }
      else {

//  P() {0==-1}

         x[i].first = 0;

//  P() {0==-1}

         x[i].second = 1;
      }
}

Printed files with regions

int struct02()
{
   struct two {
      int first;
      int second;
   };
   struct two x[10];
   int i = 0;

//  <x[PHI1][PHI2]-W-EXACT-{0<=PHI1, PHI1<=9, 1<=PHI2, PHI2<=2}>


   for(i = 0; i <= 9; i += 1)

//  <x[PHI1][PHI2]-W-EXACT-{PHI1==i, 1<=PHI2, PHI2<=2, 0<=i, i<=9}>

      if (1) {

//  <x[PHI1][PHI2]-W-EXACT-{PHI1==i, PHI2==1, 0<=i, i<=9}>

         x[i].first = 1;

//  <x[PHI1][PHI2]-W-EXACT-{PHI1==i, PHI2==2, 0<=i, i<=9}>

         x[i].second = 0;
      }
      else {
         x[i].first = 0;
         x[i].second = 1;
      }
}

Printed files after parallelization

int struct02()
{
   struct two {
      int first;
      int second;
   };
   struct two x[10];
   int i = 0;

#pragma omp parallel for 
   for(i = 0; i <= 9; i += 1)
      if (1) {
         x[i].first = 1;
         x[i].second = 0;
      }
      else {
         x[i].first = 0;
         x[i].second = 1;
      }
}
