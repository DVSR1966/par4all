
PRINT CODE for main

int main()
{
   int entier;
   int graine;
   double virgule;
   
   /* Some versions of <linux/posix_types.h> define these macros.  */
   
   
   
   /* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */
   
   
   
   
   /* fd_set for select and pselect.  */
   
   
   /* XPG4.2 requires this member name.  Otherwise avoid the name
          from the global namespace.  */
   
   
   
   
   graine = 50;
   srandom(graine);
   /* generator initialization */
   virgule = (double) rand()/(2147483647+1);
   entier = 1+rand();
}

Print cumulated effects for main

//               <must be read   >: _RANDOM_EFFECTS:GEN_SEED
//               <must be written>: _RANDOM_EFFECTS:GEN_SEED
int main()
{
   int entier;
   int graine;
   double virgule;
//               <must be written>: graine
   
   /* Some versions of <linux/posix_types.h> define these macros.  */
   
   
   
   /* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */
   
   
   
   
   /* fd_set for select and pselect.  */
   
   
   /* XPG4.2 requires this member name.  Otherwise avoid the name
          from the global namespace.  */
   
   
   
   
   graine = 50;
//               <must be read   >: graine
//               <must be written>: _RANDOM_EFFECTS:GEN_SEED
   srandom(graine);
//               <must be read   >: _RANDOM_EFFECTS:GEN_SEED
//               <must be written>: _RANDOM_EFFECTS:GEN_SEED virgule
   /* generator initialization */
   virgule = (double) rand()/(2147483647+1);
//               <must be read   >: _RANDOM_EFFECTS:GEN_SEED
//               <must be written>: _RANDOM_EFFECTS:GEN_SEED entier
   entier = 1+rand();
}

Transformers for main


//  T() {}

int main()
{
   int entier;
   int graine;
   double virgule;

//  T(graine) {graine==50}

   
   /* Some versions of <linux/posix_types.h> define these macros.  */
   
   
   
   /* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */
   
   
   
   
   /* fd_set for select and pselect.  */
   
   
   /* XPG4.2 requires this member name.  Otherwise avoid the name
          from the global namespace.  */
   
   
   
   
   graine = 50;

//  T() {}

   srandom(graine);

//  T() {}

   /* generator initialization */
   virgule = (double) rand()/(2147483647+1);

//  T(entier) {}

   entier = 1+rand();
}
