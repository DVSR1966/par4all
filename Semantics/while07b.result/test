int main()
{
   int i;
   int j;
   int k;
   int a[500];
//:   BEGIN BLOCK
//               <must be written>: i

   i = 0;                                                               /*0007*/
//               <must be written>: j
   j = 1;                                                               /*0008*/
//               <must be read   >: i
   while (i<=499) {                                                     /*0009*/
//:      BEGIN BLOCK
//               <must be read   >: j
//               <must be written>: j
      // The lower bound on i and j should not be lost...
      j++;                                                              /*0011*/
//               <must be read   >: i
//               <must be written>: a[i]
      // Cumulated effects should be a[i] here and not a[*]
      a[i] = i;                                                         /*0013*/
//               <must be read   >: i
//               <must be written>: i
      i = i+1;                                                          /*0014*/
//:      END BLOCK
   }
//               <must be written>: k
   // We should have the precondition i == 500, j == 501
   // if we would use the proper fix point operator (derivative)
   k = 2;                                                               /*0018*/
//               <must be read   >: k
   return k;                                                            /*0019*/
//:   END BLOCK
}
int main()
{
   int i;
   int j;
   int k;
   int a[500];
//               <may be written >: a[*]
//               <must be read   >: i j k
//               <must be written>: i j k
//:   BEGIN BLOCK
//               <must be written>: i

   i = 0;                                                               /*0007*/
//               <must be written>: j
   j = 1;                                                               /*0008*/
//               <may be written >: a[*]
//               <must be read   >: i j
//               <must be written>: i j
   while (i<=499) {                                                     /*0009*/
//               <may be written >: a[*]
//               <must be read   >: i j
//               <must be written>: i j
//:      BEGIN BLOCK
//               <must be read   >: j
//               <must be written>: j
      // The lower bound on i and j should not be lost...
      j++;                                                              /*0011*/
//               <may be written >: a[*]
//               <must be read   >: i
      // Cumulated effects should be a[i] here and not a[*]
      a[i] = i;                                                         /*0013*/
//               <must be read   >: i
//               <must be written>: i
      i = i+1;                                                          /*0014*/
//:      END BLOCK
   }
//               <must be written>: k
   // We should have the precondition i == 500, j == 501
   // if we would use the proper fix point operator (derivative)
   k = 2;                                                               /*0018*/
//               <must be read   >: k
   return k;                                                            /*0019*/
//:   END BLOCK
}

//  T(main) {main==2}

int main()
{
   int i;
   int j;
   int k;
   int a[500];

//  T(main) {main==2}

//:   BEGIN BLOCK

//  T(i) {i==0}


   i = 0;                                                               /*0007*/

//  T(j) {j==1}

   j = 1;                                                               /*0008*/

//  T(i,j) {i+j#init==i#init+j, j#init<=j}

   while (i<=499) {                                                     /*0009*/

//  T(i,j) {i==i#init+1, j==j#init+1}

//:      BEGIN BLOCK

//  T(j) {j==j#init+1}

      // The lower bound on i and j should not be lost...
      j++;                                                              /*0011*/

//  T() {}

      // Cumulated effects should be a[i] here and not a[*]
      a[i] = i;                                                         /*0013*/

//  T(i) {i==i#init+1}

      i = i+1;                                                          /*0014*/
//:      END BLOCK
   }

//  T(k) {k==2}

   // We should have the precondition i == 500, j == 501
   // if we would use the proper fix point operator (derivative)
   k = 2;                                                               /*0018*/

//  T(main) {k==main}

   return k;                                                            /*0019*/
//:   END BLOCK
}

//  P() {}

int main()
{
   int i;
   int j;
   int k;
   int a[500];

//  P() {}

//:   BEGIN BLOCK

//  P() {}


   i = 0;                                                               /*0007*/

//  P(i) {i==0}

   j = 1;                                                               /*0008*/

//  P(i,j) {i==0, j==1}

   while (i<=499) {                                                     /*0009*/

//  P(i,j) {i==j-1, 0<=i, i<=499}

//:      BEGIN BLOCK

//  P(i,j) {i==j-1, 0<=i, i<=499}

      // The lower bound on i and j should not be lost...
      j++;                                                              /*0011*/

//  P(i,j) {i==j-2, 0<=i, i<=499}

      // Cumulated effects should be a[i] here and not a[*]
      a[i] = i;                                                         /*0013*/

//  P(i,j) {i==j-2, 0<=i, i<=499}

      i = i+1;                                                          /*0014*/
//:      END BLOCK
   }

//  P(i,j) {i==500, j==501}

   // We should have the precondition i == 500, j == 501
   // if we would use the proper fix point operator (derivative)
   k = 2;                                                               /*0018*/

//  P(i,j,k) {i==500, j==501, k==2}

   return k;                                                            /*0019*/
//:   END BLOCK
}
