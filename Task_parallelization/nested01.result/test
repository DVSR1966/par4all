// MPI style
void main(int argc, char *argv[])
{
   {
      //PIPS generated variable
      int rank0;
      //PIPS generated variable
      MPI_Status status0;
      //PIPS generated variable
      MPI_Request request0;
      MPI_Init(&argc, &argv);
      MPI_Comm_rank(MPI_COMM_WORLD, &rank0);
      //PIPS generated variable
      double b, a;
      //PIPS generated variable
      int N;
      //PIPS generated variable
      double D[100], C[100], B[100], A[100];
      //PIPS generated variable
      unsigned int i;
      if (rank0==0) {
         N = 100;
         MPI_Isend(N, 1, MPI_INT, 1, MPI_ANY_TAG, MPI_COMM_WORLD, &request0);
      }
      MPI_Barrier(MPI_COMM_WORLD);
      if (rank0==0)
         for(i = 0; i <= N-1; i += 1) {



            B[i] = 3;


            A[i] = 5;



         }
      if (rank0==1) {
         MPI_Recv(N, 1, MPI_INT, 0, MPI_ANY_TAG, MPI_COMM_WORLD, &status0);
         for(i = 0; i <= N-1; i += 1)
            C[i] = 5;
         MPI_Isend(C, 100, MPI_FLOAT, 0, MPI_ANY_TAG, MPI_COMM_WORLD, &request0);
      }
      MPI_Barrier(MPI_COMM_WORLD);
      if (rank0==0) {
         MPI_Recv(C, 100, MPI_FLOAT, 1, MPI_ANY_TAG, MPI_COMM_WORLD, &status0);
         for(i = 0; i <= N-1; i += 1)
            D[i] = A[i]+B[i]+C[i];
      }
      MPI_Barrier(MPI_COMM_WORLD);
   }
   MPI_Finalize();
}
// OMP style
void main(int argc, char *argv[])
{
   //PIPS generated variable
   double b, a;
   //PIPS generated variable
   int N;
   //PIPS generated variable
   double D[100], C[100], B[100], A[100];
   //PIPS generated variable
   unsigned int i;
#pragma omp parallel default(shared) 
   {
#pragma omp single
      {
         N = 100;
      }
#pragma omp single
      {
#pragma omp task
         {
            for(i = 0; i <= N-1; i += 1) {
#pragma omp task
               {
                  B[i] = 3;
               }
#pragma omp task
               {
                  A[i] = 5;
               }
#pragma omp taskwait 

            }
         }
#pragma omp task
         {
            for(i = 0; i <= N-1; i += 1)
               C[i] = 5;
         }
      }
#pragma omp single
      {
         for(i = 0; i <= N-1; i += 1)
            D[i] = A[i]+B[i]+C[i];
      }
   }
}
