
PROPER  EFFECTS 

int main()
{
   int i, k, j, cpi, cpj;
   // indexes used in loops
   float l[128*128];
   
   // Number of blocks
//             <    is written>: n
   int n = 128/16;
//             <    is read   >: n
//             <    is written>: k

   for(k = 0; k <= n-1; k += 1) {
      
      /* Temporary block */
      float tmp[16*16];
      float _tmp1[16*16];
//             <    is read   >: n
//             <    is written>: cpi

      for(cpi = 0; cpi <= 255; cpi += 1)
//             <    is read   >: cpi n
//             <    is written>: tmp[cpi]
         tmp[cpi] = cpi;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: cpi n stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      printf("1 cpi=%d\n", cpi);
//             <    is read   >: n
//             <    is written>: cpi

      for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: n
//             <    is written>: cpj
         for(cpj = 0; cpj <= 15; cpj += 1)
//             <    is read   >: cpi cpj k n tmp[cpi*16+cpj]
//             <    is written>: l[(k*16+cpi)*128+k*16+cpj]
            l[(k*16+cpi)*128+k*16+cpj] = tmp[cpi*16+cpj];
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: cpi n stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      printf("2 cpi=%d\n", cpi);
//             <    is read   >: n
//             <    is written>: cpi

      for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: cpi n
//             <    is written>: cpj
         for(cpj = cpi+1; cpj <= 15; cpj += 1) {
//             <    is read   >: cpi cpj
//             <    is written>: 0`1`2`3`idx1
            unsigned int idx1 = cpi*16+cpj;
//             <    is read   >: cpi cpj
//             <    is written>: 0`1`2`3`idx2
            unsigned int idx2 = cpj*16+cpi;
//             <    is read   >: cpi 0`1`2`3`idx1 0`1`2`3`idx2 n 
//                               tmp[idx1]
//             <    is written>: _tmp1[idx2]
            _tmp1[idx2] = tmp[idx1];
         }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: cpi n stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      printf("3 cpi=%d\n", cpi);
//             <    is read   >: n
//             <    is written>: cpi

      for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: cpi n
//             <    is written>: cpj
         for(cpj = cpi+1; cpj <= 15; cpj += 1) {
//             <    is read   >: cpi cpj
//             <    is written>: 0`1`4`5`idx1
            unsigned int idx1 = cpi*16+cpj;
//             <    is read   >: cpi cpj
//             <    is written>: 0`1`4`5`idx2
            unsigned int idx2 = cpj*16+cpi;
//             <    is read   >: cpi 0`1`4`5`idx1 0`1`4`5`idx2 n 
//                               tmp[idx2]
//             <    is written>: tmp[idx1]
            tmp[idx1] = tmp[idx2];
//             <    is read   >: _tmp1[idx2] cpi 0`1`4`5`idx2 n
//             <    is written>: tmp[idx2]
            tmp[idx2] = _tmp1[idx2];
         }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: cpi n stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      printf("4 cpi=%d\n", cpi);
//             <    is read   >: k n
//             <    is written>: i

      for(i = k+1; i <= n-1; i += 1) {
         float lik[16*16];
//             <    is read   >: k n
//             <    is written>: cpi

         for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: k n
//             <    is written>: cpj
            for(cpj = 0; cpj <= 15; cpj += 1)
//             <    is read   >: cpi cpj k n tmp[cpi*16+cpj]
//             <    is written>: lik[cpi*16+cpj]
               lik[cpi*16+cpj] = tmp[cpi*16+cpj]+k;
//             <    is read   >: k n
//             <    is written>: cpi

         for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: k n
//             <    is written>: cpj
            for(cpj = 0; cpj <= 15; cpj += 1)
//             <    is read   >: cpi cpj i k lik[cpi*16+cpj] n
//             <    is written>: l[(i*16+cpi)*128+k*16+cpj]
               l[(i*16+cpi)*128+k*16+cpj] = lik[cpi*16+cpj];
      }
   }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   // End of k loop
   
   
   // Prints the result matrix l[0] in a file
   printf("Block algorithm : L result matrix \n");
//             <    is written>: i

   for(i = 0; i <= 16383; i += 1)
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: i l[i] stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
      printf("% 6.3f ", l[i]);
   return 0;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int i, k, j, cpi, cpj;
   // indexes used in loops

// Points To: none

   float l[128*128];
   
   // Number of blocks

// Points To: none

   int n = 128/16;

// Points To: none


   for(k = 0; k <= n-1; k += 1) {
      
      /* Temporary block */

// Points To: none

      float tmp[16*16];

// Points To: none

      float _tmp1[16*16];

// Points To: none


      for(cpi = 0; cpi <= 255; cpi += 1)

// Points To: none

         tmp[cpi] = cpi;

// Points To: none


      printf("1 cpi=%d\n", cpi);

// Points To: none


      for(cpi = 0; cpi <= 15; cpi += 1)

// Points To: none

         for(cpj = 0; cpj <= 15; cpj += 1)

// Points To: none

            l[(k*16+cpi)*128+k*16+cpj] = tmp[cpi*16+cpj];

// Points To: none


      printf("2 cpi=%d\n", cpi);

// Points To: none


      for(cpi = 0; cpi <= 15; cpi += 1)

// Points To: none

         for(cpj = cpi+1; cpj <= 15; cpj += 1) {

// Points To: none

            unsigned int idx1 = cpi*16+cpj;

// Points To: none

            unsigned int idx2 = cpj*16+cpi;

// Points To: none

            _tmp1[idx2] = tmp[idx1];
         }

// Points To: none


      printf("3 cpi=%d\n", cpi);

// Points To: none


      for(cpi = 0; cpi <= 15; cpi += 1)

// Points To: none

         for(cpj = cpi+1; cpj <= 15; cpj += 1) {

// Points To: none

            unsigned int idx1 = cpi*16+cpj;

// Points To: none

            unsigned int idx2 = cpj*16+cpi;

// Points To: none

            tmp[idx1] = tmp[idx2];

// Points To: none

            tmp[idx2] = _tmp1[idx2];
         }

// Points To: none


      printf("4 cpi=%d\n", cpi);

// Points To: none


      for(i = k+1; i <= n-1; i += 1) {

// Points To: none

         float lik[16*16];

// Points To: none


         for(cpi = 0; cpi <= 15; cpi += 1)

// Points To: none

            for(cpj = 0; cpj <= 15; cpj += 1)

// Points To: none

               lik[cpi*16+cpj] = tmp[cpi*16+cpj]+k;

// Points To: none


         for(cpi = 0; cpi <= 15; cpi += 1)

// Points To: none

            for(cpj = 0; cpj <= 15; cpj += 1)

// Points To: none

               l[(i*16+cpi)*128+k*16+cpj] = lik[cpi*16+cpj];
      }
   }

// Points To: none

   // End of k loop
   
   
   // Prints the result matrix l[0] in a file
   printf("Block algorithm : L result matrix \n");

// Points To: none


   for(i = 0; i <= 16383; i += 1)

// Points To: none

      printf("% 6.3f ", l[i]);

// Points To: none

   return 0;
}

PROPER  EFFECTS WITH POINTS TO

int main()
{
   int i, k, j, cpi, cpj;
   // indexes used in loops
   float l[128*128];
   
   // Number of blocks
//             <    is written>: n
   int n = 128/16;
//             <    is read   >: n
//             <    is written>: k

   for(k = 0; k <= n-1; k += 1) {
      
      /* Temporary block */
      float tmp[16*16];
      float _tmp1[16*16];
//             <    is read   >: n
//             <    is written>: cpi

      for(cpi = 0; cpi <= 255; cpi += 1)
//             <    is read   >: cpi n
//             <    is written>: tmp[cpi]
         tmp[cpi] = cpi;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: cpi n stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      printf("1 cpi=%d\n", cpi);
//             <    is read   >: n
//             <    is written>: cpi

      for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: n
//             <    is written>: cpj
         for(cpj = 0; cpj <= 15; cpj += 1)
//             <    is read   >: cpi cpj k n tmp[cpi*16+cpj]
//             <    is written>: l[(k*16+cpi)*128+k*16+cpj]
            l[(k*16+cpi)*128+k*16+cpj] = tmp[cpi*16+cpj];
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: cpi n stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      printf("2 cpi=%d\n", cpi);
//             <    is read   >: n
//             <    is written>: cpi

      for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: cpi n
//             <    is written>: cpj
         for(cpj = cpi+1; cpj <= 15; cpj += 1) {
//             <    is read   >: cpi cpj
//             <    is written>: 0`1`2`3`idx1
            unsigned int idx1 = cpi*16+cpj;
//             <    is read   >: cpi cpj
//             <    is written>: 0`1`2`3`idx2
            unsigned int idx2 = cpj*16+cpi;
//             <    is read   >: cpi 0`1`2`3`idx1 0`1`2`3`idx2 n 
//                               tmp[idx1]
//             <    is written>: _tmp1[idx2]
            _tmp1[idx2] = tmp[idx1];
         }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: cpi n stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      printf("3 cpi=%d\n", cpi);
//             <    is read   >: n
//             <    is written>: cpi

      for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: cpi n
//             <    is written>: cpj
         for(cpj = cpi+1; cpj <= 15; cpj += 1) {
//             <    is read   >: cpi cpj
//             <    is written>: 0`1`4`5`idx1
            unsigned int idx1 = cpi*16+cpj;
//             <    is read   >: cpi cpj
//             <    is written>: 0`1`4`5`idx2
            unsigned int idx2 = cpj*16+cpi;
//             <    is read   >: cpi 0`1`4`5`idx1 0`1`4`5`idx2 n 
//                               tmp[idx2]
//             <    is written>: tmp[idx1]
            tmp[idx1] = tmp[idx2];
//             <    is read   >: _tmp1[idx2] cpi 0`1`4`5`idx2 n
//             <    is written>: tmp[idx2]
            tmp[idx2] = _tmp1[idx2];
         }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: cpi n stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

      printf("4 cpi=%d\n", cpi);
//             <    is read   >: k n
//             <    is written>: i

      for(i = k+1; i <= n-1; i += 1) {
         float lik[16*16];
//             <    is read   >: k n
//             <    is written>: cpi

         for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: k n
//             <    is written>: cpj
            for(cpj = 0; cpj <= 15; cpj += 1)
//             <    is read   >: cpi cpj k n tmp[cpi*16+cpj]
//             <    is written>: lik[cpi*16+cpj]
               lik[cpi*16+cpj] = tmp[cpi*16+cpj]+k;
//             <    is read   >: k n
//             <    is written>: cpi

         for(cpi = 0; cpi <= 15; cpi += 1)
//             <    is read   >: k n
//             <    is written>: cpj
            for(cpj = 0; cpj <= 15; cpj += 1)
//             <    is read   >: cpi cpj i k lik[cpi*16+cpj] n
//             <    is written>: l[(i*16+cpi)*128+k*16+cpj]
               l[(i*16+cpi)*128+k*16+cpj] = lik[cpi*16+cpj];
      }
   }
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   // End of k loop
   
   
   // Prints the result matrix l[0] in a file
   printf("Block algorithm : L result matrix \n");
//             <    is written>: i

   for(i = 0; i <= 16383; i += 1)
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: i l[i] stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
      printf("% 6.3f ", l[i]);
   return 0;
}

 *********************** Use-Def Chains *********************

	14 --> 16 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 22 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 23 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 25 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 27 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 28 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 30 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 32 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 34 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 35 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 38 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 43 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 45 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 46 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 49 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 50 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 54 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 56 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 59 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 60 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 61 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 63 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 64 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	14 --> 66 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	22 --> 25 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	22 --> 27 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	22 --> 32 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	22 --> 34 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	22 --> 43 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	22 --> 45 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	22 --> 54 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	22 --> 59 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	22 --> 63 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	23 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	23 --> 23 with conflicts
		from <tmp[cpi]-W-EXACT> to <tmp[cpi]-W-EXACT>
	23 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	23 --> 30 with conflicts
		from <tmp[cpi]-W-EXACT> to <tmp[cpi*16+cpj]-R-EXACT>
	23 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	23 --> 38 with conflicts
		from <tmp[cpi]-W-EXACT> to <tmp[idx1]-R-EXACT>
	23 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	23 --> 49 with conflicts
		from <tmp[cpi]-W-EXACT> to <tmp[idx1]-W-EXACT>
		from <tmp[cpi]-W-EXACT> to <tmp[idx2]-R-EXACT>
	23 --> 50 with conflicts
		from <tmp[cpi]-W-EXACT> to <tmp[idx2]-W-EXACT>
	23 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	23 --> 61 with conflicts
		from <tmp[cpi]-W-EXACT> to <tmp[cpi*16+cpj]-R-EXACT>
	23 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	25 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	25 --> 25 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	25 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	25 --> 32 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	25 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	25 --> 43 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	25 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	25 --> 54 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	25 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	25 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	25 --> 73 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	25 --> 76 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	27 --> 32 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	27 --> 34 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	27 --> 43 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	27 --> 45 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	27 --> 54 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	27 --> 59 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	27 --> 63 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	28 --> 28 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	28 --> 35 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	28 --> 46 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	28 --> 60 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	28 --> 64 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	30 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	30 --> 23 with conflicts
		from <tmp[cpi*16+cpj]-R-EXACT> to <tmp[cpi]-W-EXACT>
	30 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	30 --> 28 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	30 --> 30 with conflicts
		from <l[(k*16+cpi)*128+k*16+cpj]-W-EXACT> to <l[(k*16+cpi)*128+k*16+cpj]-W-EXACT>
	30 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	30 --> 35 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	30 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	30 --> 46 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	30 --> 49 with conflicts
		from <tmp[cpi*16+cpj]-R-EXACT> to <tmp[idx1]-W-EXACT>
	30 --> 50 with conflicts
		from <tmp[cpi*16+cpj]-R-EXACT> to <tmp[idx2]-W-EXACT>
	30 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	30 --> 60 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	30 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	30 --> 64 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	30 --> 66 with conflicts
		from <l[(k*16+cpi)*128+k*16+cpj]-W-EXACT> to <l[(i*16+cpi)*128+k*16+cpj]-W-EXACT>
	30 --> 76 with conflicts
		from <l[(k*16+cpi)*128+k*16+cpj]-W-EXACT> to <l[i]-R-EXACT>
	32 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	32 --> 25 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	32 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	32 --> 32 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	32 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	32 --> 43 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	32 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	32 --> 54 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	32 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	32 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	32 --> 73 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	32 --> 76 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	34 --> 43 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	34 --> 45 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	34 --> 54 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	34 --> 59 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	34 --> 63 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	35 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	35 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	35 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	35 --> 35 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	35 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	35 --> 46 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	35 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	35 --> 60 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	35 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	35 --> 64 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	36 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	36 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	36 --> 28 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	36 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	36 --> 35 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	36 --> 36 with conflicts
		from <0`1`2`3`idx1-W-EXACT> to <0`1`2`3`idx1-W-EXACT>
	36 --> 38 with conflicts
		from <0`1`2`3`idx1-W-EXACT> to <0`1`2`3`idx1-R-EXACT>
	36 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	36 --> 46 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	36 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	36 --> 60 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	36 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	36 --> 64 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	37 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	37 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	37 --> 28 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	37 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	37 --> 35 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	37 --> 37 with conflicts
		from <0`1`2`3`idx2-W-EXACT> to <0`1`2`3`idx2-W-EXACT>
	37 --> 38 with conflicts
		from <0`1`2`3`idx2-W-EXACT> to <0`1`2`3`idx2-R-EXACT>
	37 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	37 --> 46 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	37 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	37 --> 60 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	37 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	37 --> 64 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	38 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	38 --> 23 with conflicts
		from <tmp[idx1]-R-EXACT> to <tmp[cpi]-W-EXACT>
	38 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	38 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	38 --> 36 with conflicts
		from <0`1`2`3`idx1-R-EXACT> to <0`1`2`3`idx1-W-EXACT>
	38 --> 37 with conflicts
		from <0`1`2`3`idx2-R-EXACT> to <0`1`2`3`idx2-W-EXACT>
	38 --> 38 with conflicts
		from <_tmp1[idx2]-W-EXACT> to <_tmp1[idx2]-W-EXACT>
	38 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	38 --> 49 with conflicts
		from <tmp[idx1]-R-EXACT> to <tmp[idx1]-W-EXACT>
	38 --> 50 with conflicts
		from <_tmp1[idx2]-W-EXACT> to <_tmp1[idx2]-R-EXACT>
		from <tmp[idx1]-R-EXACT> to <tmp[idx2]-W-EXACT>
	38 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	38 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	43 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	43 --> 25 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	43 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	43 --> 32 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	43 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	43 --> 43 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	43 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	43 --> 54 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	43 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	43 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	43 --> 73 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	43 --> 76 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	45 --> 54 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	45 --> 59 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	45 --> 63 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	46 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	46 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	46 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	46 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	46 --> 46 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	46 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	46 --> 60 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	46 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	46 --> 64 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	47 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	47 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	47 --> 28 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	47 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	47 --> 35 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	47 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	47 --> 46 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	47 --> 47 with conflicts
		from <0`1`4`5`idx1-W-EXACT> to <0`1`4`5`idx1-W-EXACT>
	47 --> 49 with conflicts
		from <0`1`4`5`idx1-W-EXACT> to <0`1`4`5`idx1-R-EXACT>
	47 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	47 --> 60 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	47 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	47 --> 64 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	48 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	48 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	48 --> 28 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	48 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	48 --> 35 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	48 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	48 --> 46 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	48 --> 48 with conflicts
		from <0`1`4`5`idx2-W-EXACT> to <0`1`4`5`idx2-W-EXACT>
	48 --> 49 with conflicts
		from <0`1`4`5`idx2-W-EXACT> to <0`1`4`5`idx2-R-EXACT>
	48 --> 50 with conflicts
		from <0`1`4`5`idx2-W-EXACT> to <0`1`4`5`idx2-R-EXACT>
	48 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	48 --> 60 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	48 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	48 --> 64 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	49 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	49 --> 23 with conflicts
		from <tmp[idx1]-W-EXACT> to <tmp[cpi]-W-EXACT>
		from <tmp[idx2]-R-EXACT> to <tmp[cpi]-W-EXACT>
	49 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	49 --> 30 with conflicts
		from <tmp[idx1]-W-EXACT> to <tmp[cpi*16+cpj]-R-EXACT>
	49 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	49 --> 38 with conflicts
		from <tmp[idx1]-W-EXACT> to <tmp[idx1]-R-EXACT>
	49 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	49 --> 47 with conflicts
		from <0`1`4`5`idx1-R-EXACT> to <0`1`4`5`idx1-W-EXACT>
	49 --> 48 with conflicts
		from <0`1`4`5`idx2-R-EXACT> to <0`1`4`5`idx2-W-EXACT>
	49 --> 49 with conflicts
		from <tmp[idx1]-W-EXACT> to <tmp[idx1]-W-EXACT>
		from <tmp[idx1]-W-EXACT> to <tmp[idx2]-R-EXACT>
		from <tmp[idx2]-R-EXACT> to <tmp[idx1]-W-EXACT>
	49 --> 50 with conflicts
		from <tmp[idx1]-W-EXACT> to <tmp[idx2]-W-EXACT>
		from <tmp[idx2]-R-EXACT> to <tmp[idx2]-W-EXACT>
	49 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	49 --> 61 with conflicts
		from <tmp[idx1]-W-EXACT> to <tmp[cpi*16+cpj]-R-EXACT>
	49 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	50 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	50 --> 23 with conflicts
		from <tmp[idx2]-W-EXACT> to <tmp[cpi]-W-EXACT>
	50 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	50 --> 30 with conflicts
		from <tmp[idx2]-W-EXACT> to <tmp[cpi*16+cpj]-R-EXACT>
	50 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	50 --> 38 with conflicts
		from <tmp[idx2]-W-EXACT> to <tmp[idx1]-R-EXACT>
		from <_tmp1[idx2]-R-EXACT> to <_tmp1[idx2]-W-EXACT>
	50 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	50 --> 48 with conflicts
		from <0`1`4`5`idx2-R-EXACT> to <0`1`4`5`idx2-W-EXACT>
	50 --> 49 with conflicts
		from <tmp[idx2]-W-EXACT> to <tmp[idx1]-W-EXACT>
		from <tmp[idx2]-W-EXACT> to <tmp[idx2]-R-EXACT>
	50 --> 50 with conflicts
		from <tmp[idx2]-W-EXACT> to <tmp[idx2]-W-EXACT>
	50 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	50 --> 61 with conflicts
		from <tmp[idx2]-W-EXACT> to <tmp[cpi*16+cpj]-R-EXACT>
	50 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	54 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	54 --> 25 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	54 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	54 --> 32 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	54 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	54 --> 43 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	54 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	54 --> 54 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	54 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	54 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	54 --> 73 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	54 --> 76 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	56 --> 56 with conflicts
		from <i-W-EXACT> to <i-W-EXACT>
	56 --> 75 with conflicts
		from <i-W-EXACT> to <i-W-EXACT>
	59 --> 63 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	60 --> 60 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	60 --> 64 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	61 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	61 --> 23 with conflicts
		from <tmp[cpi*16+cpj]-R-EXACT> to <tmp[cpi]-W-EXACT>
	61 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	61 --> 28 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	61 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	61 --> 35 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	61 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	61 --> 46 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	61 --> 49 with conflicts
		from <tmp[cpi*16+cpj]-R-EXACT> to <tmp[idx1]-W-EXACT>
	61 --> 50 with conflicts
		from <tmp[cpi*16+cpj]-R-EXACT> to <tmp[idx2]-W-EXACT>
	61 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	61 --> 60 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	61 --> 61 with conflicts
		from <lik[cpi*16+cpj]-W-EXACT> to <lik[cpi*16+cpj]-W-EXACT>
	61 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	61 --> 64 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	61 --> 66 with conflicts
		from <lik[cpi*16+cpj]-W-EXACT> to <lik[cpi*16+cpj]-R-EXACT>
	63 --> 22 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	63 --> 25 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	63 --> 27 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	63 --> 32 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	63 --> 34 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	63 --> 43 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	63 --> 45 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	63 --> 54 with conflicts
		from <cpi-W-EXACT> to <cpi-R-EXACT>
	63 --> 59 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	63 --> 63 with conflicts
		from <cpi-W-EXACT> to <cpi-W-EXACT>
	64 --> 28 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	64 --> 35 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	64 --> 46 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	64 --> 60 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	64 --> 64 with conflicts
		from <cpj-W-EXACT> to <cpj-W-EXACT>
	66 --> 22 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	66 --> 27 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	66 --> 28 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	66 --> 30 with conflicts
		from <l[(i*16+cpi)*128+k*16+cpj]-W-EXACT> to <l[(k*16+cpi)*128+k*16+cpj]-W-EXACT>
	66 --> 34 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	66 --> 35 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	66 --> 45 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	66 --> 46 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	66 --> 56 with conflicts
		from <i-R-EXACT> to <i-W-EXACT>
	66 --> 59 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	66 --> 60 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	66 --> 61 with conflicts
		from <lik[cpi*16+cpj]-R-EXACT> to <lik[cpi*16+cpj]-W-EXACT>
	66 --> 63 with conflicts
		from <cpi-R-EXACT> to <cpi-W-EXACT>
	66 --> 64 with conflicts
		from <cpj-R-EXACT> to <cpj-W-EXACT>
	66 --> 66 with conflicts
		from <l[(i*16+cpi)*128+k*16+cpj]-W-EXACT> to <l[(i*16+cpi)*128+k*16+cpj]-W-EXACT>
	66 --> 75 with conflicts
		from <i-R-EXACT> to <i-W-EXACT>
	66 --> 76 with conflicts
		from <l[(i*16+cpi)*128+k*16+cpj]-W-EXACT> to <l[i]-R-EXACT>
	73 --> 76 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
	76 --> 76 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>

****************** End of Dependence Graph ******************
