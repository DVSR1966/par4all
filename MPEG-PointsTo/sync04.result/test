
PROPER  EFFECTS 

_Bool alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2;
}
int main(void)
{
//             <    is written>: d s t
   int t = 0, d = 0, s = 0;
   while (1) {
//             <    is read   >: s _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
      while (alea()&&s<=3)
//             <    is read   >: d s
//             <    is written>: d s
         s++, d++;
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
      while (alea())
//             <    is read   >: t
//             <    is written>: s t
         t++, s = 0;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: d s stdout t __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
      
      // The expected invariant is given as a 3-D figure in d, s and t
      // s<=4, s<=d, ???
      // found by PIPS: {s<=d, d<=s+4t, 0<=s, s<=4}
      fprintf(stdout, "t=%d d=%d s=%d\n", t, d, s);
   }
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

_Bool alea(void)
{

// Points To: none

   return rand()%2;
}

// Points To IN: none


// Points To OUT: none

int main(void)
{

// Points To: none

   int t = 0, d = 0, s = 0;

// Points To: none

   while (1) {

// Points To: none

      while (alea()&&s<=3)

// Points To: none

         s++, d++;

// Points To: none

      while (alea())

// Points To: none

         t++, s = 0;

// Points To: none

      
      // The expected invariant is given as a 3-D figure in d, s and t
      // s<=4, s<=d, ???
      // found by PIPS: {s<=d, d<=s+4t, 0<=s, s<=4}
      fprintf(stdout, "t=%d d=%d s=%d\n", t, d, s);
   }
}

PROPER  EFFECTS WITH POINTS TO

_Bool alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2;
}
int main(void)
{
//             <    is written>: d s t
   int t = 0, d = 0, s = 0;
   while (1) {
//             <    is read   >: s _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
      while (alea()&&s<=3)
//             <    is read   >: d s
//             <    is written>: d s
         s++, d++;
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
      while (alea())
//             <    is read   >: t
//             <    is written>: s t
         t++, s = 0;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: d s stdout t __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
      
      // The expected invariant is given as a 3-D figure in d, s and t
      // s<=4, s<=d, ???
      // found by PIPS: {s<=d, d<=s+4t, 0<=s, s<=4}
      fprintf(stdout, "t=%d d=%d s=%d\n", t, d, s);
   }
}

 *********************** Use-Def Chains *********************

	-1 --> -1 with conflicts
		from <t-W-EXACT> to <t-W-EXACT>
		from <s-W-EXACT> to <s-W-EXACT>
		from <t-W-EXACT> to <t-R-EXACT>
		from <t-R-EXACT> to <t-W-EXACT>
	-1 --> -1 with conflicts
		from <s-W-EXACT> to <s-W-EXACT>
		from <s-W-EXACT> to <s-R-EXACT>
	-1 --> 21 with conflicts
		from <s-W-EXACT> to <s-R-EXACT>
	-1 --> 27 with conflicts
		from <t-W-EXACT> to <t-R-EXACT>
		from <s-W-EXACT> to <s-R-EXACT>
	-1 --> -1 with conflicts
		from <s-W-EXACT> to <s-W-EXACT>
		from <s-R-EXACT> to <s-W-EXACT>
	-1 --> -1 with conflicts
		from <s-W-EXACT> to <s-W-EXACT>
		from <d-W-EXACT> to <d-W-EXACT>
		from <s-W-EXACT> to <s-R-EXACT>
		from <d-W-EXACT> to <d-R-EXACT>
		from <s-R-EXACT> to <s-W-EXACT>
		from <d-R-EXACT> to <d-W-EXACT>
	-1 --> 27 with conflicts
		from <s-W-EXACT> to <s-R-EXACT>
		from <d-W-EXACT> to <d-R-EXACT>
	18 --> -1 with conflicts
		from <t-W-EXACT> to <t-W-EXACT>
		from <s-W-EXACT> to <s-W-EXACT>
		from <t-W-EXACT> to <t-R-EXACT>
	18 --> -1 with conflicts
		from <s-W-EXACT> to <s-W-EXACT>
		from <d-W-EXACT> to <d-W-EXACT>
		from <s-W-EXACT> to <s-R-EXACT>
		from <d-W-EXACT> to <d-R-EXACT>
	18 --> 21 with conflicts
		from <s-W-EXACT> to <s-R-EXACT>
	18 --> 27 with conflicts
		from <t-W-EXACT> to <t-R-EXACT>
		from <s-W-EXACT> to <s-R-EXACT>
		from <d-W-EXACT> to <d-R-EXACT>
	21 --> -1 with conflicts
		from <s-R-EXACT> to <s-W-EXACT>
	21 --> -1 with conflicts
		from <s-R-EXACT> to <s-W-EXACT>
	21 --> 21 with conflicts
		from <_RANDOM_EFFECTS:GEN_SEED-R-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
	21 --> 22 with conflicts
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-R-EXACT>
		from <_RANDOM_EFFECTS:GEN_SEED-R-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
	22 --> 21 with conflicts
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-R-EXACT>
		from <_RANDOM_EFFECTS:GEN_SEED-R-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
	22 --> 22 with conflicts
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
		from <_RANDOM_EFFECTS:GEN_SEED-W-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-R-EXACT>
		from <_RANDOM_EFFECTS:GEN_SEED-R-EXACT> to <_RANDOM_EFFECTS:GEN_SEED-W-EXACT>
	27 --> -1 with conflicts
		from <t-R-EXACT> to <t-W-EXACT>
		from <s-R-EXACT> to <s-W-EXACT>
	27 --> -1 with conflicts
		from <s-R-EXACT> to <s-W-EXACT>
		from <d-R-EXACT> to <d-W-EXACT>
	27 --> 27 with conflicts
		from <stdout[0]-W-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>
		from <stdout[0]-W-MAY> to <stdout[0]-R-MAY>
		from <__IO_EFFECTS:LUNS[1]-W-EXACT> to <__IO_EFFECTS:LUNS[1]-R-EXACT>
		from <stdout[0]-R-MAY> to <stdout[0]-W-MAY>
		from <__IO_EFFECTS:LUNS[1]-R-EXACT> to <__IO_EFFECTS:LUNS[1]-W-EXACT>

****************** End of Dependence Graph ******************
