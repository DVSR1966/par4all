
PROPER  EFFECTS 

int alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2;
}
int main()
{
   int x, y, n;
//             <may be read   >: stdin[0]
//             <may be written>: n stdin[0]
//             <    is read   >: stdin __IO_EFFECTS:LUNS[0]
//             <    is written>: __IO_EFFECTS:LUNS[0]
   scanf("%d", &n);
//             <    is read   >: n
   if (n<2)
      exit(1);
//             <    is read   >: n x y _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   skimo02(x, y, n);
}
void skimo02(int x, int y, int n)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   while (alea()) {
//             <    is read   >: x
//             <    is written>: x
      x++;
//             <    is read   >: n y
//             <    is written>: y
      y += 1-n;
   }
   return;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int alea(void)
{

// Points To: none

   return rand()%2;
}

// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int x, y, n;

// Points To: none

   scanf("%d", &n);

// Points To: none

   if (n<2)

// Points To: none

      exit(1);

// Points To: none

   skimo02(x, y, n);
}

// Points To IN: none


// Points To OUT: none

void skimo02(int x, int y, int n)
{

// Points To: none

   while (alea()) {

// Points To: none

      x++;

// Points To: none

      y += 1-n;
   }

// Points To: none

   return;
}

PROPER  EFFECTS WITH POINTS TO

int alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2;
}
int main()
{
   int x, y, n;
//             <may be read   >: stdin[0]
//             <may be written>: n stdin[0]
//             <    is read   >: stdin __IO_EFFECTS:LUNS[0]
//             <    is written>: __IO_EFFECTS:LUNS[0]
   scanf("%d", &n);
//             <    is read   >: n
   if (n<2)
      exit(1);
//             <    is read   >: n x y _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   skimo02(x, y, n);
}
void skimo02(int x, int y, int n)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   while (alea()) {
//             <    is read   >: x
//             <    is written>: x
      x++;
//             <    is read   >: n y
//             <    is written>: y
      y += 1-n;
   }
   return;
}

 *********************** Use-Def Chains *********************

	30 --> 31 with conflicts
		from <n-W-MAY> to <n-R-EXACT>
	30 --> 32 with conflicts
		from <n-W-MAY> to <n-R-EXACT>

****************** End of Dependence Graph ******************
