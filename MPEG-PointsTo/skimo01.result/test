
PROPER  EFFECTS 

int alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2;
}
int skimo01(int x, int y, int n)
{
//             <    is written>: z
   int z = 0;
//             <    is read   >: n
   if (n<2)
      exit(1);
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED

   while (alea()) {
//             <    is read   >: x
//             <    is written>: x
      x++;
//             <    is read   >: n y
//             <    is written>: y
      y += 1-n;
   }
//             <    is read   >: x y z
//             <    is written>: z
   z += x+y;
//             <    is read   >: z
   return z;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int alea(void)
{

// Points To: none

   return rand()%2;
}

// Points To IN: none


// Points To OUT: none

int skimo01(int x, int y, int n)
{

// Points To: none

   int z = 0;

// Points To: none

   if (n<2)

// Points To: none

      exit(1);

// Points To: none


   while (alea()) {

// Points To: none

      x++;

// Points To: none

      y += 1-n;
   }

// Points To: none

   z += x+y;

// Points To: none

   return z;
}

PROPER  EFFECTS WITH POINTS TO

int alea(void)
{
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED
   return rand()%2;
}
int skimo01(int x, int y, int n)
{
//             <    is written>: z
   int z = 0;
//             <    is read   >: n
   if (n<2)
      exit(1);
//             <    is read   >: _RANDOM_EFFECTS:GEN_SEED
//             <    is written>: _RANDOM_EFFECTS:GEN_SEED

   while (alea()) {
//             <    is read   >: x
//             <    is written>: x
      x++;
//             <    is read   >: n y
//             <    is written>: y
      y += 1-n;
   }
//             <    is read   >: x y z
//             <    is written>: z
   z += x+y;
//             <    is read   >: z
   return z;
}

 *********************** Use-Def Chains *********************

	12 --> 19 with conflicts
		from <z-W-EXACT> to <z-W-EXACT>
		from <z-W-EXACT> to <z-R-EXACT>
	16 --> 16 with conflicts
		from <x-W-EXACT> to <x-W-EXACT>
		from <x-W-EXACT> to <x-R-EXACT>
		from <x-R-EXACT> to <x-W-EXACT>
	16 --> 19 with conflicts
		from <x-W-EXACT> to <x-R-EXACT>
	17 --> 17 with conflicts
		from <y-W-EXACT> to <y-W-EXACT>
		from <y-W-EXACT> to <y-R-EXACT>
		from <y-R-EXACT> to <y-W-EXACT>
	17 --> 19 with conflicts
		from <y-W-EXACT> to <y-R-EXACT>
	19 --> 20 with conflicts
		from <z-W-EXACT> to <z-R-EXACT>

****************** End of Dependence Graph ******************
