
PROPER  EFFECTS 

int main(int argc, char **argv)
{
   long long int size[test_intr(argv)];
//             <    is read   >: size[0]
   return (int) size[0];
}
long long int test_intr(char **argv)
{
//             <    is written>: result
   long long int result = 0;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <    is written>: result
   result = atoll(argv[1]);
//             <    is read   >: result
   return result;
}

POINTS-TO


// Points To IN:
// _argv_2[0] -> __argv_2_2[0] , EXACT
// argv -> _argv_2[0] , EXACT


// Points To OUT:
// _argv_2[0] -> __argv_2_2[0] , EXACT
// argv -> _argv_2[0] , EXACT

int main(int argc, char **argv)
{

// Points To:
// _argv_2[0] -> __argv_2_2[0] , EXACT
// argv -> _argv_2[0] , EXACT

   long long int size[test_intr(argv)];

// Points To:
// _argv_2[0] -> __argv_2_2[0] , EXACT
// argv -> _argv_2[0] , EXACT

   return (int) size[0];
}

// Points To IN:
// _argv_1[0] -> __argv_1_1[0] , EXACT
// argv -> _argv_1[0] , EXACT


// Points To OUT:
// _argv_1[0] -> __argv_1_1[0] , EXACT
// argv -> _argv_1[0] , EXACT

long long int test_intr(char **argv)
{

// Points To:
// _argv_1[0] -> __argv_1_1[0] , EXACT
// argv -> _argv_1[0] , EXACT

   long long int result = 0;

// Points To:
// _argv_1[0] -> __argv_1_1[0] , EXACT
// argv -> _argv_1[0] , EXACT

   result = atoll(argv[1]);

// Points To:
// _argv_1[0] -> __argv_1_1[0] , EXACT
// argv -> _argv_1[0] , EXACT

   return result;
}

PROPER  EFFECTS WITH POINTS TO

int main(int argc, char **argv)
{
   long long int size[test_intr(argv)];
//             <    is read   >: size[0]
   return (int) size[0];
}
long long int test_intr(char **argv)
{
//             <    is written>: result
   long long int result = 0;
//             <may be read   >: *ANY_MODULE*:*ANYWHERE*
//             <    is written>: result
   result = atoll(argv[1]);
//             <    is read   >: result
   return result;
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
