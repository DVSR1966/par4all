
PROPER  EFFECTS 

int main(void)
{
   run_int();
   run_enum1();
   run_enum2();
   run_enum3();
   run_enum4();
   return 0;
}
void run_enum1(void)
{
   enum mybool b;
//             <    is written>: b
   b = 0;
//             <    is read   >: b
   if (b==1)
      "unreachable";
}
void run_enum2(void)
{
   enum mybool b;
//             <    is written>: b
   b = mybool_false;
//             <    is read   >: b
   if (b==mybool_true)
      "unreachable";
}
void run_enum3(void)
{
   mybool b;
//             <    is written>: b
   b = 0;
//             <    is read   >: b
   if (b==1)
      "unreachable";
}
void run_enum4(void)
{
   mybool b;
//             <    is written>: b
   b = mybool_false;
//             <    is read   >: b
   if (b==mybool_true)
      "unreachable";
}
void run_int(void)
{
   int b;
//             <    is written>: b
   b = 0;
//             <    is read   >: b
   if (b==1)
      "unreachable";
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int main(void)
{

// Points To: none

   run_int();

// Points To: none

   run_enum1();

// Points To: none

   run_enum2();

// Points To: none

   run_enum3();

// Points To: none

   run_enum4();

// Points To: none

   return 0;
}

// Points To IN: none


// Points To OUT: none

void run_enum1(void)
{

// Points To: none

   enum mybool b;

// Points To: none

   b = 0;

// Points To: none

   if (b==1)

// Points To: none

      "unreachable";
}

// Points To IN: none


// Points To OUT: none

void run_enum2(void)
{

// Points To: none

   enum mybool b;

// Points To: none

   b = mybool_false;

// Points To: none

   if (b==mybool_true)

// Points To: none

      "unreachable";
}

// Points To IN: none


// Points To OUT: none

void run_enum3(void)
{

// Points To: none

   mybool b;

// Points To: none

   b = 0;

// Points To: none

   if (b==1)

// Points To: none

      "unreachable";
}

// Points To IN: none


// Points To OUT: none

void run_enum4(void)
{

// Points To: none

   mybool b;

// Points To: none

   b = mybool_false;

// Points To: none

   if (b==mybool_true)

// Points To: none

      "unreachable";
}

// Points To IN: none


// Points To OUT: none

void run_int(void)
{

// Points To: none

   int b;

// Points To: none

   b = 0;

// Points To: none

   if (b==1)

// Points To: none

      "unreachable";
}

PROPER  EFFECTS WITH POINTS TO

int main(void)
{
   run_int();
   run_enum1();
   run_enum2();
   run_enum3();
   run_enum4();
   return 0;
}
void run_enum1(void)
{
   enum mybool b;
//             <    is written>: b
   b = 0;
//             <    is read   >: b
   if (b==1)
      "unreachable";
}
void run_enum2(void)
{
   enum mybool b;
//             <    is written>: b
   b = mybool_false;
//             <    is read   >: b
   if (b==mybool_true)
      "unreachable";
}
void run_enum3(void)
{
   mybool b;
//             <    is written>: b
   b = 0;
//             <    is read   >: b
   if (b==1)
      "unreachable";
}
void run_enum4(void)
{
   mybool b;
//             <    is written>: b
   b = mybool_false;
//             <    is read   >: b
   if (b==mybool_true)
      "unreachable";
}
void run_int(void)
{
   int b;
//             <    is written>: b
   b = 0;
//             <    is read   >: b
   if (b==1)
      "unreachable";
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
