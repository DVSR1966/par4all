
PROPER  EFFECTS 

int block01(int j)
{
//             <    is written>: i
   int i = 2;
//             <    is read   >: i j
//             <    is written>: k
   int k = i*j;
//             <    is read   >: i j
//             <    is written>: l
   int l = multiply(i, j);
//             <    is read   >: j
//             <    is written>: m
   int m = twice(j);
//             <    is read   >: k
   return k;
}
int multiply(int i, int j)
{
//             <    is read   >: i j
   return i*j;
}
int twice(int j)
{
//             <    is written>: n
   int n = 2;
//             <    is read   >: j n
   return n*j;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int block01(int j)
{

// Points To: none

   int i = 2;

// Points To: none

   int k = i*j;

// Points To: none

   int l = multiply(i, j);

// Points To: none

   int m = twice(j);

// Points To: none

   return k;
}

// Points To IN: none


// Points To OUT: none

int multiply(int i, int j)
{

// Points To: none

   return i*j;
}

// Points To IN: none


// Points To OUT: none

int twice(int j)
{

// Points To: none

   int n = 2;

// Points To: none

   return n*j;
}

PROPER  EFFECTS WITH POINTS TO

int block01(int j)
{
//             <    is written>: i
   int i = 2;
//             <    is read   >: i j
//             <    is written>: k
   int k = i*j;
//             <    is read   >: i j
//             <    is written>: l
   int l = multiply(i, j);
//             <    is read   >: j
//             <    is written>: m
   int m = twice(j);
//             <    is read   >: k
   return k;
}
int multiply(int i, int j)
{
//             <    is read   >: i j
   return i*j;
}
int twice(int j)
{
//             <    is written>: n
   int n = 2;
//             <    is read   >: j n
   return n*j;
}

 *********************** Use-Def Chains *********************

	19 --> 20 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>

****************** End of Dependence Graph ******************
