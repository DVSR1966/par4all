
PROPER  EFFECTS 

int main()
{
//             <    is written>: i
   int i = 20;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: i stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   shift02(i, 2);
}
int shift02(int i, int k)
{
//             <    is read   >: i
//             <    is written>: j
   int j = i;
//             <    is read   >: k
   
   // Check a subset of particular cases
   if (k==0)
//             <    is read   >: j k
//             <    is written>: j
      j = j<<k;
   else if (j<0&&k>0)
//             <    is read   >: j k
//             <    is written>: j
      j = j<<k;
   else if (j>=0&&k<0)
//             <    is read   >: j k
//             <    is written>: j
      j = j<<k;
   else
//             <    is read   >: j k
//             <    is written>: j
      j = j<<k;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: j stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

   printf("j=%d\n", j);
//             <    is read   >: j
   return j;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int i = 20;

// Points To: none

   shift02(i, 2);
}

// Points To IN: none


// Points To OUT: none

int shift02(int i, int k)
{

// Points To: none

   int j = i;

// Points To: none

   
   // Check a subset of particular cases
   if (k==0)

// Points To: none

      j = j<<k;
   else if (j<0&&k>0)

// Points To: none

      j = j<<k;
   else if (j>=0&&k<0)

// Points To: none

      j = j<<k;
   else

// Points To: none

      j = j<<k;

// Points To: none


   printf("j=%d\n", j);

// Points To: none

   return j;
}

PROPER  EFFECTS WITH POINTS TO

int main()
{
//             <    is written>: i
   int i = 20;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: i stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   shift02(i, 2);
}
int shift02(int i, int k)
{
//             <    is read   >: i
//             <    is written>: j
   int j = i;
//             <    is read   >: k
   
   // Check a subset of particular cases
   if (k==0)
//             <    is read   >: j k
//             <    is written>: j
      j = j<<k;
   else if (j<0&&k>0)
//             <    is read   >: j k
//             <    is written>: j
      j = j<<k;
   else if (j>=0&&k<0)
//             <    is read   >: j k
//             <    is written>: j
      j = j<<k;
   else
//             <    is read   >: j k
//             <    is written>: j
      j = j<<k;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: j stdout __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]

   printf("j=%d\n", j);
//             <    is read   >: j
   return j;
}

 *********************** Use-Def Chains *********************

	25 --> 26 with conflicts
		from <i-W-EXACT> to <i-R-EXACT>

****************** End of Dependence Graph ******************
