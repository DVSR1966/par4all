
PROPER  EFFECTS 

int main()
{
   int i;
//             <    is written>: j
   int j = 2;
//             <    is read   >: i
//             <    is written>: k
   int k = i;
//             <    is read   >: j
//             <    is written>: j l
   int l = j++;
//             <    is written>: m
   int m = 4;
//             <    is read   >: m
//             <    is written>: n
   int n = m;
//             <    is written>: i

   i = 5;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: i j k l m n stdout 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("i = %d, j = %d, k = %d, l = %d, m = %d, n = %d \n", i, j, k, l, m, n);
   return 0;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

int main()
{

// Points To: none

   int i;

// Points To: none

   int j = 2;

// Points To: none

   int k = i;

// Points To: none

   int l = j++;

// Points To: none

   int m = 4;

// Points To: none

   int n = m;

// Points To: none


   i = 5;

// Points To: none

   printf("i = %d, j = %d, k = %d, l = %d, m = %d, n = %d \n", i, j, k, l, m, n);

// Points To: none

   return 0;
}

PROPER  EFFECTS WITH POINTS TO

int main()
{
   int i;
//             <    is written>: j
   int j = 2;
//             <    is read   >: i
//             <    is written>: k
   int k = i;
//             <    is read   >: j
//             <    is written>: j l
   int l = j++;
//             <    is written>: m
   int m = 4;
//             <    is read   >: m
//             <    is written>: n
   int n = m;
//             <    is written>: i

   i = 5;
//             <may be read   >: stdout[0]
//             <may be written>: stdout[0]
//             <    is read   >: i j k l m n stdout 
//                               __IO_EFFECTS:LUNS[1]
//             <    is written>: __IO_EFFECTS:LUNS[1]
   printf("i = %d, j = %d, k = %d, l = %d, m = %d, n = %d \n", i, j, k, l, m, n);
   return 0;
}

 *********************** Use-Def Chains *********************

	06 --> 08 with conflicts
		from <j-W-EXACT> to <j-W-EXACT>
		from <j-W-EXACT> to <j-R-EXACT>
	07 --> 12 with conflicts
		from <i-R-EXACT> to <i-W-EXACT>
	07 --> 13 with conflicts
		from <k-W-EXACT> to <k-R-EXACT>
	08 --> 13 with conflicts
		from <l-W-EXACT> to <l-R-EXACT>
		from <j-W-EXACT> to <j-R-EXACT>
	09 --> 10 with conflicts
		from <m-W-EXACT> to <m-R-EXACT>
	09 --> 13 with conflicts
		from <m-W-EXACT> to <m-R-EXACT>
	10 --> 13 with conflicts
		from <n-W-EXACT> to <n-R-EXACT>
	12 --> 13 with conflicts
		from <i-W-EXACT> to <i-R-EXACT>

****************** End of Dependence Graph ******************
