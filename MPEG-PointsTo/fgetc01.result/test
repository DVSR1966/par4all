
PROPER  EFFECTS 

void getimage(void)
{
   int i, j;
   unsigned char c;
   FILE *fp;
//             <    is written>: fp
   
   /* To try to avoid fp privatization */
   fp = (void *) 0;
//             <    is written>: i
   
   /* This loops should not be distributed.  On 2009/05/26, if the main()
        is removed, this bug too...
   
        FI: the function is never called and thus everything is parallel
        and loops can e distributed.
     */
   for(i = 0; i <= 63; i += 1)
//             <    is written>: j
      for(j = 0; j <= 63; j += 1) {
//             <may be read   >: *ANY_MODULE*:*ANYWHERE* 
//                               __IO_EFFECTS:LUNS[*]
//             <may be written>: *ANY_MODULE*:*ANYWHERE* 
//                               __IO_EFFECTS:LUNS[*]
         c = fgetc(fp);
//             <    is read   >: c i j
//             <    is written>: imagein_re[i][j]
         imagein_re[i][j] = c==0?0.0:1.0;
//             <    is read   >: i j
//             <    is written>: imagein_im[i][j]
         imagein_im[i][j] = 0.0;
      }
}
int main(int argc, char *argv[])
{
   //getimage();
   return 0;
}

POINTS-TO


// Points To IN: none


// Points To OUT: none

void getimage(void)
{

// Points To: none

   int i, j;

// Points To: none

   unsigned char c;

// Points To: none

   FILE *fp;

// Points To:
// fp -> *ANY_MODULE*:*NOWHERE*_b0 , EXACT

   
   /* To try to avoid fp privatization */
   fp = (void *) 0;

// Points To:
// fp -> *NULL_POINTER* , EXACT

   
   /* This loops should not be distributed.  On 2009/05/26, if the main()
        is removed, this bug too...
   
        FI: the function is never called and thus everything is parallel
        and loops can e distributed.
     */
   for(i = 0; i <= 63; i += 1)

// Points To:
// fp -> *NULL_POINTER* , EXACT

      for(j = 0; j <= 63; j += 1) {

// Points To:
// fp -> *NULL_POINTER* , EXACT

         c = fgetc(fp);

// Points To:
// fp -> *NULL_POINTER* , EXACT

         imagein_re[i][j] = c==0?0.0:1.0;

// Points To:
// fp -> *NULL_POINTER* , EXACT

         imagein_im[i][j] = 0.0;
      }
}

// Points To IN:
// argv[*] -> _argv_2[0] , EXACT


// Points To OUT:
// argv[*] -> _argv_2[0] , EXACT

int main(int argc, char *argv[])
{

// Points To:
// argv[*] -> _argv_2[0] , EXACT

   //getimage();
   return 0;
}

PROPER  EFFECTS WITH POINTS TO

void getimage(void)
{
   int i, j;
   unsigned char c;
   FILE *fp;
//             <    is written>: fp
   
   /* To try to avoid fp privatization */
   fp = (void *) 0;
//             <    is written>: i
   
   /* This loops should not be distributed.  On 2009/05/26, if the main()
        is removed, this bug too...
   
        FI: the function is never called and thus everything is parallel
        and loops can e distributed.
     */
   for(i = 0; i <= 63; i += 1)
//             <    is written>: j
      for(j = 0; j <= 63; j += 1) {
//             <may be read   >: *ANY_MODULE*:*ANYWHERE* 
//                               __IO_EFFECTS:LUNS[*]
//             <may be written>: *ANY_MODULE*:*ANYWHERE* 
//                               __IO_EFFECTS:LUNS[*]
         c = fgetc(fp);
//             <    is read   >: c i j
//             <    is written>: imagein_re[i][j]
         imagein_re[i][j] = c==0?0.0:1.0;
//             <    is read   >: i j
//             <    is written>: imagein_im[i][j]
         imagein_im[i][j] = 0.0;
      }
}
int main(int argc, char *argv[])
{
   //getimage();
   return 0;
}

 *********************** Use-Def Chains *********************


****************** End of Dependence Graph ******************
