This is a first Simple Example to demonstrate what pips can achieve on
fortran77 programs. Here you will automaticly parallelize a matrix
multiplication using the PIPS environment.

In this directory you should find the following files:
   - Makefile	  : A simple makefile to build the parallel and the sequential
   		    version of the matrix multiplication program (see bellow
		    for details).
   - matmul.f	  : The matrix multiplaction source code
   - matmul.tpips : The tpips script that paralelizes the matmul.f program
   - PipsCheck.sh : A simple script to test if the PIPS environment is set up
   - README	  : That file

1 - Do it fast

    1 Set up your PIPS environment (www.par4all.org for details)
    2 You need to install the lib gomp and you also need to change the limit
      of your sytem using the following command : "ulimit -s unlimited"
    3 Run the "make all" command -> this builds two executable versions from
      the same source file, one sequential and one parallel.
    4 execute "time ./matmul"
    5 execute "time ./matmul_par"
    6 Great you have already produced and executed two program versions from the
      same source file. Easy, isn't it?
    7 Now you can evaluate the speed up on your machine using this simple
      formula : sequantial_elapse_time / parallel_sequential_time. As an
      example on a workstation with 2 Intel Xeon X5440 the scrore of 5.5 is
      reached.

2 - The Makefile

Execute "make all" to build both the parallel version and the sequential
version of the program.

The "make parallel" and "make sequential" commands build respectively the
parallel and sequential version of the program. Note that the building process
of the parallel program also include the source file generation by PIPS.

3 - The Matrix Muliplication

The Matrix multiplications basically allocates three square matrices (with 1000
row). Then it inits the matrices with one and do the multiplication. It finally
checks the result matrix.

4 - The tpips script

This tpips script is used to say tpips what kind of transforamtions to apply
on the matmul.f source code. Here 5 phases are applied to get an OpenMp
version of the source code.

Once the PIPS environment loaded the "tpips matmul.tpips" command will produce
the parallel version of matmaul.f in the directory matmul.data/Src.

any question and remarks : contact@par4all.org
