C     This program is written for testing module TYPING
C
C
      PROGRAM TYPAGE
      LOGICAL L
      INTEGER I
      REAL*4 R
      REAL*8 D
      COMPLEX*8 C
      CHARACTER CH

C     Test for Assignment 
C     ===================
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      I = L                                                             0001
      I = I                                                             0002
      I = INT(R)                                                        0003
      I = INT(D)                                                        0004
      I = INT(C)                                                        0005
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      I = CH                                                            0006

!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      R = L                                                             0007
      R = REAL(I)                                                       0008
      R = R                                                             0009
      R = REAL(D)                                                       0010
      R = REAL(C)                                                       0011
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      R = CH                                                            0012

!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      D = L                                                             0013
      D = DBLE(I)                                                       0014
      D = DBLE(R)                                                       0015
      D = D                                                             0016
      D = DBLE(C)                                                       0017
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      D = CH                                                            0018

!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      C = L                                                             0019
      C = CMPLX(I)                                                      0020
      C = CMPLX(R)                                                      0021
      C = CMPLX(D)                                                      0022
      C = C                                                             0023
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      C = CH                                                            0024

!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      CH = L                                                            0025
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      CH = I                                                            0026
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      CH = R                                                            0027
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      CH = D                                                            0028
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      CH = C                                                            0029
      CH = CH                                                           0030

      L = L                                                             0031
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      L = I                                                             0032
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      L = R                                                             0033
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      L = D                                                             0034
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      L = C                                                             0035
!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      L = CH                                                            0036

C     Test for Arithmetic operators: +, -, *, /
C     =========================================
      I = 5-I                                                           0037
      I = INT(REAL(-I)+R)                                               0038
      I = INT(DBLE(R)/D)                                                0039
      I = INT(C*CMPLX(R))                                               0040

      I = INT(REAL(I)+R)                                                0041
      I = INT(DBLE(R)+D)                                                0042
!ERR - PROBIHITED
!ERROR: mixed complex and double arguments of '+' forbidden
      I = INT(D+C)                                                      0043
      I = INT(CMPLX(R)+C)                                               0044
      I = INT(C+CMPLX(R))                                               0045

!ERR - PROBIHITED
!ERROR: mixed complex and double arguments of '+' forbidden
      I = INT(DBLE(REAL(I)+R)+D+C)                                      0046
!ERR - PROBIHITED
!ERROR: mixed complex and double arguments of '+' forbidden
      I = INT(C+D+R+REAL(I))                                            0047

C     Test for power operator: **
C     Somes cases are prohibited by FORTRAN itself (just for checking errors)
C     =======================================================================
      I = I**I                                                          0048
      I = INT(REAL(I)**R)                                               0049
      I = INT(DBLE(I)**D)                                               0050
      I = INT(CMPLX(I)**C)                                              0051

      I = INT(R**I)                                                     0052
      I = INT(R**R)                                                     0053
      I = INT(DBLE(R)**D)                                               0054
      I = INT(CMPLX(R)**C)                                              0055

      I = INT(C**I)                                                     0056
      I = INT(C**CMPLX(R))                                              0057
!ERR - PROHIBITED
!ERROR: mixed complex and double arguments of '**' forbidden
      I = INT(C**D)                                                     0058
      I = INT(C**C)                                                     0059

      I = INT(D**I)                                                     0060
      I = INT(D**DBLE(R))                                               0061
      I = INT(D**D)                                                     0062
!ERR - PROHIBITED
!ERROR: mixed complex and double arguments of '**' forbidden
      I = INT(D**C)                                                     0063

C     Relational operators: <, <=, =, !=, >, >=
C     For this, we only have to test the casting of 2 arguments
C     Value of return is always BOOL
C     ==============================
      L = REAL(I).LT.R                                                  0064
      L = REAL(I).LE.R                                                  0065
      L = REAL(I).EQ.R                                                  0066
      L = REAL(I).NE.R                                                  0067
      L = REAL(I).GT.R                                                  0068
      L = REAL(I).GE.R                                                  0069

      L = R.LT.REAL(I)                                                  0070
      L = R.LE.REAL(I)                                                  0071
      L = R.EQ.REAL(I)                                                  0072
      L = R.NE.REAL(I)                                                  0073
      L = R.GT.REAL(I)                                                  0074
      L = R.GE.REAL(I)                                                  0075

!ERROR
!ERROR: Arguments of assignment '=' are not compatible
      I = R.GE.REAL(I)                                                  0076
!ERROR
!ERROR: #2 argument of '.GE.' must be INT, REAL, DOUBLE, COMPLEX, CHARACTER,  but not LOGICAL*4
      L = R.GE.L                                                        0077
!ERROR
!ERROR: #1 argument of '.GE.' must be INT, REAL, DOUBLE, COMPLEX, CHARACTER,  but not LOGICAL*4
      L = L.GE.I                                                        0078
!ERROR
!ERROR: mixed complex and double arguments of '.GE.' forbidden
      L = D.GE.C                                                        0079


C     Logical operators: NOT, AND, OR, EQV, NEQV
C     Value of return is always BOOL
C     ==============================
      L = .NOT.L                                                        0080
      L = L.AND.L                                                       0081
      L = L.OR.L                                                        0082
      L = L.EQV.L                                                       0083
      L = L.NEQV.L                                                      0084

!ERROR
!ERROR: #1 argument of '.OR.' must be LOGICAL,  but not INTEGER*4
      L = I.OR.L                                                        0085
!ERROR
!ERROR: #1 argument of '.AND.' must be LOGICAL,  but not REAL*4
      L = R.AND.L                                                       0086
!ERROR
!ERROR: #1 argument of '.AND.' must be LOGICAL,  but not REAL*4
!ERROR: #2 argument of '.OR.' must be LOGICAL,  but not REAL*4
      L = R.AND.L.OR.12.4E5                                             0087

C     User-defined functions
C     ======================
      R = USER_FUNC(I, R)                                               0088
!ERROR
!ERROR: invalid arg #1 to 'USER_FUNC', REAL*4 instead of INTEGER*4!
      R = USER_FUNC(R, R)                                               0089
!ERROR
!ERROR: invalid arg #2 to 'USER_FUNC', INTEGER*4 instead of REAL*4!
      R = USER_FUNC(I, I)                                               0090
!2 ERRORS
!ERROR: invalid arg #1 to 'USER_FUNC', REAL*4 instead of INTEGER*4!
!ERROR: invalid arg #2 to 'USER_FUNC', INTEGER*4 instead of REAL*4!
      R = USER_FUNC(R, I)                                               0091
!2 ERRORS
!ERROR: invalid arg #1 to 'USER_FUNC', REAL*4 instead of INTEGER*4!
!ERROR: invalid arg #1 to 'USER_FUNC', REAL*4 instead of INTEGER*4!
      R = USER_FUNC(R, USER_FUNC(R, R))                                 0092
!ERROR
!ERROR: Too few argument(s) to 'USER_FUNC' (1<2)!
      R = USER_FUNC(I)                                                  0093
!ERROR
!ERROR: Too many argument(s) to 'USER_FUNC' (4>2)!
      R = USER_FUNC(I, R, I, R)                                         0094

      CALL USER_SUB(I, R, C)                                            0095
!ERROR: invalid arg #2 to 'USER_SUB', INTEGER*4 instead of REAL*4!
      CALL USER_SUB(I, I, C)                                            0096
!ERROR: invalid arg #1 to 'USER_SUB', REAL*4 instead of INTEGER*4!
!ERROR: invalid arg #2 to 'USER_SUB', COMPLEX*8 instead of REAL*4!
!ERROR: invalid arg #3 to 'USER_SUB', INTEGER*4 instead of COMPLEX*8!
      CALL USER_SUB(R, C, I)                                            0097
!ERROR: Too few argument(s) to 'USER_SUB' (2<3)!
      CALL USER_SUB(I, R)                                               0098
!ERROR: Too many argument(s) to 'USER_SUB' (4>3)!
      CALL USER_SUB(I, R, C, L)                                         0099

C     Do-Loop
C     =======
      DO I = 1, 5                                                       0100
      ENDDO
!ERROR: Obsolescent non integer loop index 'R' (R822 ISO/IEC 1539:1991 (E))
      DO R = 1.0E0, 5.0E0, 1.5                                          0102
      ENDDO
!ERROR: Obsolescent non integer loop index 'D' (R822 ISO/IEC 1539:1991 (E))
      DO D = 1.0D0, 5.0D0, 1.5D0                                        0104
      ENDDO

!ERROR
!ERROR: Obsolescent non integer loop index 'D' (R822 ISO/IEC 1539:1991 (E))
!ERROR: Range of index 'D' must be Integer, Real or Double!
      DO D = 1, 5, C                                                    0106
      ENDDO
!ERROR
!ERROR: Obsolescent non integer loop index 'C' (R822 ISO/IEC 1539:1991 (E))
!ERROR: Index 'C' must be Integer, Real or Double!
      DO C = 1, 5, 1.5                                                  0108
      ENDDO
!ERROR
!ERROR: Obsolescent non integer loop index 'CH' (R822 ISO/IEC 1539:1991 (E))
!ERROR: Index 'CH' must be Integer, Real or Double!
      DO CH = 1, 5, 1.5                                                 0110
      ENDDO

!ERROR
!ERROR: Obsolescent non integer loop index 'L' (R822 ISO/IEC 1539:1991 (E))
!ERROR: Index 'L' must be Integer, Real or Double!
      DO L = .FALSE., .TRUE.                                            0112
      ENDDO

C     While Loop
C     ==========
      DO WHILE (.TRUE.)                                                 0114
      ENDDO

!ERROR
!ERROR: While condition must be a logical expression!
      DO WHILE (2+I)                                                    0116
      ENDDO

!ERROR
!ERROR: invalid arg #2 to 'USER_FUNC', LOGICAL*4 instead of REAL*4!
!ERROR: While condition must be a logical expression!
      DO WHILE (USER_FUNC(1, .TRUE.))                                   0118
      ENDDO

C     Condition Test
C     ==============
      IF (REAL(I).LT.R) THEN                                            0120
         STOP                                                           0121
      ELSEIF (DBLE(R).GT.D) THEN                                        0120
         STOP                                                           0123
      ELSE
         STOP                                                           0124
      ENDIF

!ERROR
!ERROR: Test condition must be a logical expression!
      IF (REAL(I)+R) THEN                                               0125
         STOP                                                           0126
!EEROR
      ELSE
!ERROR: Test condition must be a logical expression!
         IF (CH) THEN                                                   0127
            STOP                                                        0128
         ELSE
            STOP                                                        0129
         ENDIF
      ENDIF

      END

C     User-defined function
C     =====================
      REAL FUNCTION USER_FUNC(A, B)
      INTEGER A
      REAL B
      USER_FUNC = REAL(A)+B                                             0001
      END

      SUBROUTINE USER_SUB(I, R, C)
      INTEGER I
      REAL R
      COMPLEX C
      PRINT *, I, R, C                                                  0001
      END

