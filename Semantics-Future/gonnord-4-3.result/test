
TRANSFORMERS


//  T() {}

void run(void)
{

//  T(x,y) {}

   int x, y;

//  T(x,y) {x==0, y==0}

   x = y = 0;

//  T(x,y) {x==1, x#init==0, y#init==0, 0<=y, y<=1}

   if (flip())

//  T(x) {x==1, x#init==0, y==0}

      if (x>=0) {

//  T(x) {x==1, x#init==0, y==0}

         x++;

//  T() {x==1, y==0}

         if (y>x||y>1)

//  T() {0==-1}

            checking_error();
      }
      else

//  T() {0==-1}

         while (1)

//  T() {0==-1}

            ;
   else if (x==0) {

//  T(x) {x==1, x#init==0, y==0}

      x++;

//  T(y) {x==1, y==1, y#init==0}

      y++;

//  T() {x==1, y==1}

      if (y>x||y>1)

//  T() {0==-1}

         checking_error();
   }
   else

//  T() {0==-1}

      while (1)

//  T() {0==-1}

         ;

//  T(x) {1<=x, x#init<=x, 0<=y, y<=1}

   while (flip())

//  T(x) {x==x#init+1, 1<=x, y<=x, 0<=y, y<=1}

      if (x>=0) {

//  T(x) {x==x#init+1, 1<=x, 0<=y, y<=1}

         x++;

//  T() {1<=x, y<=x, 0<=y, y<=1}

         if (y>x||y>1)

//  T() {0==-1}

            checking_error();
      }
      else

//  T() {x+1<=0, 0<=y, y<=1}

         while (1)

//  T() {x+1<=0, 0<=y, y<=1}

            ;
}

PRECONDITIONS


//  P() {}

void run(void)
{

//  P() {}

   int x, y;

//  P(x,y) {}

   x = y = 0;

//  P(x,y) {x==0, y==0}

   if (flip())

//  P(x,y) {x==0, y==0}

      if (x>=0) {

//  P(x,y) {x==0, y==0}

         x++;

//  P(x,y) {x==1, y==0}

         if (y>x||y>1)

//  P() {0==-1}

            checking_error();
      }
      else

//  P() {0==-1}

         while (1)

//  P() {0==-1}

            ;
   else if (x==0) {

//  P(x,y) {x==0, y==0}

      x++;

//  P(x,y) {x==1, y==0}

      y++;

//  P(x,y) {x==1, y==1}

      if (y>x||y>1)

//  P() {0==-1}

         checking_error();
   }
   else

//  P() {0==-1}

      while (1)

//  P() {0==-1}

         ;

//  P(x,y) {x==1, 0<=y, y<=1}

   while (flip())

//  P(x,y) {1<=x, 0<=y, y<=1}

      if (x>=0) {

//  P(x,y) {1<=x, 0<=y, y<=1}

         x++;

//  P(x,y) {2<=x, 0<=y, y<=1}

         if (y>x||y>1)

//  P() {0==-1}

            checking_error();
      }
      else

//  P() {0==-1}

         while (1)

//  P() {0==-1}

            ;
}
