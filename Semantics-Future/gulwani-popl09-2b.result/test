
TRANSFORMERS


//  T() {}

void run(void)
{


//  T(i,n,x,x0,z,z0) {}

   int x, z, x0, z0, n, i;

//  T(x0) {0<=x0}

   x0 = rand();

//  T(z0) {0<=x0, 0<=z0}

   z0 = rand();

//  T(x) {x==x0, 0<=x, 0<=z0}

   x = x0;

//  T(z) {x==x0, z==z0, 0<=x, 0<=z}

   z = z0;

//  T(i) {i==0, x==x0, z==z0, 0<=x, 0<=z}

   i = 0;

//  T(n) {i==0, x==x0, z==z0, 0<=n, 0<=x, 0<=z}

   n = rand();

//  T() {i==0, x==x0, z==z0, 0<=n, n<=x+z, 0<=x, 0<=z}


   if (x0<n&&z0<n)

//  T(i,x,z) {i+x#init+z#init==i#init+x+z, i+x#init+z#init==x+z,
//    x#init==x0, z#init==z0, 0<=n, x<=n, x+z<=2n, x#init+1<=n,
//    z#init+1<=n, x#init<=x, 0<=x#init, z#init<=z, 0<=z#init}

      
      
      
      while (1)

//  T(i,x,z) {i==i#init+1, x+z==x#init+z#init+1, i+x0+z0<=2n,
//    x#init+1<=n, x0+1<=n, z0+1<=n, x#init<=x, x<=x#init+1, 0<=x0,
//    0<=z0}

         if (flip())

//  T(i,x) {i==i#init+1, x==x#init+1, i+x0+z0<=2n, x<=n, x0+1<=n,
//    z0+1<=n, x<=z, 0<=x0, 0<=z0}

            if (x<n&&z>x) {

//  T(x) {x==x#init+1, x<=n, x0+1<=n, z0+1<=n, x<=z, 0<=x0, 0<=z0}

               x++;

//  T(i) {i==i#init+1, x<=n, x0+1<=n, z0+1<=n, x<=z, 0<=x0, 0<=z0}

               i++;

//  T() {i+x0+z0<=2n, x<=n, x0+1<=n, z0+1<=n, x<=z, 0<=x0, 0<=z0}

               if (!(i<=n-x0+n-z0))

//  T() {0==-1}

                  checking_error();
            }
            else

//  T() {x0+1<=n, z0+1<=n, 0<=x0, 0<=z0}

               while (1)

//  T() {x0+1<=n, z0+1<=n, 0<=x0, 0<=z0}

                  ;
         else if (x<n&&z<=x) {

//  T(z) {z==z#init+1, x+1<=n, x0+1<=n, z0+1<=n, z<=x+1, 0<=x0, 0<=z0}

            z++;

//  T(i) {i==i#init+1, x+1<=n, x0+1<=n, z0+1<=n, z<=x+1, 0<=x0, 0<=z0}

            i++;

//  T() {i+x0+z0<=2n, x+1<=n, x0+1<=n, z0+1<=n, z<=x+1, 0<=x0, 0<=z0}

            if (!(i<=n-x0+n-z0))

//  T() {0==-1}

               checking_error();
         }
         else

//  T() {x0+1<=n, z0+1<=n, 0<=x0, 0<=z0}

            while (1)

//  T() {x0+1<=n, z0+1<=n, 0<=x0, 0<=z0}

               ;
}

PRECONDITIONS


//  P() {}

void run(void)
{


//  P() {}

   int x, z, x0, z0, n, i;

//  P(i,n,x,x0,z,z0) {}

   x0 = rand();

//  P(i,n,x,x0,z,z0) {0<=x0}

   z0 = rand();

//  P(i,n,x,x0,z,z0) {0<=x0, 0<=z0}

   x = x0;

//  P(i,n,x,x0,z,z0) {x==x0, 0<=x, 0<=z0}

   z = z0;

//  P(i,n,x,x0,z,z0) {x==x0, z==z0, 0<=x, 0<=z}

   i = 0;

//  P(i,n,x,x0,z,z0) {i==0, x==x0, z==z0, 0<=x, 0<=z}

   n = rand();

//  P(i,n,x,x0,z,z0) {i==0, x==x0, z==z0, 0<=n, 0<=x, 0<=z}


   if (x0<n&&z0<n)

//  P(i,n,x,x0,z,z0) {i==0, x==x0, z==z0, 0<=n, x+1<=n, z+1<=n, 0<=x,
//    0<=z}

      
      
      
      while (1)

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x<=n, x+z0+1<=n+z, x0+1<=n, z<=n,
//    z0+1<=n, x0<=x, x<=x0+z, z<=x+z0+1, 0<=x0, z0<=z, 0<=z0}

         if (flip())

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x<=n, x+z0+1<=n+z, x0+1<=n, z<=n,
//    z0+1<=n, x0<=x, x<=x0+z, z<=x+z0+1, 0<=x0, z0<=z, 0<=z0}

            if (x<n&&z>x) {

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x+1<=n, x+z0+1<=n+z, x0+1<=n,
//    z<=n, z0+1<=n, x0<=x, x<=x0+z, x+1<=z, z<=x+z0+1, 0<=x0, z0<=z,
//    0<=z0}

               x++;

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z-1, x<=n, x+z0<=n+z, x0+1<=n, z<=n,
//    z0+1<=n, x0+1<=x, x<=x0+z+1, x<=z, z<=x+z0, 0<=x0, z0<=z, 0<=z0}

               i++;

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x<=n, x+z0<=n+z, x0+1<=n, z<=n,
//    z0+1<=n, x0+1<=x, x<=x0+z+1, x<=z, z<=x+z0, 0<=x0, z0<=z, 0<=z0}

               if (!(i<=n-x0+n-z0))

//  P() {0==-1}

                  checking_error();
            }
            else

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x<=n, x+z0+1<=n+z, x0+1<=n, z<=n,
//    z0+1<=n, x0<=x, x<=x0+z, z<=x, z<=x+z0+1, 0<=x0, z0<=z, 0<=z0}

               while (1)

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x<=n, x+z0+1<=n+z, x0+1<=n, z<=n,
//    z0+1<=n, x0<=x, x<=x0+z, z<=x, z<=x+z0+1, 0<=x0, z0<=z, 0<=z0}

                  ;
         else if (x<n&&z<=x) {

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x+1<=n, x+z0+1<=n+z, x0+1<=n,
//    z<=n, z0+1<=n, x0<=x, x<=x0+z, z<=x, z<=x+z0+1, 0<=x0, z0<=z,
//    0<=z0}

            z++;

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z-1, x+1<=n, x+z0+2<=n+z, x0+1<=n,
//    z<=n+1, z0+1<=n, x0<=x, x+1<=x0+z, z<=x+1, z<=x+z0+2, 0<=x0,
//    z0+1<=z, 0<=z0}

            i++;

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x+1<=n, x+z0+2<=n+z, x0+1<=n,
//    z<=n+1, z0+1<=n, x0<=x, x+1<=x0+z, z<=x+1, z<=x+z0+2, 0<=x0,
//    z0+1<=z, 0<=z0}

            if (!(i<=n-x0+n-z0))

//  P() {0==-1}

               checking_error();
         }
         else

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x<=n, x+2z0+2<=n+2z, x+z0+1<=n+z,
//    x0+1<=n, x0+z0+2<=n+z, z<=n, z0+1<=n, x0<=x, x<=x0+z,
//    x+z0+1<=x0+2z, z<=x+z0+1, 0<=x0, 1<=z, z0<=z, 0<=z0}

            while (1)

//  P(i,n,x,x0,z,z0) {i+x0+z0==x+z, x<=n, x+2z0+2<=n+2z, x+z0+1<=n+z,
//    x0+1<=n, x0+z0+2<=n+z, z<=n, z0+1<=n, x0<=x, x<=x0+z,
//    x+z0+1<=x0+2z, z<=x+z0+1, 0<=x0, 1<=z, z0<=z, 0<=z0}

               ;
}
