void daxpy_r(int n, float da, float dx[n], float dy[n])
{
   int i;
   /* code for both increments equal to 1 */
   
   for(i = 0; i <= n-1; i += 1)
      dy[i] = dy[i]+da*dx[i];
}
void daxpy_r(int n, float da, float dx[n], float dy[n])
{
   //PIPS generated variable
   float F_0, RED0[1];
   //PIPS generated variable
   int i0, i1;
   //SAC generated temporary array
   a4sf pdata0 = {da, da, da, da};
   //PIPS generated variable
   v4sf vec00_0, vec10_0, vec20_0, vec30_0;
   /* code for both increments equal to 1 */
   
   SIMD_LOAD_V4SF(vec10_0, &pdata0[0]);
   for(i0 = 0; i0 <= 4*(n/4)-1; i0 += 4) {
      //PIPS:SAC generated v4sf vector(s)
      SIMD_LOAD_V4SF(vec20_0, &dx[i0]);
      SIMD_MULPS(vec00_0, vec10_0, vec20_0);
      SIMD_LOAD_V4SF(vec30_0, &dy[i0]);
      SIMD_ADDPS(vec30_0, vec30_0, vec00_0);
      SIMD_STORE_V4SF(vec30_0, &dy[i0]);
   }
   for(i1 = 4*(n/4); i1 <= n-1; i1 += 1) {
      RED0[0] = 0.000000;
      F_0 = pdata0[0]*dx[i1];
      RED0[0] = RED0[0]+F_0;
      dy[i1] = RED0[0]+dy[i1];
   }
   ;
}
