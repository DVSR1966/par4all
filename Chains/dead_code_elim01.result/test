POINTS TO
//  {}
int dead_code_elim01()
{
//  {}
   int i, *x, *y;
//  {(x,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(y,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}

   i = 2;
//  {(x,*ANY_MODULE*:*NOWHERE*_b0,-Exact-);(y,
//   *ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   x = &i;
//  {(x,i,-Exact-);(y,*ANY_MODULE*:*NOWHERE*_b0,-Exact-)}
   y = x;
//  {(x,i,-Exact-);(y,i,-Exact-)}
   *y = 1;
//  {(x,i,-Exact-);(y,i,-Exact-)}

   return *y;
}
PROPER EFFECTS WITH POINTS TO
int dead_code_elim01()
{
//             <    is declared>: i x[*] y[*]
   int i, *x, *y;
//             <    is written>: i
//             <    is referenced>: i

   i = 2;
//             <    is written>: x
//             <    is referenced>: x[*]
   x = &i;
//             <    is read   >: x
//             <    is written>: y
//             <    is referenced>: x[*] y[*]
   y = x;
//             <    is read   >: y
//             <    is written>: i
   *y = 1;
//             <    is read   >: i y

   return *y;
}

 *********************** Use-Def Chains *********************

	10 --> 12 with conflicts
		from <i-W-EXACT> to <i-R-EXACT>
	09 --> 12 with conflicts
		from <y-W-EXACT> to <y-R-EXACT>
	09 --> 10 with conflicts
		from <y-W-EXACT> to <y-R-EXACT>
	08 --> 09 with conflicts
		from <x-W-EXACT> to <x-R-EXACT>
	07 --> 10 with conflicts
		from <i-W-EXACT> to <i-W-EXACT>
	05 --> 09 with conflicts
		from <y[*]-WE-EXACT> to <y[*]-RE-EXACT>
		from <x[*]-WE-EXACT> to <x[*]-RE-EXACT>
	05 --> 08 with conflicts
		from <x[*]-WE-EXACT> to <x[*]-RE-EXACT>
	05 --> 07 with conflicts
		from <i-WE-EXACT> to <i-RE-EXACT>

****************** End of Dependence Graph ******************
USE DEF ELIMINATION
int dead_code_elim01()
{
//             <    is declared>: i x[*] y[*]
   int i, *x, *y;
//             <    is written>: i
//             <    is referenced>: i

   i = 2;
//             <    is written>: x
//             <    is referenced>: x[*]
   x = &i;
//             <    is read   >: x
//             <    is written>: y
//             <    is referenced>: x[*] y[*]
   y = x;
//             <    is read   >: y
//             <    is written>: i
   *y = 1;
//             <    is read   >: i y

   return *y;
}
int dead_code_elim01()
{
//             <    is declared>: i x[*] y[*]
   int i, *x, *y;


//             <    is written>: x
//             <    is referenced>: x[*]
   x = &i;
//             <    is read   >: x
//             <    is written>: y
//             <    is referenced>: x[*] y[*]
   y = x;
//             <    is read   >: y
//             <    is written>: i
   *y = 1;
//             <    is read   >: i y

   return *y;
}
